{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/pure/source/favicon.png","path":"favicon.png","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/README.md","path":"fonts/README.md","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.eot","path":"fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.ttf","path":"fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.woff","path":"fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/pure/source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/pure/source/images/thumb-default.png","path":"images/thumb-default.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/xingqiu-qrcode.jpg","path":"images/xingqiu-qrcode.jpg","modified":0,"renderable":1},{"_id":"themes/pure/source/js/application.js","path":"js/application.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/application.min.js","path":"js/application.min.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/insight.js","path":"js/insight.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/plugin.min.js","path":"js/plugin.min.js","modified":0,"renderable":1},{"_id":"themes/pure/source/css/style.min.css","path":"css/style.min.css","modified":0,"renderable":1},{"_id":"themes/pure/source/images/donate/alipayimg.png","path":"images/donate/alipayimg.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/donate/wechatpayimg.png","path":"images/donate/wechatpayimg.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/favatar/SzsFox-logo.png","path":"images/favatar/SzsFox-logo.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/favatar/chuangzaoshi-logo.png","path":"images/favatar/chuangzaoshi-logo.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/favatar/idesign-logo.png","path":"images/favatar/idesign-logo.png","modified":0,"renderable":1},{"_id":"themes/pure/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/plugin.js","path":"js/plugin.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/plugin.js.map","path":"js/plugin.js.map","modified":0,"renderable":1},{"_id":"themes/pure/source/css/style.css","path":"css/style.css","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.svg","path":"fonts/iconfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"44d718de9a3cdd63b3e7540fcc0082819a82c125","modified":1559749616448},{"_id":"themes/pure/.DS_Store","hash":"6d8c6077bf2a524e61dd08c47576b47c89c20838","modified":1559749820109},{"_id":"themes/pure/.gitignore","hash":"dbb41a2f30c98cb9de173d82736c46266c901cda","modified":1559749024640},{"_id":"themes/pure/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1559749024640},{"_id":"themes/pure/README.cn.md","hash":"a634af4addbb57088935e060e8ec6035ea7bab76","modified":1559749024640},{"_id":"themes/pure/README.md","hash":"5861cec81712af9197a210fd5212d007aad8b0de","modified":1559749024641},{"_id":"themes/pure/_config.yml","hash":"c8ffaeafb7f52aad2eb1cc08de327c43f4fe41c9","modified":1559786338916},{"_id":"themes/pure/_config.yml.example","hash":"4714f87fdb6d4a6ea5ece84f4fe37f922337f14d","modified":1559749024641},{"_id":"themes/pure/package.json","hash":"a61723eead5cae2c4d9f0f05cf40d2de7c286fee","modified":1559749024654},{"_id":"source/_posts/AutoMapper.md","hash":"4a10a7a65f008740420653a485947d37dc8fa2ec","modified":1559526744681},{"_id":"source/_posts/Axios-Post-Form-Data.md","hash":"8e36b4efb49047d7f4960f78831a8ab4ca36c55e","modified":1559748552345},{"_id":"source/_posts/C-HttpWebRequest-ClientCertificates.md","hash":"bdff5a5b6c42094862dea5566ac4cca029479a7f","modified":1559526744682},{"_id":"source/_posts/CV.md","hash":"9277ade208808100fdd483723baead953a0b1311","modified":1552124033319},{"_id":"source/_posts/Docker Nginx Reverse Proxy.md","hash":"451f82c0ac4fc90cc41b36d1df7c508c99b949f7","modified":1559526744683},{"_id":"source/_posts/Docker run Jenkins.md","hash":"2cee6a3103a8e492bc5adbbdbc1dffdfe54b3233","modified":1559526744683},{"_id":"source/_posts/Docker-compose-Run-Redis.md","hash":"22b95e728dee2d35d6eab832586228f64d7fb486","modified":1552124033320},{"_id":"source/_posts/Docker-compose.md","hash":"c3a1660093dffddb3e76d42482807dcabf818ab4","modified":1559526744684},{"_id":"source/_posts/Docker-run-Nginx.md","hash":"b14e77d17a90d4349b3b5510620a1fa2457ec99a","modified":1559526744685},{"_id":"source/_posts/Docker.md","hash":"00be5fed512a4dece2b6855e84791feaeab94a1f","modified":1559526744686},{"_id":"source/_posts/ELK Stack.md","hash":"dd0ffff26b1aa3a3703d6b7c7b5541e53374dcc1","modified":1559526744687},{"_id":"source/_posts/ESLint-Javascript-程式碼規範檢查工具.md","hash":"a2a807052267e991551be921c290f5baa6ae56ab","modified":1559526744687},{"_id":"source/_posts/Express-Node-js-Web.md","hash":"60dfe2657e68fe001171393b8a892d1a1f383184","modified":1560150925545},{"_id":"source/_posts/GCP K8s Quickstart.md","hash":"ab49aa7354d86119a9f22be047dba86c56aa26de","modified":1559526744688},{"_id":"source/_posts/GCP-Container-Registry.md","hash":"4791ac14a19c6353c0a2fe1549dbbea439fa825d","modified":1559526744689},{"_id":"source/_posts/GRPC-C-Quickstart.md","hash":"2005ffddc59c68c4d3bc6bec6e1255b87688f073","modified":1559526744689},{"_id":"source/_posts/Gitea.md","hash":"030920194b7e04e5f7f36a8c618e490a64892bec","modified":1559526744690},{"_id":"source/_posts/Gitlab-server-on-Docker.md","hash":"efb8912056d9267cc9e8a8c96aeeb8116fe9fc6a","modified":1559526744690},{"_id":"source/_posts/Go-lang-學習.md","hash":"fc7bf5f334374602cfd0aafe1d4c7c47033d8556","modified":1559526744691},{"_id":"source/_posts/Gogs-Git-webhook.md","hash":"ec1eb61efa733e3a5d2a31cbe30088e8055431c0","modified":1552124033322},{"_id":"source/_posts/Google-Cloud-Pub-Sub-Node-js-Client.md","hash":"3551ccd6ed984010708ed9ac8ab44abceaa50249","modified":1560767570777},{"_id":"source/_posts/Google-Cloud-Pub-Sub-Qwik-Start-Command-Line.md","hash":"8b07a96ca55a4b76e740d4cb8df4de213f4325c4","modified":1560152080246},{"_id":"source/_posts/Google-OAuth.md","hash":"fa14a1731feacbf7d43c95d4db688d45b3e1360d","modified":1559808052176},{"_id":"source/_posts/Grafana 監控.md","hash":"36c83e84dfa106322de5b2774fc05bf31eca9721","modified":1559526744691},{"_id":"source/_posts/HttpWebRequestExpect100continue.md","hash":"cad3e9c7524d0d7e989b24d661f52cda6f8827bb","modified":1559526744692},{"_id":"source/_posts/Jenkins-Build-Net-Core-With-Pipeline.md","hash":"ee002b992e1f313790137e0580025ff9e8913585","modified":1551949348588},{"_id":"source/_posts/Jenkins-Pipeline-Blue-Ocean.md","hash":"e652da4d94f9f921b443dfb5d8734d85d3adc183","modified":1559526744692},{"_id":"source/_posts/Jenkins-Pipeline-Parallel-平行處理.md","hash":"e788f93cd94f75b45e84b2f800cbdbb997d4630d","modified":1559526744693},{"_id":"source/_posts/Jenkins-pipeline.md","hash":"6ffb0f9b164766b7cbc6c7f221b5ed53fd0a1fd1","modified":1559526744693},{"_id":"source/_posts/Json-Web-Token.md","hash":"8ed86ba749799a154a5482bc5c14d47c28ee83e0","modified":1560760923374},{"_id":"source/_posts/Kafka學習.md","hash":"e09da8c9407a9ea56ba47ababdc6e50f51b2eb7e","modified":1559526744694},{"_id":"source/_posts/Kubernetes-Logging-with-Fluentd.md","hash":"a3ec95d60409daea47dbb23e533591aa4ec20963","modified":1559526744694},{"_id":"source/_posts/Linq-Join-Lambda-expression.md","hash":"03b9b14ae8cf11b94686c83f4bb3eebddf98c8bb","modified":1559526744695},{"_id":"source/_posts/Mysql-on-Docker.md","hash":"d29566a1f1ce7a285a3c2d317821ee40049d1c51","modified":1559526744695},{"_id":"source/_posts/Net-Core-CLI.md","hash":"252138f3221870a3495d267ba8bdefaca6efd0f9","modified":1559526744695},{"_id":"source/_posts/Net-Core-Nlog.md","hash":"1489e8447df3479ac66d8ad903f5ac140d3711fc","modified":1559526744696},{"_id":"source/_posts/Net-Core-SKD-For-Linux.md","hash":"4d941cffeacfb696c1ce1c113c66d4edfd7799a7","modified":1559526744696},{"_id":"source/_posts/Node-Js-Json-Web-Token.md","hash":"6e7d902d042e28542a7ca3b282f5e6ede7ca8252","modified":1559719868923},{"_id":"source/_posts/Node-js-Hello-world.md","hash":"daaaea147b0e47601dc53c4f484c245bee5d5f0e","modified":1559526744696},{"_id":"source/_posts/Node-js-ORM-Sequelize.md","hash":"6d6cb13489a09683cec815091487297a5b14110d","modified":1559526744697},{"_id":"source/_posts/Node-js-Web-on-Docker.md","hash":"9da6699238f814a04e92d745a7a0f78e7457d9fd","modified":1559526744697},{"_id":"source/_posts/Protocol-buffers.md","hash":"42808ec57daa92999d0feef10a960c1367a24b93","modified":1559526744697},{"_id":"source/_posts/Python-Hello-World.md","hash":"2f0c830f74a25d502ce41e59395886424caaab6a","modified":1559526744698},{"_id":"source/_posts/Python-Web-Application-Django.md","hash":"5dff266dac82c857a9980ea68be100c278efb921","modified":1559526744698},{"_id":"source/_posts/Python-redis.md","hash":"5a2def9b67a633cb65cff5c0518404e0a8a9e9e7","modified":1559526744699},{"_id":"source/_posts/Rancher.md","hash":"2000f5b70cf3b2793a151385e2203c39889f4fc5","modified":1559526744699},{"_id":"source/_posts/SQL-Server-2017-安裝-登入.md","hash":"237b20f845cb36b268ea56b5e5d9cb7053756c39","modified":1559526744699},{"_id":"source/_posts/Sequelize-sequelize-auto.md","hash":"505ec85fbb2039f414b7fad6887df8f9611789eb","modified":1560503201108},{"_id":"source/_posts/Slack-Incoming-Webhooks.md","hash":"e9b4f7684c7e7710adc95bdcd21177b9b903ee4d","modified":1559526744700},{"_id":"source/_posts/Sonar-scanner-msbuild-credentials-must-be-passed-in-both-begin-and-end-steps-or-not-at-all.md","hash":"98ee846975c19f86cf108b5f3d72a7b24cdea67e","modified":1559526744700},{"_id":"source/_posts/SonarLint-Sonqrqube-Server-Custom-Rules.md","hash":"a6d267ba94223e08c860917a6e5271a8540ceada","modified":1559526744701},{"_id":"source/_posts/SonarQube-Server-on-Docker.md","hash":"ea03ef2affa512375b78b2170603c447f93cf378","modified":1559526744701},{"_id":"source/_posts/SonarQube-Server-pluin-StyleCop.md","hash":"e9f61546a6d1c65d8e1d640e4213fcf4f46d4932","modified":1559526744701},{"_id":"source/_posts/SonarQube-程式碼品質分析工具.md","hash":"5209040f3a85ff4210cbcd14cfec7f1b8537fe8a","modified":1559526744702},{"_id":"source/_posts/SonarQubeScanner for MSBuild 使用 Jenkins Plugin.md","hash":"060736e46f079cd974db0ef06d953b4b61c96f80","modified":1559526744702},{"_id":"source/_posts/SonarQubeScanner-for-MSBuild-使用-Jenkins-Pipeline.md","hash":"c6983b84e99e0b398b4ab1b36dff75891e5ec69c","modified":1559526744703},{"_id":"source/_posts/Sonarqube-in-visual-studio-SonarLint.md","hash":"3f6b35e9fb65115c386b64d7cc6195304ba1c09a","modified":1559526744703},{"_id":"source/_posts/Sonarqube-權限設定.md","hash":"f21810f374c9a1145c51cbb8418f2a0e9c2f59fa","modified":1559526744703},{"_id":"source/_posts/Visual-Studio-Code-存檔自動排版.md","hash":"cd43bfa60b09175d53ba5f42119efe4558efe384","modified":1559526744703},{"_id":"source/_posts/Vue-js-Hello-World.md","hash":"8041a388a676e5ab6d2305bfdf558bdc00f638ae","modified":1559526744704},{"_id":"source/_posts/android-遠程調試-WebView.md","hash":"7ba8b2cb8c9b909e61be307b283cef254fd64b84","modified":1559526744704},{"_id":"source/_posts/curl-for-windows.md","hash":"7a6ff6b409dc209fdf6544c12b724a0c8a56482a","modified":1559526744705},{"_id":"source/_posts/docker-compose-run-ELK.md","hash":"3234dd946e47f855d018c167b5ec7e3f4fc580a4","modified":1559526744706},{"_id":"source/_posts/kubectl-常用指令.md","hash":"f3a6016b888ff11ba7818957f53130c9de549b7d","modified":1559526744706},{"_id":"source/_posts/mac-code.md","hash":"8ae76db9141a89c06b273f4a8529572de3e5180d","modified":1559526744707},{"_id":"source/_posts/mac-ll.md","hash":"8eadca71385951d560f948fb6b14b66292643eef","modified":1559526744707},{"_id":"source/_posts/redis-lua-script.md","hash":"dd4a18a3b9c788da3a0c3dbf041988ae33bbcff4","modified":1551949348592},{"_id":"source/_posts/surge.md","hash":"a2179964ca00061dffa322f080bbc7f6717d9d18","modified":1559526744707},{"_id":"source/_posts/使用-Hexo-建立-Github-Blog.md","hash":"94ed0e4b7e0df613b27191b6ea6b5775ed0d07f6","modified":1559718744870},{"_id":"source/_posts/升級-Jenkins-ver-2-151-發生問題.md","hash":"5e24984928205dec88aa85b12f558644328fa6b4","modified":1559718743104},{"_id":"themes/pure/.git/FETCH_HEAD","hash":"e947c87fd37fa7ab4b3b9e992f6fbf5f4e97283a","modified":1559791567645},{"_id":"themes/pure/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1559749024636},{"_id":"themes/pure/.git/config","hash":"7ec6421043b0f1135362e6c04e1f42251478e733","modified":1559749024637},{"_id":"themes/pure/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1559749012567},{"_id":"themes/pure/.git/index","hash":"d762865b5b6e130e84451ec524bb956124dc0953","modified":1559791694485},{"_id":"themes/pure/.git/packed-refs","hash":"9cee8f644cf1f7192db9ba4dc79507a6938fc2e6","modified":1559749024634},{"_id":"themes/pure/languages/default.yml","hash":"167ea0db98f4db156ea68c4644f64c0287ae2b6f","modified":1559749024642},{"_id":"themes/pure/languages/en.yml","hash":"167ea0db98f4db156ea68c4644f64c0287ae2b6f","modified":1559749024642},{"_id":"themes/pure/languages/zh-CN.yml","hash":"057ebc043f09449af9768791c89c86dfc2938365","modified":1559749024642},{"_id":"themes/pure/languages/zh-TW.yml","hash":"6d27c3114be539b8783ffce944f68b2e26a8c3b9","modified":1559749024643},{"_id":"themes/pure/layout/about.ejs","hash":"4f5c769e183249b12eb9d3141432bc0039519730","modified":1559749024652},{"_id":"themes/pure/layout/archive.ejs","hash":"ded5d953b35666e30f4c6e48e2d2c62af8d95ebf","modified":1559749024652},{"_id":"themes/pure/layout/books.ejs","hash":"6c64719cd7071b5319b01339aa524fdaab391385","modified":1559749024652},{"_id":"themes/pure/layout/categories.ejs","hash":"22a2bc1712dd9ba1a3027e875d636132d334fb00","modified":1559749024652},{"_id":"themes/pure/layout/category.ejs","hash":"3ca5651bbce7b0c280c906468f2eb18c2e55ebcb","modified":1559749024653},{"_id":"themes/pure/layout/index.ejs","hash":"07825d8d8b21eb7b694f5585567b9df5c5a91a60","modified":1559749024653},{"_id":"themes/pure/layout/layout.ejs","hash":"a29ab2e881954a252bfc0dc1a7eb5aa52768dd2a","modified":1559749024653},{"_id":"themes/pure/layout/links.ejs","hash":"77c5d1561e2c606c5b3bb39610133d84324074df","modified":1559749024653},{"_id":"themes/pure/layout/page.ejs","hash":"5c27475c176627e6e2e6a16172eb6980e56bcaff","modified":1559749024653},{"_id":"themes/pure/layout/post.ejs","hash":"5c27475c176627e6e2e6a16172eb6980e56bcaff","modified":1559749024653},{"_id":"themes/pure/layout/repository.ejs","hash":"fe4b3e051a8b0debe9ee22c2cc2cc935d92ee23f","modified":1559749024653},{"_id":"themes/pure/layout/tag.ejs","hash":"df60564c162f7ad3422f8959dfea19351857a7cd","modified":1559749024653},{"_id":"themes/pure/layout/tags.ejs","hash":"29f19a6ed10f8b1f069259a7aeaaacddcfaa2ed4","modified":1559749024654},{"_id":"themes/pure/scripts/thumbnail.js","hash":"e667a611f9baac270281b765832020d50bf8fb7f","modified":1559749024666},{"_id":"themes/pure/source/.DS_Store","hash":"162c5a84c8124b1b0fc69f0ad596f1ed36c2dc8d","modified":1559749825210},{"_id":"themes/pure/source/favicon.png","hash":"89875d3b018552e396fc5f0bd8ff5d9f5d4a5d71","modified":1559749024668},{"_id":"themes/pure/screenshot/pure-theme-black.png","hash":"10b40f398af7eb7e8ba2bf2f2a959d8779fc1fe1","modified":1559749024655},{"_id":"themes/pure/screenshot/pure-theme-blue.png","hash":"6146890a68d5ea9d343c48d50151ddd5a2a1872c","modified":1559749024655},{"_id":"themes/pure/screenshot/pure-theme-green.png","hash":"12ec0c6033cb2762839fdf75434bbb4fbf946022","modified":1559749024656},{"_id":"themes/pure/screenshot/pure-theme-purple.png","hash":"9855d2eb0acd23370209354f232471df8f4f72e2","modified":1559749024657},{"_id":"themes/pure/screenshot/pure.png","hash":"8f4cfd8d7edfa4fbffdf375291302d9807f5cc1c","modified":1559749024657},{"_id":"source/_posts/Google-OAuth/2019-06-05-16-37-30.png","hash":"e9dd83daf80b7069696bacaa0bd3c7ab07ee67ec","modified":1559727612994},{"_id":"source/_posts/Google-OAuth/2019-06-05-16-41-51.png","hash":"8efac96bacb434ecc3c2947327119f8d48160350","modified":1559727612995},{"_id":"source/_posts/Google-OAuth/2019-06-05-17-04-27.png","hash":"59a22e360f2018c4ceb8772094dc299dd4886f98","modified":1559727612995},{"_id":"source/_posts/Google-OAuth/2019-06-05-16-43-42.png","hash":"76bc44e1551aef97034a3b8a9abc7daa65ea68b8","modified":1559727612995},{"_id":"source/_posts/Google-OAuth/2019-06-05-17-10-13.png","hash":"b9e9635622239b208c032bfae5668f2e89900aa2","modified":1559727612995},{"_id":"source/_posts/Google-OAuth/2019-06-05-17-08-51.png","hash":"27cd52fb7942d1c3d1706fa035b7d0abbc40ebf7","modified":1559727612995},{"_id":"source/_posts/Json-Web-Token/2019-06-17-16-40-23.png","hash":"0c0d303cf27af3666a4714f13109ba8abfd7d77c","modified":1560760831727},{"_id":"source/_posts/Sequelize-sequelize-auto/2019-06-14-15-43-05.png","hash":"60d599a11dc7d68225c980a856baac28c11f7414","modified":1560498732264},{"_id":"source/_posts/Sequelize-sequelize-auto/2019-06-14-15-43-19.png","hash":"60d599a11dc7d68225c980a856baac28c11f7414","modified":1560498732264},{"_id":"source/_posts/Sequelize-sequelize-auto/2019-06-14-15-46-33.png","hash":"161868320142360b3989d9537b9b4f4abafd8e40","modified":1560498732264},{"_id":"themes/pure/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1559749012569},{"_id":"themes/pure/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1559749012567},{"_id":"themes/pure/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1559749012569},{"_id":"themes/pure/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1559749012570},{"_id":"themes/pure/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1559749012570},{"_id":"themes/pure/.git/hooks/pre-commit.sample","hash":"33729ad4ce51acda35094e581e4088f3167a0af8","modified":1559749012568},{"_id":"themes/pure/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1559749012571},{"_id":"themes/pure/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1559749012568},{"_id":"themes/pure/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1559749012570},{"_id":"themes/pure/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1559749012570},{"_id":"themes/pure/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1559749012571},{"_id":"themes/pure/.git/info/exclude","hash":"bb5a85730dcf100facee799c05cc4f6affec0745","modified":1559749012566},{"_id":"themes/pure/.git/logs/HEAD","hash":"ca828fb0d6b49ce91bf1bc3833ac0b9aa7edec9b","modified":1559749024636},{"_id":"themes/pure/_source/404/index.md","hash":"8d493f624fdd29c8d0266767e56f343d549e16d8","modified":1559749024641},{"_id":"themes/pure/_source/about/index.md","hash":"9c95cabb533409d06daefc4295021ad199761efc","modified":1559749024641},{"_id":"themes/pure/_source/_data/gallery.yml","hash":"e2b3fad87be3d1cfde1effa655d39678ee90907e","modified":1559749024641},{"_id":"themes/pure/_source/_data/links.yml","hash":"aa443a4508550820c77c2a4f6abff1d38ad85054","modified":1559749024641},{"_id":"themes/pure/_source/books/index.md","hash":"cf4163959c23244059cbbbc1c0fe379cc3b2cb73","modified":1559749024642},{"_id":"themes/pure/_source/categories/index.md","hash":"5d2a4f103d27bebbe3eef1604649d0f5c6d86ac6","modified":1559749024642},{"_id":"themes/pure/_source/links/index.md","hash":"febcf87eb0ab3c5080578275d25f3970bba39625","modified":1559749024642},{"_id":"themes/pure/_source/tags/index.md","hash":"42e9c904ea63b0a7dd4033e2e8f153225bc5cda5","modified":1559749024642},{"_id":"themes/pure/_source/repository/index.md","hash":"ed0e082c30f233dd5c140d188f1e4bce44bdbf79","modified":1559749024642},{"_id":"themes/pure/layout/_common/footer.ejs","hash":"cdc48ec70d9202b947f2a9334234d038d7014a7d","modified":1559749024643},{"_id":"themes/pure/layout/_common/head.ejs","hash":"a48ef0fa22712b29ec044b9e5134461f3a21c10d","modified":1559749024643},{"_id":"themes/pure/layout/_common/header.ejs","hash":"3d739d1e2b2991927c08ec222db123830a44a519","modified":1559749024643},{"_id":"themes/pure/layout/_common/script.ejs","hash":"0031114d2a58f8601c2869f78ceedc75a10be90d","modified":1559749024643},{"_id":"themes/pure/layout/_common/social.ejs","hash":"a35a2610e9da762df96587b76b51470507a88cad","modified":1559749024643},{"_id":"themes/pure/layout/_partial/archive-book.ejs","hash":"977f97f3636947006ad738e502858c46d4cd5ec7","modified":1559749024644},{"_id":"themes/pure/layout/_partial/archive-category.ejs","hash":"9c364fd6b5172890784141802f5f466241d233fd","modified":1559749024644},{"_id":"themes/pure/layout/_partial/archive-link.ejs","hash":"fe4d9bf526d8176683cea89b8561ced571374db0","modified":1559749024644},{"_id":"themes/pure/layout/_partial/archive-list.ejs","hash":"c66c86d6a6a90e00494c380603426fc0f4006311","modified":1559749024644},{"_id":"themes/pure/layout/_partial/archive-post.ejs","hash":"13039fec017332029122ef99901755fcecbfc8ea","modified":1559749024644},{"_id":"themes/pure/layout/_partial/archive-repository.ejs","hash":"e39dc762d9fe238cede462532e40eaa3d8651122","modified":1559749024644},{"_id":"themes/pure/layout/_partial/archive-tag.ejs","hash":"5de90244c3cedad531cccc03c40e5f9a3aef3c61","modified":1559749024644},{"_id":"themes/pure/layout/_partial/archive.ejs","hash":"4d6793f50d41fbd47dc50aa36b24d496006bba6c","modified":1559749024645},{"_id":"themes/pure/layout/_partial/article-about.ejs","hash":"7b80319daeb63401d1745b81cd9a6d1d21a4fb60","modified":1559749024645},{"_id":"themes/pure/layout/_partial/article.ejs","hash":"0f9b71de0087d1f777d92c5a0f3873971aec5a5b","modified":1559749024645},{"_id":"themes/pure/layout/_partial/item-post.ejs","hash":"9f755b0da1ea928dece32c2050d8a04b3a9fb13b","modified":1559749024645},{"_id":"themes/pure/layout/_partial/pagination.ejs","hash":"41a319642da5af07d6cfb8525796aa610b721879","modified":1559749024645},{"_id":"themes/pure/layout/_partial/sidebar-about.ejs","hash":"e10ea0176ba87e64888234bafedc01c92544352c","modified":1559749024647},{"_id":"themes/pure/layout/_partial/sidebar-toc.ejs","hash":"152538ceceb0fdef65c46470ebf0189f7b891c5b","modified":1559749024647},{"_id":"themes/pure/layout/_partial/sidebar.ejs","hash":"2aa8a9f90838e7c105e75e6d3d03cbf860bb1239","modified":1559749024647},{"_id":"themes/pure/layout/_script/analytics.ejs","hash":"e756a81f8c20a187fb863b9689f2f1fa15e2f4e1","modified":1559749024649},{"_id":"themes/pure/layout/_script/comment.ejs","hash":"6f951510bab9dc15474b6664e0329defccf29a30","modified":1559749024649},{"_id":"themes/pure/layout/_script/douban.ejs","hash":"143087db0573772b0bdaf7f93312553158942ec7","modified":1559749024650},{"_id":"themes/pure/layout/_script/fancybox.ejs","hash":"8f1be01e70a15b2c31ae57d8c6bce54622ebf8a7","modified":1559749024650},{"_id":"themes/pure/layout/_script/mathjax.ejs","hash":"f618393ab971b2faa80d541f2e6a553d9ace9816","modified":1559749024650},{"_id":"themes/pure/layout/_script/pv.ejs","hash":"fb9b5f16029f2ccef4b83cf4facfdcdd748b65b4","modified":1559749024650},{"_id":"themes/pure/layout/_script/repository.ejs","hash":"234e6a9d8b129dc19e916cb9f927a27b04758180","modified":1559749024650},{"_id":"themes/pure/layout/_script/search.ejs","hash":"7be33dc260ce788aa1a2cd3bd0386d95057533cb","modified":1559749024650},{"_id":"themes/pure/layout/_search/baidu.ejs","hash":"67aab280a3ea34429f086cc5c3de7de17727c567","modified":1559749024651},{"_id":"themes/pure/layout/_search/index-mobile.ejs","hash":"c726e234c0166da69fdfbd3dd613a5eaf4c80258","modified":1559749024651},{"_id":"themes/pure/layout/_search/index.ejs","hash":"f8d5a9c3f777250f5fb6512bba585307f784d5cd","modified":1559749024651},{"_id":"themes/pure/layout/_search/insight.ejs","hash":"4af3e92ef98bedba9680d45699cb04dde4640536","modified":1559749024651},{"_id":"themes/pure/layout/_search/swiftype.ejs","hash":"4baeca36e410181300ae7d47ba1fb4755bcfcff0","modified":1559749024651},{"_id":"themes/pure/layout/_widget/archive.ejs","hash":"af8ad7f62877764b75d5272d9d899fd6c8e3845c","modified":1559749024651},{"_id":"themes/pure/layout/_widget/board.ejs","hash":"acd27451be52703e670ce0b313f2da6fa24071e4","modified":1559749024651},{"_id":"themes/pure/layout/_widget/category.ejs","hash":"331b7642a0f58b9088b937436ab39076a4c5dd7e","modified":1559749024652},{"_id":"themes/pure/layout/_widget/recent_posts.ejs","hash":"8942d60311797a591ba2d157c5cdd23e85ceb694","modified":1559749024652},{"_id":"themes/pure/layout/_widget/tag.ejs","hash":"487628925da5fcac91463cdad3d9e55d071bd5ed","modified":1559749024652},{"_id":"themes/pure/layout/_widget/tagcloud.ejs","hash":"3291108e5411c48b2c5b3e17adace6ffa90d1c29","modified":1559749024652},{"_id":"themes/pure/source/fonts/README.md","hash":"c5772b99ad81291fb137b330813f866bdceea0a3","modified":1559749024669},{"_id":"themes/pure/source/fonts/iconfont.eot","hash":"6819d9bb643bdeafc17bfecb0746ae641b018fdf","modified":1559749024669},{"_id":"themes/pure/source/fonts/iconfont.ttf","hash":"9b8837f9f79cf6ab794736301d0665345183a20c","modified":1559749024670},{"_id":"themes/pure/source/fonts/iconfont.woff","hash":"78d29194287b8885d25212048c4f787705212a6e","modified":1559749024671},{"_id":"themes/pure/source/images/.DS_Store","hash":"9e206b091db8d7f0afb7152f7349fd36ea672783","modified":1559784801719},{"_id":"themes/pure/source/images/avatar.jpg","hash":"c861b761c43d7aded1af9cf75158236b944c6f4b","modified":1559749548640},{"_id":"themes/pure/source/images/thumb-default.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1559749024672},{"_id":"themes/pure/source/images/xingqiu-qrcode.jpg","hash":"ef2c2848dc79db6df7c752510651ed8ba57f2daf","modified":1559749024673},{"_id":"themes/pure/source/js/application.js","hash":"46d1fb207ce5f0acb83803f927985dfcea86f9ef","modified":1559749024673},{"_id":"themes/pure/source/js/application.min.js","hash":"34d765e982c7d6360c37f82202d99f63ac40e408","modified":1559749024673},{"_id":"themes/pure/source/js/insight.js","hash":"298e8ca42517984bd26f34caa4c45560b0e909ad","modified":1559749024673},{"_id":"source/_posts/Google-OAuth/2019-06-05-16-53-17.png","hash":"45e73bc1ba889cb379b64fb645aff7511abcaa49","modified":1559727612995},{"_id":"source/_posts/Google-OAuth/2019-06-05-16-58-18.png","hash":"a0569daaf6ef9324dcd35fa26c1d798e2a539653","modified":1559727612995},{"_id":"themes/pure/layout/_partial/post/copyright.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1559785133352},{"_id":"themes/pure/source/js/plugin.min.js","hash":"07fe34638f9832702c5f81d8583c5e4e8b3d9659","modified":1559749024676},{"_id":"themes/pure/.git/refs/heads/master","hash":"97bb9e2bebb4387b1e775e2af7ce890278175989","modified":1559749024636},{"_id":"themes/pure/layout/_partial/post/category.ejs","hash":"fcee6b4aef8b6c4627831ff8dbb2d73478511426","modified":1559749024645},{"_id":"themes/pure/layout/_partial/post/comment.ejs","hash":"3c0da69fcea6ccfd97b82d50e740107a88eec5c4","modified":1559749024645},{"_id":"themes/pure/layout/_partial/post/date.ejs","hash":"7d4979652998abf92a64bfae8157b70d6e514057","modified":1559749024646},{"_id":"themes/pure/layout/_partial/post/donate.ejs","hash":"a251dc34d660601a2e8b7d98b3bfe2b9023dbbce","modified":1559749024646},{"_id":"themes/pure/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1559749024646},{"_id":"themes/pure/layout/_partial/post/nav.ejs","hash":"95eabc0fe4033ec61b240a16eeaf7dc62a9e3da1","modified":1559749024646},{"_id":"themes/pure/layout/_partial/post/pv.ejs","hash":"ec3ccf322432afc2761f860c5a3000ac34d46e4c","modified":1559749024646},{"_id":"themes/pure/layout/_partial/post/tag.ejs","hash":"39f53ead07f75c181a7ba93e586dd1b8171620f1","modified":1559749024646},{"_id":"themes/pure/layout/_partial/post/thumbnail.ejs","hash":"080d5c5f3e95accf51893a7092695fe32d34a087","modified":1559749024647},{"_id":"themes/pure/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1559749024647},{"_id":"themes/pure/layout/_partial/post/wordcount.ejs","hash":"bd06c4c8449ed96aabf655fe1ae3be1f0707b81e","modified":1559749024647},{"_id":"themes/pure/layout/_script/_analytics/baidu-analytics.ejs","hash":"f314be7860c1d5930f1600d010e3120ba5c85325","modified":1559749024647},{"_id":"themes/pure/layout/_script/_analytics/google-analytics.ejs","hash":"54f1dc9375cbdb65464e0ac1b58847aa5e8bc6a5","modified":1559749024648},{"_id":"themes/pure/layout/_script/_analytics/tencent-analytics.ejs","hash":"77defb41a1613a758ff5a6a5128c6107fc584190","modified":1559749024648},{"_id":"themes/pure/layout/_script/_comment/disqus.ejs","hash":"a051e3eddc75586e69131c29ab8c89d69626e0fd","modified":1559749024648},{"_id":"themes/pure/layout/_script/_comment/gitalk.ejs","hash":"fb01f1631c3ae7fe6211dc03233506cb344229be","modified":1559749024648},{"_id":"themes/pure/layout/_script/_comment/gitment.ejs","hash":"a64852076483395738a398deb4c10bdb0f3b7b71","modified":1559749024648},{"_id":"themes/pure/layout/_script/_comment/livere.ejs","hash":"5ab997d5ee4475d2f89f882fab4a52648dbe0e30","modified":1559749024649},{"_id":"themes/pure/layout/_script/_comment/valine.ejs","hash":"acf81f9a59dc45f197d723f70484de5fcd166577","modified":1559749024649},{"_id":"themes/pure/layout/_script/_comment/youyan.ejs","hash":"095649a173573d03b5845c2e331ec7be976b152a","modified":1559749024649},{"_id":"themes/pure/layout/_script/_search/baidu.ejs","hash":"9b60ffa2e2725a993e9cecfb81ddedd9b9361011","modified":1559749024649},{"_id":"themes/pure/layout/_script/_search/insight.ejs","hash":"3543c11d060feaf9381b5d87564b01ffef0e0a59","modified":1559749024649},{"_id":"themes/pure/source/css/style.min.css","hash":"1d23abc76726ebe042f7df4749f00f8f73338444","modified":1559749024668},{"_id":"themes/pure/source/images/donate/alipayimg.png","hash":"9562f23f2eb57841c65dc769b6cc43a2cf0efa94","modified":1559749024671},{"_id":"themes/pure/source/images/donate/wechatpayimg.png","hash":"c0844d9a633696cb00ae64fde06f0f924f63b596","modified":1559749024672},{"_id":"themes/pure/source/images/favatar/SzsFox-logo.png","hash":"d71fcc73b7bc2a439d8c7ba461137856d190bd76","modified":1559749024672},{"_id":"themes/pure/source/images/favatar/chuangzaoshi-logo.png","hash":"7fa5734072050952159a02d330bbc008b5a99122","modified":1559749024672},{"_id":"themes/pure/source/images/favatar/idesign-logo.png","hash":"6b150a2dbb9912b7a7662255c27e4d4baaecee71","modified":1559749024672},{"_id":"themes/pure/source/js/jquery.min.js","hash":"5a9dcfbef655a2668e78baebeaa8dc6f41d8dabb","modified":1559749024674},{"_id":"themes/pure/source/js/plugin.js","hash":"a8524d42b8621bfaa06602a163c6a1f82702b91d","modified":1559749024674},{"_id":"themes/pure/source/js/plugin.js.map","hash":"1730c0cc660f863120aca0a439d7264e2e245fc5","modified":1559749024675},{"_id":"themes/pure/.git/objects/pack/pack-306099a4e3ec30f80e1d902c6a323c9f94486d08.idx","hash":"d9bcba3fb2f8778803183b8ca5a72290b48a3b1b","modified":1559749019296},{"_id":"themes/pure/.git/objects/pack/pack-4354c27f2b8afecc810088dd4e56537be09bd7a0.idx","hash":"c89775f46afaa965f079a58315634076b1d402d5","modified":1559749024627},{"_id":"themes/pure/source/css/style.css","hash":"3b693ce41c2e35ece4773593e94b4c17aeaee02f","modified":1559749024667},{"_id":"themes/pure/source/fonts/iconfont.svg","hash":"25929e6e74f7027acd1f6467a67e95b153bcd8d5","modified":1559749024670},{"_id":"themes/pure/.git/logs/refs/heads/master","hash":"ca828fb0d6b49ce91bf1bc3833ac0b9aa7edec9b","modified":1559749024636},{"_id":"themes/pure/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1559749024636},{"_id":"themes/pure/.git/logs/refs/remotes/origin/HEAD","hash":"ca828fb0d6b49ce91bf1bc3833ac0b9aa7edec9b","modified":1559749024636},{"_id":"themes/pure/screenshot/pure.psd","hash":"a31cea40b45bdc31f051fca2f1e2f4ecbaee1a94","modified":1559749024666},{"_id":"themes/pure/.git/objects/pack/pack-306099a4e3ec30f80e1d902c6a323c9f94486d08.pack","hash":"c3f05b3feaaac7ce8fbb6b997a9df7698cee7687","modified":1559749019294},{"_id":"themes/pure/.git/objects/pack/pack-4354c27f2b8afecc810088dd4e56537be09bd7a0.pack","hash":"44cc6e76a6aba704b030bcfcb8babde0736d72ab","modified":1559749024626},{"_id":"public/atom.xml","hash":"e2b81dd76d04f72d4dc9d540b545f79a5d824715","modified":1560767578145},{"_id":"public/baidusitemap.xml","hash":"1496ef79d4938661a05cc08454e59e5c14c10532","modified":1560765064431},{"_id":"public/content.json","hash":"27b16513907311384355a4265706f70c19abbd31","modified":1560767578144},{"_id":"public/search.json","hash":"965ed1dfd8488e18f780e75574b9da98f2260f66","modified":1560767579641},{"_id":"public/sitemap.xml","hash":"a9ee33007c6cb7cadaed9967b0ef9017b910cc9b","modified":1560767579642},{"_id":"public/2019/06/17/Json-Web-Token/index.html","hash":"b60ecdf3ca1c30659a1b0d970c5218595ac71977","modified":1560765065816},{"_id":"public/2019/06/14/Sequelize-sequelize-auto/index.html","hash":"d048200f00776911f7874ceb1be7849f339f8cf9","modified":1560765065816},{"_id":"public/2019/06/10/Google-Cloud-Pub-Sub-Qwik-Start-Command-Line/index.html","hash":"bae08a9994fc0655a85a4e60601a9e665db9290c","modified":1560765065816},{"_id":"public/2019/06/10/Google-Cloud-Pub-Sub-Node-js-Client/index.html","hash":"3a2c9c99121101147b1e644b64e0d2d9c99a624e","modified":1560767579713},{"_id":"public/2019/06/05/Google-OAuth/index.html","hash":"fc2c4e4df1752f79737197557eeaec5cc2fd39fd","modified":1560765065816},{"_id":"public/2019/06/05/Node-Js-Json-Web-Token/index.html","hash":"06a4f9ba634a35294e8d8ca425a1c4565f2f6eeb","modified":1560765065816},{"_id":"public/2019/05/31/Axios-Post-Form-Data/index.html","hash":"804da40a0f67f6ceea4ff4e28821fde8a135dbd3","modified":1560765065816},{"_id":"public/2019/05/30/Node-js-ORM-Sequelize/index.html","hash":"88685c53b30e40f20b507dce12a0aee1875e22df","modified":1560765065816},{"_id":"public/2019/05/28/Mysql-on-Docker/index.html","hash":"3441f4a2e5844c826239c72056bc9bbc3fb86b47","modified":1560765065816},{"_id":"public/2019/05/27/Node-js-Web-on-Docker/index.html","hash":"a19d7fc28bb425381a5969d8506a4638a9d73736","modified":1560765065816},{"_id":"public/2019/05/24/Gitlab-server-on-Docker/index.html","hash":"ee8f6a76dd64d2df464a4c6d14a3b353b90c0527","modified":1560765065816},{"_id":"public/2019/05/21/ESLint-Javascript-程式碼規範檢查工具/index.html","hash":"105dadb490e8da10823e510c191db5cd213918e9","modified":1560765065816},{"_id":"public/2019/05/20/Node-js-Hello-world/index.html","hash":"e6671a72baaacda59df62b98dd64d82193d4bf65","modified":1560765065817},{"_id":"public/2019/05/20/Vue-js-Hello-World/index.html","hash":"77d7eabf5c32ee9228ff46c97c80ca91af31a3fc","modified":1560765065817},{"_id":"public/2019/05/15/Visual-Studio-Code-存檔自動排版/index.html","hash":"8034f67359870eaaad2d755bf8ba162d9b183641","modified":1560765065817},{"_id":"public/2019/05/14/SonarLint-Sonqrqube-Server-Custom-Rules/index.html","hash":"6bc8183d2e36ae017eb1ae2e734519662f055691","modified":1560765065817},{"_id":"public/2019/05/13/Express-Node-js-Web/index.html","hash":"dcbebbbce94e4a813689374d2b46a328f52af2df","modified":1560765065817},{"_id":"public/2019/05/06/android-遠程調試-WebView/index.html","hash":"a34be8f3774fb07c336796b1060a4b59927f891d","modified":1560765065817},{"_id":"public/2019/04/23/Sonar-scanner-msbuild-credentials-must-be-passed-in-both-begin-and-end-steps-or-not-at-all/index.html","hash":"380780e772d20ab4ba06cd20410b85e31afbea3f","modified":1560765065817},{"_id":"public/2019/04/18/Linq-Join-Lambda-expression/index.html","hash":"7f6683f4afba5b7ba4156ae3bcc1318fde0f0ed1","modified":1560765065817},{"_id":"public/2019/04/17/Sonarqube-權限設定/index.html","hash":"c0516a2aacf0539ed9ed2a807ae132ec9ed3d3e9","modified":1560765065817},{"_id":"public/2019/04/15/Sonarqube-in-visual-studio-SonarLint/index.html","hash":"c8e1c98013b5fab743d782c872c2f3c217118fd4","modified":1560765065817},{"_id":"public/2019/04/02/docker-compose-run-ELK/index.html","hash":"77b90b95533dbc2ddabe155a9e53715444366400","modified":1560765065817},{"_id":"public/2019/04/01/Kubernetes-Logging-with-Fluentd/index.html","hash":"7ca2cd90399b9f5788e70511d1cd0386b9661091","modified":1560765065817},{"_id":"public/2019/03/20/HttpWebRequestExpect100continue/index.html","hash":"d3cf459f70cf0ea4d48611620c3ed8f8d7ac232c","modified":1560765065817},{"_id":"public/2019/03/19/C-HttpWebRequest-ClientCertificates/index.html","hash":"69212bae9a61e244727442a2456339b0e344cf1f","modified":1560765065817},{"_id":"public/2019/03/15/kubectl-常用指令/index.html","hash":"66d2dce46233a3c81cd7deb756ec57c6e664b47f","modified":1560765065818},{"_id":"public/2019/03/07/curl-for-windows/index.html","hash":"ab650b4bcc1722b39e0021d7084d8837bb4c3eb4","modified":1560765065818},{"_id":"public/2019/03/07/Slack-Incoming-Webhooks/index.html","hash":"a95173b165db44a1b01355ceb4c7353577659c0d","modified":1560765065818},{"_id":"public/2019/02/27/mac-code/index.html","hash":"670a47a0842de55290f9c43783c23fcbb4014585","modified":1560765065818},{"_id":"public/2019/02/25/Grafana 監控/index.html","hash":"daf4e5d91cca3293e84d84b203fbc7b423569789","modified":1560765065818},{"_id":"public/2019/01/18/SonarQube-Server-pluin-StyleCop/index.html","hash":"983c6289d83378546c837da3f90750ea297c052f","modified":1560765065818},{"_id":"public/2019/01/15/SonarQube-Server-on-Docker/index.html","hash":"1d735cbb22ff6872bfb31c32bad024ff88ec05fa","modified":1560765065818},{"_id":"public/2019/01/15/SonarQubeScanner-for-MSBuild-使用-Jenkins-Pipeline/index.html","hash":"c271a762bf6106b5ae883ad9f436c6fa60a66717","modified":1560765065818},{"_id":"public/2019/01/09/ELK Stack/index.html","hash":"d7032d520bf36665098204f348f1762574a7c42a","modified":1560765065818},{"_id":"public/2018/12/28/GCP K8s Quickstart/index.html","hash":"632ffcf6e7be8a2292a2a951ac709a8570a60364","modified":1560765065818},{"_id":"public/2019/01/04/Net-Core-Nlog/index.html","hash":"f8487d157840ab4f252ac72f9380e574100dec7f","modified":1560765065818},{"_id":"public/2018/12/28/Net-Core-SKD-For-Linux/index.html","hash":"736d1c63fbb6fa4df68f52fc1378c9b0f70ea634","modified":1560765065818},{"_id":"public/2018/12/28/Net-Core-CLI/index.html","hash":"163434a74b116fc35dd581e403c692949decc75c","modified":1560765065818},{"_id":"public/2018/12/26/GCP-Container-Registry/index.html","hash":"d42e7cf194a3802ad875ba936b1f5f7bdcb76bd4","modified":1560765065818},{"_id":"public/2018/12/26/mac-ll/index.html","hash":"8f8047e02cb23263ee844da028f1e6f51fdc5513","modified":1560765065819},{"_id":"public/2018/12/25/Gitea/index.html","hash":"ff48b945a9983590548d3abc7fe9e125253c8670","modified":1560765065819},{"_id":"public/2018/12/24/redis-lua-script/index.html","hash":"1eca4171c62ad1fc49b716b427d018a4696224f5","modified":1560765065819},{"_id":"public/2018/12/21/Jenkins-Pipeline-Parallel-平行處理/index.html","hash":"5987433a13458cff9df72589467810247c9c01c4","modified":1560765065819},{"_id":"public/2018/12/20/Jenkins-Pipeline-Blue-Ocean/index.html","hash":"61287bc66ddae367b2ab6b1a7614de29b050c096","modified":1560765065819},{"_id":"public/2018/12/12/Docker-compose-Run-Redis/index.html","hash":"00b09c606fe43605cfc0660070aeb1b73fd96512","modified":1560765065819},{"_id":"public/2018/12/12/Docker-compose/index.html","hash":"21de6c8cf515b966468d5d3d27b8095365bca307","modified":1560765065819},{"_id":"public/2018/12/11/GRPC-C-Quickstart/index.html","hash":"bc0dd8e4f7de4c8d18f06a55eff1a0899d32cee9","modified":1560765065819},{"_id":"public/2018/12/11/Protocol-buffers/index.html","hash":"e146e27d44d7b68b9ca805c25d92b6c19ade2121","modified":1560765065819},{"_id":"public/2018/12/10/Docker Nginx Reverse Proxy/index.html","hash":"fcab704e2913e1b9e56b17d462227d294619c7e9","modified":1560765065819},{"_id":"public/2018/12/07/Docker-run-Nginx/index.html","hash":"44c86efcf5552697c1ddcdae9c89f40d1311c3d5","modified":1560765065819},{"_id":"public/2018/12/06/Python-redis/index.html","hash":"9369ac9c5941bf0ad29a07ea0da3cb704e705e0c","modified":1560765065819},{"_id":"public/2018/11/28/Gogs-Git-webhook/index.html","hash":"9f911979b02aeee650f07213367e0c2db56ba4ed","modified":1560765065819},{"_id":"public/2018/11/27/Jenkins-Build-Net-Core-With-Pipeline/index.html","hash":"d80f2a59ba7d094bbe54756f31cf78baa66883a6","modified":1560765065819},{"_id":"public/2018/11/23/Jenkins-pipeline/index.html","hash":"10bd8b930ea783aee2df7f7b96e609b7dce8c4b3","modified":1560765065819},{"_id":"public/2018/11/21/SonarQubeScanner for MSBuild 使用 Jenkins Plugin/index.html","hash":"22526ade8acf3a873917d6bff9b2a8a70785b53d","modified":1560765065819},{"_id":"public/2018/11/20/升級-Jenkins-ver-2-151-發生問題/index.html","hash":"3e2ccba313277b7bf34528868bb7ea4db1b35477","modified":1560765065820},{"_id":"public/2018/11/20/SonarQube-程式碼品質分析工具/index.html","hash":"1fe8d70acd2a680b9d34c3394ef309bd9969c31f","modified":1560765065820},{"_id":"public/2018/11/14/Python-Web-Application-Django/index.html","hash":"5d11b4cd4161af174631d55d695638313ee2a283","modified":1560765065820},{"_id":"public/2018/11/14/Python-Hello-World/index.html","hash":"cb851dfcc641bf3a5619ea557d04fcc31f390272","modified":1560765065820},{"_id":"public/2018/11/08/AutoMapper/index.html","hash":"75126f503f565a4df8615a4d593b11336e4dd695","modified":1560765065820},{"_id":"public/2018/11/07/Rancher/index.html","hash":"4532376d80add33f72e3b9889df33dbd67e13f97","modified":1560765065820},{"_id":"public/2018/11/05/CV/index.html","hash":"7aec4c810c045b89c10cf7547bcd62c1730f02a3","modified":1560765065820},{"_id":"public/2018/11/02/surge/index.html","hash":"cd912ef9a5fd0b516b4e3074820eb08796046572","modified":1560765065820},{"_id":"public/2018/10/19/Docker/index.html","hash":"14a5e1e6b4bf5b56bff166a66cc64cbcc7ff154c","modified":1560765065820},{"_id":"public/2018/10/19/Docker run Jenkins/index.html","hash":"90fbb02779c1f5c97928cbb33c8ce3983ae03487","modified":1560765065820},{"_id":"public/2018/10/17/SQL-Server-2017-安裝-登入/index.html","hash":"a062ec1f1540fb5e815adccd7c1987661332af63","modified":1560765065820},{"_id":"public/2018/10/17/Kafka學習/index.html","hash":"fbaf3429b05572f17647724e34d52b43b4c3118a","modified":1560765065820},{"_id":"public/2018/10/17/Go-lang-學習/index.html","hash":"5976ae72f0fc3b5bd6cefc8829056bdcfa774357","modified":1560765065820},{"_id":"public/2018/10/17/使用-Hexo-建立-Github-Blog/index.html","hash":"4a0b69a1607f54835d2d2f9b34107aff08aacf88","modified":1560765065820},{"_id":"public/archives/index.html","hash":"28224f46e73f4c0ad91d44ce6801fb4d6c6c52ac","modified":1560765065820},{"_id":"public/archives/2018/index.html","hash":"095a99617b57a631f1e4bca3492351bdccb7858b","modified":1560765065820},{"_id":"public/archives/2018/10/index.html","hash":"e5a6fa86f48d918e0e56d97d6b5e56962c9550da","modified":1560765065820},{"_id":"public/archives/2018/11/index.html","hash":"ad9eef8fc49044e5b99211ec556e4bfaac664546","modified":1560765065821},{"_id":"public/archives/2018/12/index.html","hash":"b6c8cb56f8509c5b6c82c442ce8145148c971dda","modified":1560765065821},{"_id":"public/archives/2019/index.html","hash":"0f43183abd4a8dbf9bb25e43c8b90820771c0e6c","modified":1560765065821},{"_id":"public/archives/2019/01/index.html","hash":"bfbc8ca2770de58589d8244977cf368e48d0508f","modified":1560765065821},{"_id":"public/archives/2019/02/index.html","hash":"4f08fa4ca204eb74a868bbace3f1c97c954cdc95","modified":1560765065821},{"_id":"public/archives/2019/03/index.html","hash":"bf4611ab822999599895ca6f99e8c7cf7c4af7c9","modified":1560765065821},{"_id":"public/archives/2019/04/index.html","hash":"90eb07bbabe2444ebf7f44a5fc2f745a52a45c50","modified":1560765065821},{"_id":"public/archives/2019/05/index.html","hash":"4241c6c390c90361309f4cb1f0c30c029a572284","modified":1560765065821},{"_id":"public/archives/2019/06/index.html","hash":"54cdaadfa4cb51e1b1ac06e3ad224ec636e5a74c","modified":1560765065821},{"_id":"public/categories/AutoMapper/index.html","hash":"f9a2002d37f0f72439846301ff07ff86c5e5086b","modified":1560765065821},{"_id":"public/categories/Axios/index.html","hash":"e56922fa72ce43f86bad6c1706b3b75a8da299e0","modified":1560765065821},{"_id":"public/categories/HttpWebRequest/index.html","hash":"8c21a2348646c240bd2f0e38c899e169b68a2926","modified":1560765065821},{"_id":"public/categories/Nginx/index.html","hash":"474e8e2c4c44f90fc964ddbed5fcc70ff2f9a9ff","modified":1560765065821},{"_id":"public/categories/Jenkins/index.html","hash":"9c171c83a1523901d8550fa716f3475e4c9d012d","modified":1560765065821},{"_id":"public/categories/Redis/index.html","hash":"a50c2ca52180a00620b5a738a33434524e97f269","modified":1560765065821},{"_id":"public/categories/Docker-compose/index.html","hash":"e877f4060e1361e529f8fdeadfb13629d693f003","modified":1560765065821},{"_id":"public/categories/ELK-Stack/index.html","hash":"fe63c2dfd4ca6833894a96c6167cf4e1a4fbb323","modified":1560765065821},{"_id":"public/categories/Docker/index.html","hash":"e87acaee4bf257501d0798052bd9727fa9a165fd","modified":1560765065822},{"_id":"public/categories/ESLint/index.html","hash":"75eb0dbd67b5f909d3bca4867aa7ea2205ebf7d6","modified":1560765065822},{"_id":"public/categories/Express/index.html","hash":"5229d78427824349eb3eee45e6b499da480977bb","modified":1560765065822},{"_id":"public/categories/k8s/index.html","hash":"508a4275d600fb791a5749623613bf5b8eb065d8","modified":1560765065822},{"_id":"public/categories/GCP-Container-Registry/index.html","hash":"9d2de7eab80a37d7c5a95e5e5827705b0fa19237","modified":1560765065822},{"_id":"public/categories/GRPC/index.html","hash":"f93130c78d298d082cbd46eea158e4819be1e57d","modified":1560765065822},{"_id":"public/categories/Gitea/index.html","hash":"e9c67b2fba289347889bf7e9cd0a1902e47d6a29","modified":1560765065822},{"_id":"public/categories/Gitlab/index.html","hash":"0a39deb89e0570bfb065a7fa79f6ea2abc500792","modified":1560765065822},{"_id":"public/categories/Go/index.html","hash":"80615d4beb9f1dc22586e186266fcc9a7eaba26b","modified":1560765065822},{"_id":"public/categories/Gogs/index.html","hash":"9a8d040030bbe345073dcfecb0e531095154ac4d","modified":1560765065822},{"_id":"public/categories/GCP-Pub-Sub/index.html","hash":"64b6f896a1610019621bd3ef3453e6c51a5bc4a1","modified":1560765065822},{"_id":"public/categories/Google-OAuth/index.html","hash":"8d44c83c203e1b3f45a30c3991a4dbcfdf9fe8b9","modified":1560765065822},{"_id":"public/categories/Grafana/index.html","hash":"0466af0fd2b4a5257c98d381e6f93f2e13b224a7","modified":1560765065822},{"_id":"public/categories/JWT/index.html","hash":"3c04c61326b9251cf51386ce78eb57d668f6775b","modified":1560765065822},{"_id":"public/categories/Kafka/index.html","hash":"3ed499cfd71b3749f70df49786425225818af65e","modified":1560765065822},{"_id":"public/categories/Fluentd/index.html","hash":"654aaf0981133d5991326638277c20792b2dcc7a","modified":1560765065822},{"_id":"public/categories/Linq/index.html","hash":"479af37811ce6f5f958480d78098290a010b63e4","modified":1560765065822},{"_id":"public/categories/Mysql/index.html","hash":"a2881a95e1fa5b58f9b60b179c1b8bec7a0c5212","modified":1560765065823},{"_id":"public/categories/net-core/index.html","hash":"10241fe402826cc96b334ff4943f7ceb5edf45cf","modified":1560765065823},{"_id":"public/categories/Protocol-buffers/index.html","hash":"832d72c54ad558964783b2e12c438f21db1e7915","modified":1560765065823},{"_id":"public/categories/Node-js/index.html","hash":"85058570f26d592444c12a306e06c598f6534871","modified":1560765065823},{"_id":"public/categories/Node-JS/index.html","hash":"e9c1a614e96ab9f4f4a26b449f1d9d8a46909fa8","modified":1560765065823},{"_id":"public/categories/python/index.html","hash":"1626c1cbdd99a2ca20c9ac0d6a3f84e9a8f9b7ec","modified":1560765065823},{"_id":"public/categories/Python/index.html","hash":"4b622ec4d8cdd7d009d0cd36ee53bdabc73bc3ab","modified":1560765065823},{"_id":"public/categories/Rancher/index.html","hash":"e224def633999072d4784275c223adac0c101a7d","modified":1560765065823},{"_id":"public/categories/SQL-Server/index.html","hash":"1d9f8ac32d9f32fe27886fad00dc2bb67a514ea0","modified":1560765065823},{"_id":"public/categories/Sequelize/index.html","hash":"c54a187e2d96cca27908bebae39b9099ccb62e0f","modified":1560765065823},{"_id":"public/categories/Slack/index.html","hash":"d9d93c05e54b1f2475bff1547ecfd56b3c3d716f","modified":1560765065823},{"_id":"public/categories/SonarQube/index.html","hash":"05ced8635d5e24974353f4df56474ed8cb9e1b79","modified":1560765065823},{"_id":"public/categories/SonarLint/index.html","hash":"43217c58c38d4a5747f0267d428aa784437da1ba","modified":1560765065823},{"_id":"public/categories/sonarlint/index.html","hash":"c0d19c0356ac15de73b6dc8dfb9356e3af8725ff","modified":1560765065823},{"_id":"public/categories/Visual-Studio-Code/index.html","hash":"c4dea39e580fc81e61b959ded768ee4520454b45","modified":1560765065823},{"_id":"public/categories/Vue-js/index.html","hash":"75a705b6c1ab123c69d717bafe06c3072f8a52b7","modified":1560765065823},{"_id":"public/categories/android/index.html","hash":"ec9746ee417397720f6e309315b0fe301c3aa2c1","modified":1560765065823},{"_id":"public/categories/curl/index.html","hash":"c4ed33942660623097c017e47977815d8ae2d1d0","modified":1560765065823},{"_id":"public/categories/Kubernetes/index.html","hash":"4cd7a54c1cda7b13e5e405ad6ce35033cf4ea405","modified":1560765065824},{"_id":"public/categories/mac/index.html","hash":"4da5f6655805ee5e3d9c390ca265fa5bbfe918ad","modified":1560765065824},{"_id":"public/categories/redis/index.html","hash":"a3a9480a959f8b582570b62c95f2b4753e7cac8d","modified":1560765065824},{"_id":"public/categories/surge/index.html","hash":"6dd41f89f61d20a83be106dacd1b9994bf4df80e","modified":1560765065824},{"_id":"public/categories/Hexo/index.html","hash":"f542453d9b50b25e6acb5845c1df155b427970c7","modified":1560765065824},{"_id":"public/index.html","hash":"c641237a952ac751e4eedb2630f20ac90541f9f9","modified":1560767579713},{"_id":"public/page/2/index.html","hash":"83bdcf15696f8af9649b90ef83b685dfb59492a7","modified":1560765065824},{"_id":"public/page/3/index.html","hash":"ae56dcc19360d9a198a6d0f9fc3dcea5b5085611","modified":1560765065824},{"_id":"public/page/4/index.html","hash":"58f0dde40af59cb60f139a41e76865588f9c6d70","modified":1560765065824},{"_id":"public/page/5/index.html","hash":"7103908b3e2f91a1e45c03f258f59cb97570a0ce","modified":1560765065824},{"_id":"public/page/6/index.html","hash":"bca86511a7752ee62b0ab9a3150372e1b0afec89","modified":1560765065824},{"_id":"public/page/7/index.html","hash":"c83f34a7ae0fe2ec7d493bc02d900d6310804ded","modified":1560765065824},{"_id":"public/tags/AutoMapper/index.html","hash":"48c4d9720151220a9b424070a0b35fb632c7d78a","modified":1560765065824},{"_id":"public/tags/C/index.html","hash":"b6c90e4ff07eab26a1d0c09b6e44676d4a4fd019","modified":1560765065824},{"_id":"public/tags/Axios/index.html","hash":"17a6d7d94e82b097f3890a32822f8e5ae6d5d413","modified":1560765065824},{"_id":"public/tags/Node-JS/index.html","hash":"debe79306239ce4f10330b0dcbd3a6dc2b36c80c","modified":1560765065825},{"_id":"public/tags/HttpWebRequest/index.html","hash":"877bb4e888c0611ee785a28a874a9452ec67a057","modified":1560765065825},{"_id":"public/tags/筆記/index.html","hash":"fa54423177b39e272502c403acdbcb584fc698ab","modified":1560765065825},{"_id":"public/tags/CV/index.html","hash":"998fb7aed1a908f36a41eb74451257ab4ae33158","modified":1560765065825},{"_id":"public/tags/Docker/index.html","hash":"1dc463ddba980b61a99c8a33199128b01c0398ca","modified":1560765065825},{"_id":"public/tags/Nginx/index.html","hash":"a24a62ba1fb6a7dfd0463ff6fc50e367cce7a2de","modified":1560765065825},{"_id":"public/tags/Jenkins/index.html","hash":"25ecdf9db2fbc36c7a7c22a54312854e346ff32b","modified":1560765065825},{"_id":"public/tags/Redis/index.html","hash":"ccec2d16a90dd27cdc156695bd3524d8e8a769ee","modified":1560765065825},{"_id":"public/tags/Docker-compose/index.html","hash":"d23b700649d7e2c34d2e533b38a0c61e0e51d5b9","modified":1560765065825},{"_id":"public/tags/Visual-Studio-Code/index.html","hash":"d194a432ea3194133c106fe69842cb536e32ef80","modified":1560765065825},{"_id":"public/tags/ELK-Stack/index.html","hash":"1f058fab7d7abe9c4ab983f457f2c05400b73a45","modified":1560765065825},{"_id":"public/tags/Elasticsearch/index.html","hash":"3348e87e429d4d71715bb90b4b4a99f351b1308e","modified":1560765065825},{"_id":"public/tags/Kibana/index.html","hash":"c96aec0b9c3f92a0e38b1fce221fb7d0f8658bd7","modified":1560765065825},{"_id":"public/tags/Logstash/index.html","hash":"1c26df470dbd838cd04fdacdaa41516df7b70094","modified":1560765065826},{"_id":"public/tags/ESLint/index.html","hash":"841b34c9b62c88e1c066cfedb875a62536baec42","modified":1560765065826},{"_id":"public/tags/Javascriptd/index.html","hash":"b7e5a54903017ea2075e331fdeb7945d067a6ba7","modified":1560765065826},{"_id":"public/tags/Express/index.html","hash":"c6a50a225990081e369c7cd5cff9aa413d4a1853","modified":1560765065826},{"_id":"public/tags/k8s/index.html","hash":"ea9bb2e1e47e2ccd9a008e4d086c54c584cc5aa6","modified":1560765065826},{"_id":"public/tags/Node-Js/index.html","hash":"c4dc46d03b99236f105686459696521b24084208","modified":1560765065826},{"_id":"public/tags/GCP/index.html","hash":"8e8f73434ec97c21f4abec70591c26b895524bc2","modified":1560765065826},{"_id":"public/tags/GCP-Registry/index.html","hash":"ab64ccebbbd377a55f78a73c0e7a9f6ef277a7a8","modified":1560765065826},{"_id":"public/tags/Gcloud/index.html","hash":"f2083767ef3783062bfc5948eaa1b3e81c6fa43c","modified":1560765065826},{"_id":"public/tags/GRPC/index.html","hash":"1e21a4b48cc31da9e2bc3239d4ae76b0fd296454","modified":1560765065826},{"_id":"public/tags/Gitea/index.html","hash":"6ee792a7f9e1031da35092c5183643d5bb8d57f5","modified":1560765065826},{"_id":"public/tags/Git/index.html","hash":"0ccf3957ecaa4f451e9f89cd83d3e15f731cd83a","modified":1560765065826},{"_id":"public/tags/Gitlab/index.html","hash":"b811a25a40c25250d77ab793d23d703e0f855361","modified":1560765065826},{"_id":"public/tags/Go/index.html","hash":"3c81ab6e4570416e71f4a1faee5d2a99220e0875","modified":1560765065826},{"_id":"public/tags/Gogs/index.html","hash":"9440299fac5c8c2f63bfefe149f9e81a430c2791","modified":1560765065826},{"_id":"public/tags/webhook/index.html","hash":"16c91afe14e15a6417dfd666a03a5d089bcf5d1f","modified":1560765065827},{"_id":"public/tags/GCP-Pub-Sub/index.html","hash":"493608669675814e5b49c2583085182002a3a136","modified":1560765065827},{"_id":"public/tags/Node-js/index.html","hash":"10832c67a836682d77a6cb5b3f08ac5e57283d20","modified":1560765065827},{"_id":"public/tags/Google-OAuth/index.html","hash":"046baea323f2a1bc5593e2ad99fef724f261886d","modified":1560765065827},{"_id":"public/tags/Grafana/index.html","hash":"f6a8069bd11ea36a418974f1ebcaa8551db138c0","modified":1560765065827},{"_id":"public/tags/InfluxDb/index.html","hash":"79fd9a14bc60a3abf0bc220096375f2c6cb3fb8e","modified":1560765065827},{"_id":"public/tags/telegraf/index.html","hash":"d1fc2a7e3b6ef573b62ad9d5e25b4e4648343ea7","modified":1560765065827},{"_id":"public/tags/Pipeline/index.html","hash":"201313f8ee973c5a13aa65de6c3d154aef511697","modified":1560765065827},{"_id":"public/tags/Blue-Ocean/index.html","hash":"1ac428f0d7e52e815b9050c04f26d62dafa03f6e","modified":1560765065827},{"_id":"public/tags/Pipeline-Parallel/index.html","hash":"f8a0b581b391c43444cb6fe8324de16a5ac70f94","modified":1560765065827},{"_id":"public/tags/JWT/index.html","hash":"29f5c8aad098d80d7363374e0081de81a70eb748","modified":1560765065827},{"_id":"public/tags/Kafka/index.html","hash":"d95812eb666d1a13e059578ca07c59dfd5902dd5","modified":1560765065827},{"_id":"public/tags/Kubernetes/index.html","hash":"a0b48ec2a5c3bb848be9df4d488a107bc62e7b53","modified":1560765065827},{"_id":"public/tags/kubectl/index.html","hash":"8a90f6411dbc799383a4ded6c4eec0fa6cf55719","modified":1560765065827},{"_id":"public/tags/Linq/index.html","hash":"6c007f79b01e1145378f720bd452a00c85ee2813","modified":1560765065827},{"_id":"public/tags/Mysql/index.html","hash":"d722d683a4a41480d5a90974edd36e13cae8b96b","modified":1560765065827},{"_id":"public/tags/net-core/index.html","hash":"43ade453bfded17c02a7ca457d35f21c8c76df0f","modified":1560765065828},{"_id":"public/tags/net-core-cli/index.html","hash":"518c30690a2b08cc472d375b74452c469f6675b3","modified":1560765065828},{"_id":"public/tags/web-api/index.html","hash":"9789d3223c9255e6c0296ea6a81b6def04608a98","modified":1560765065828},{"_id":"public/tags/Net-Core/index.html","hash":"d4713e706b5f5c1e0a9324e313cb63308f3dd61f","modified":1560765065828},{"_id":"public/tags/Nlog/index.html","hash":"bf088978c87b7b4df09c901b99e4d350a970bfab","modified":1560765065828},{"_id":"public/tags/Linux-build/index.html","hash":"dbd80d6bb03d9a5c4844008f7bd6799065a30176","modified":1560765065828},{"_id":"public/tags/VsCode/index.html","hash":"89608f804ebb0c84b8136ba2b7b33af4ebdd7070","modified":1560765065828},{"_id":"public/tags/Protocol-buffers/index.html","hash":"fbaa60a06e697b63d29ad1b8f89c42b1c566e77d","modified":1560765065828},{"_id":"public/tags/Python/index.html","hash":"77ff65402240717eeb4edaa1e86a30da86a7b4ce","modified":1560765065828},{"_id":"public/tags/Django/index.html","hash":"1096b4dbddea936072ab5e51cc4ede52a17570f6","modified":1560765065828},{"_id":"public/tags/python/index.html","hash":"9d3d907f33f46ecdf3813e26649225f30d5af0bb","modified":1560765065828},{"_id":"public/tags/Rancher/index.html","hash":"5cc43cd97a4b2ceb7c6d810afb238c0b3249a3dd","modified":1560765065828},{"_id":"public/tags/redis/index.html","hash":"fdd29e940b7cf83bc524e982563a236ea42dbe08","modified":1560765065828},{"_id":"public/tags/SQL-Server/index.html","hash":"db426ba514fa3914a4f4fb0a1f1f248538d7f278","modified":1560765065828},{"_id":"public/tags/Sequelize/index.html","hash":"91083d76106a14cba0d8f7705a77cfaa8f19a5e5","modified":1560765065828},{"_id":"public/tags/Slack/index.html","hash":"58c20c3089e6d8a07032cd0a1e067ca30fade5c3","modified":1560765065828},{"_id":"public/tags/Incoming-Webhooks/index.html","hash":"c21a4cf10e74300b0086b3e66bdab264ffb79076","modified":1560765065828},{"_id":"public/tags/SonarQube/index.html","hash":"cd9ba5d93aeccb1fca82eabc560b270f447eba38","modified":1560765065829},{"_id":"public/tags/SonarLint/index.html","hash":"6348f8185c4bb68a458b3c7a20289ef2d04ede12","modified":1560765065829},{"_id":"public/tags/Sonqrqube/index.html","hash":"548f6f2a20c96f424a1f4b52d33e09c3d8edbd14","modified":1560765065829},{"_id":"public/tags/docker-compose/index.html","hash":"dac0f810ea31a97bf300e713ceac88c87bd665ce","modified":1560765065829},{"_id":"public/tags/PostgreSql/index.html","hash":"0171f9e473217fb209bb9570e403973d694fc6ad","modified":1560765065829},{"_id":"public/tags/SyleCop/index.html","hash":"bb34113ccfaef66a28d41b4c2cb27f645f71b03d","modified":1560765065829},{"_id":"public/tags/sonarlint/index.html","hash":"3f700dd8da9d5ca4b989d956c88fa4621ecfc62f","modified":1560765065829},{"_id":"public/tags/Visual-Studio/index.html","hash":"4e7c7773a50b526fe6b965466c5e3fd4425e273a","modified":1560765065829},{"_id":"public/tags/sonarqube/index.html","hash":"0b457e55a6867bf50acd2217b254f0f243698c75","modified":1560765065829},{"_id":"public/tags/Visual-Studio-Code-存檔自動排版/index.html","hash":"091293790393dea6e6cfcf404ffeb57a5e0aa3b1","modified":1560765065829},{"_id":"public/tags/Vue-js/index.html","hash":"dc1a0c658b8eafa0c87c2b7da4ce99711bb9f7b2","modified":1560765065829},{"_id":"public/tags/android/index.html","hash":"ef104e91a739e8d9a77d617d7bdda2bca93f702a","modified":1560765065829},{"_id":"public/tags/WebView/index.html","hash":"35be3835b7a030515b1bb3c8103be9ee285abf36","modified":1560765065829},{"_id":"public/tags/curl/index.html","hash":"f5c13c30020cb4f4868b79e49062d30cb6829bd6","modified":1560765065829},{"_id":"public/tags/mac/index.html","hash":"03945ece218a401a167f62e38785fc00041d0339","modified":1560765065829},{"_id":"public/tags/redis-lua-script/index.html","hash":"2c07fefc677b1d59b7fc65d5077f6d202e9a9f49","modified":1560765065829},{"_id":"public/tags/Surge/index.html","hash":"c69fe910f7ad51fcaa33b113445958d5e1875851","modified":1560765065829},{"_id":"public/tags/Hexo/index.html","hash":"8ab53173b26ac1e64922110d99f1c06ff6b991a8","modified":1560765065830},{"_id":"public/favicon.png","hash":"89875d3b018552e396fc5f0bd8ff5d9f5d4a5d71","modified":1560765065838},{"_id":"public/fonts/iconfont.eot","hash":"6819d9bb643bdeafc17bfecb0746ae641b018fdf","modified":1560765065838},{"_id":"public/fonts/iconfont.ttf","hash":"9b8837f9f79cf6ab794736301d0665345183a20c","modified":1560765065838},{"_id":"public/fonts/iconfont.woff","hash":"78d29194287b8885d25212048c4f787705212a6e","modified":1560765065838},{"_id":"public/images/avatar.jpg","hash":"c861b761c43d7aded1af9cf75158236b944c6f4b","modified":1560765065838},{"_id":"public/images/thumb-default.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1560765065839},{"_id":"public/images/xingqiu-qrcode.jpg","hash":"ef2c2848dc79db6df7c752510651ed8ba57f2daf","modified":1560765065839},{"_id":"public/images/donate/alipayimg.png","hash":"9562f23f2eb57841c65dc769b6cc43a2cf0efa94","modified":1560765065839},{"_id":"public/images/donate/wechatpayimg.png","hash":"c0844d9a633696cb00ae64fde06f0f924f63b596","modified":1560765065839},{"_id":"public/images/favatar/SzsFox-logo.png","hash":"d71fcc73b7bc2a439d8c7ba461137856d190bd76","modified":1560765065839},{"_id":"public/images/favatar/chuangzaoshi-logo.png","hash":"7fa5734072050952159a02d330bbc008b5a99122","modified":1560765065839},{"_id":"public/images/favatar/idesign-logo.png","hash":"6b150a2dbb9912b7a7662255c27e4d4baaecee71","modified":1560765065839},{"_id":"public/2019/06/14/Sequelize-sequelize-auto/2019-06-14-15-43-05.png","hash":"60d599a11dc7d68225c980a856baac28c11f7414","modified":1560765065839},{"_id":"public/2019/06/17/Json-Web-Token/2019-06-17-16-40-23.png","hash":"0c0d303cf27af3666a4714f13109ba8abfd7d77c","modified":1560765065839},{"_id":"public/2019/06/14/Sequelize-sequelize-auto/2019-06-14-15-43-19.png","hash":"60d599a11dc7d68225c980a856baac28c11f7414","modified":1560765065839},{"_id":"public/2019/06/14/Sequelize-sequelize-auto/2019-06-14-15-46-33.png","hash":"161868320142360b3989d9537b9b4f4abafd8e40","modified":1560765065839},{"_id":"public/2019/06/05/Google-OAuth/2019-06-05-16-41-51.png","hash":"8efac96bacb434ecc3c2947327119f8d48160350","modified":1560765065839},{"_id":"public/2019/06/05/Google-OAuth/2019-06-05-16-37-30.png","hash":"e9dd83daf80b7069696bacaa0bd3c7ab07ee67ec","modified":1560765065839},{"_id":"public/2019/06/05/Google-OAuth/2019-06-05-16-43-42.png","hash":"76bc44e1551aef97034a3b8a9abc7daa65ea68b8","modified":1560765065839},{"_id":"public/2019/06/05/Google-OAuth/2019-06-05-17-04-27.png","hash":"59a22e360f2018c4ceb8772094dc299dd4886f98","modified":1560765065839},{"_id":"public/2019/06/05/Google-OAuth/2019-06-05-17-10-13.png","hash":"b9e9635622239b208c032bfae5668f2e89900aa2","modified":1560765065840},{"_id":"public/2019/06/05/Google-OAuth/2019-06-05-17-08-51.png","hash":"27cd52fb7942d1c3d1706fa035b7d0abbc40ebf7","modified":1560765065840},{"_id":"public/fonts/README.html","hash":"7c1128fed284d2fb7fee743e8a739da99385b358","modified":1560765065843},{"_id":"public/2019/06/05/Google-OAuth/2019-06-05-16-53-17.png","hash":"45e73bc1ba889cb379b64fb645aff7511abcaa49","modified":1560765065843},{"_id":"public/2019/06/05/Google-OAuth/2019-06-05-16-58-18.png","hash":"a0569daaf6ef9324dcd35fa26c1d798e2a539653","modified":1560765065844},{"_id":"public/js/application.js","hash":"46d1fb207ce5f0acb83803f927985dfcea86f9ef","modified":1560765065844},{"_id":"public/js/application.min.js","hash":"34d765e982c7d6360c37f82202d99f63ac40e408","modified":1560765065844},{"_id":"public/js/insight.js","hash":"298e8ca42517984bd26f34caa4c45560b0e909ad","modified":1560765065847},{"_id":"public/js/plugin.js.map","hash":"1730c0cc660f863120aca0a439d7264e2e245fc5","modified":1560765065847},{"_id":"public/fonts/iconfont.svg","hash":"25929e6e74f7027acd1f6467a67e95b153bcd8d5","modified":1560765065847},{"_id":"public/js/plugin.min.js","hash":"07fe34638f9832702c5f81d8583c5e4e8b3d9659","modified":1560765065893},{"_id":"public/js/jquery.min.js","hash":"5a9dcfbef655a2668e78baebeaa8dc6f41d8dabb","modified":1560765065894},{"_id":"public/css/style.min.css","hash":"1d23abc76726ebe042f7df4749f00f8f73338444","modified":1560765065897},{"_id":"public/js/plugin.js","hash":"a8524d42b8621bfaa06602a163c6a1f82702b91d","modified":1560765065899},{"_id":"public/css/style.css","hash":"3b693ce41c2e35ece4773593e94b4c17aeaee02f","modified":1560765065906}],"Category":[{"name":"AutoMapper","_id":"cjx077xtl00021q22gc8yghdm"},{"name":"Axios","_id":"cjx077xtq00071q22fzfa630w"},{"name":"HttpWebRequest","_id":"cjx077xts000c1q22gkotfnpd"},{"name":"Nginx","_id":"cjx077xtw000j1q22wiiyzbw8"},{"name":"Jenkins","_id":"cjx077xu0000o1q22m8urlj6x"},{"name":"Redis","_id":"cjx077xu4000w1q22x8c4ilzv"},{"name":"Docker compose","_id":"cjx077xu700121q22zjt4r7ps"},{"name":"ELK Stack","_id":"cjx077xuc001c1q22imoa7433"},{"name":"Docker","_id":"cjx077xuf001k1q22ti3pivio"},{"name":"ESLint","_id":"cjx077xuh001q1q22a50ktupo"},{"name":"Express","_id":"cjx077xuk001x1q225xnl65qm"},{"name":"k8s","_id":"cjx077xun00261q22sn9hx9jg"},{"name":"GCP Container Registry","_id":"cjx077xuq002e1q22c6iws9mr"},{"name":"GRPC","_id":"cjx077xus002n1q229ke3v6d9"},{"name":"Gitea","_id":"cjx077xuv002u1q22lehbxjpl"},{"name":"Gitlab","_id":"cjx077xuy002z1q22kj9dth3o"},{"name":"Go","_id":"cjx077xuz00361q22m2dvwfir"},{"name":"Gogs","_id":"cjx077xv2003f1q22529egf1d"},{"name":"GCP Pub/Sub","_id":"cjx077xv5003m1q22o4q57nw4"},{"name":"Google OAuth","_id":"cjx077xv8003y1q22glx65nve"},{"name":"Grafana","_id":"cjx077xva00441q22c0k0eim0"},{"name":"JWT","_id":"cjx077xve004a1q22i8bn9oj8"},{"name":"Kafka","_id":"cjx077xvh004f1q22ojh3c1mm"},{"name":"Fluentd","_id":"cjx077xvi004l1q22yild5r0o"},{"name":"Linq","_id":"cjx077xvm004s1q22og7sp71i"},{"name":"Mysql","_id":"cjx077xvo00511q22xodx2tih"},{"name":".net core","_id":"cjx077xvr00571q223gow7jvv"},{"name":"Node js","_id":"cjx077xvy005v1q22a0eeipbl"},{"name":"Node JS","_id":"cjx077xvy00601q226scyexoo"},{"name":"Protocol buffers","_id":"cjx077xvz00651q225p80jjzb"},{"name":"python","_id":"cjx077xw000681q22n6025fw3"},{"name":"Python","_id":"cjx077xw1006e1q22130jvwj3"},{"name":"Rancher","_id":"cjx077xw1006k1q22srai9hys"},{"name":"SQL Server","_id":"cjx077xw2006p1q22gq8v4ne6"},{"name":"Sequelize","_id":"cjx077xw3006t1q22aetiggea"},{"name":"Slack","_id":"cjx077xw6006x1q22vvnv8wzx"},{"name":"SonarQube","_id":"cjx077xw600711q22pabtdym1"},{"name":"SonarLint","_id":"cjx077xw700751q2273l20k3g"},{"name":"sonarlint","_id":"cjx077xwa007r1q22s7ju5st9"},{"name":"Visual Studio Code","_id":"cjx077xwb00811q22c97qrrbg"},{"name":"Vue js","_id":"cjx077xwb00861q22iz3f12g0"},{"name":"android","_id":"cjx077xwb00891q22xv4jgnib"},{"name":"curl","_id":"cjx077xwc008c1q22ssc4cmni"},{"name":"Kubernetes","_id":"cjx077xwc008g1q22k5u8mvsz"},{"name":"mac","_id":"cjx077xwd008l1q22j3jc0iaf"},{"name":"redis","_id":"cjx077xwe008u1q22q9rdo81j"},{"name":"surge","_id":"cjx077xwe00901q22j9jl3b8i"},{"name":"Hexo","_id":"cjx077xwf00951q220827bj17"}],"Data":[],"Page":[],"Post":[{"title":"AutoMapper","date":"2018-11-08T03:08:28.000Z","_content":"\n# AutoMapper\n\n> 兩個 class 要對映，可以使用linq來寫，但是當欄位一多的時候，就要寫的很多，這時候就可以使用 AutoMapper。\n\n```code\nprivate class MyClass\n{\n    public int A { get; set; }\n    public int b { get; set; }\n    public int c { get; set; }\n    public int d { get; set; }\n    public int e { get; set; }\n    public int f { get; set; }\n    public int g { get; set; }\n    public int h { get; set; }\n    public int i { get; set; }\n    public int j { get; set; }\n    public int k { get; set; }\n    public int l { get; set; }\n    public int hh { get; set; }\n}\n\nprivate class MyClass2\n{\n    public int A { get; set; }\n    public int b { get; set; }\n    public int c { get; set; }\n    public int d { get; set; }\n    public int e { get; set; }\n    public int hh { get; set; }\n}\n```\n\n## 使用 Linq\n\n```code\n\nList<MyClass2> data = my.Select(x => new MyClass2()\n{\n    A = x.A,\n    b = x.b,\n    c = x.c,\n    d = x.d,\n    e = x.e,\n    hh = x.hh\n}).ToList();\n```\n\n## 使用 AutoMapper 對映\n\n```bash\nMapper.Initialize(cfg =>\n{\n    cfg.CreateMap<MyClass, MyClass2>();\n});\nList<MyClass2> data2 = Mapper.Map<List<MyClass2>>(my);\n\n```\n\n# 參考網址\n\n* [Automapper官網](https://automapper.org/)\n* [Automapper Github](https://github.com/AutoMapper/AutoMapper)","source":"_posts/AutoMapper.md","raw":"---\ntitle: AutoMapper\ndate: 2018-11-08 11:08:28\ncategories:\n- AutoMapper\ntags:\n- AutoMapper\n- C#\n---\n\n# AutoMapper\n\n> 兩個 class 要對映，可以使用linq來寫，但是當欄位一多的時候，就要寫的很多，這時候就可以使用 AutoMapper。\n\n```code\nprivate class MyClass\n{\n    public int A { get; set; }\n    public int b { get; set; }\n    public int c { get; set; }\n    public int d { get; set; }\n    public int e { get; set; }\n    public int f { get; set; }\n    public int g { get; set; }\n    public int h { get; set; }\n    public int i { get; set; }\n    public int j { get; set; }\n    public int k { get; set; }\n    public int l { get; set; }\n    public int hh { get; set; }\n}\n\nprivate class MyClass2\n{\n    public int A { get; set; }\n    public int b { get; set; }\n    public int c { get; set; }\n    public int d { get; set; }\n    public int e { get; set; }\n    public int hh { get; set; }\n}\n```\n\n## 使用 Linq\n\n```code\n\nList<MyClass2> data = my.Select(x => new MyClass2()\n{\n    A = x.A,\n    b = x.b,\n    c = x.c,\n    d = x.d,\n    e = x.e,\n    hh = x.hh\n}).ToList();\n```\n\n## 使用 AutoMapper 對映\n\n```bash\nMapper.Initialize(cfg =>\n{\n    cfg.CreateMap<MyClass, MyClass2>();\n});\nList<MyClass2> data2 = Mapper.Map<List<MyClass2>>(my);\n\n```\n\n# 參考網址\n\n* [Automapper官網](https://automapper.org/)\n* [Automapper Github](https://github.com/AutoMapper/AutoMapper)","slug":"AutoMapper","published":1,"updated":"2019-06-03T01:52:24.681Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xte00001q22o3vkw667","content":"<h1 id=\"AutoMapper\"><a href=\"#AutoMapper\" class=\"headerlink\" title=\"AutoMapper\"></a>AutoMapper</h1><blockquote>\n<p>兩個 class 要對映，可以使用linq來寫，但是當欄位一多的時候，就要寫的很多，這時候就可以使用 AutoMapper。</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">private class MyClass</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    public int A &#123; get; set; &#125;</span><br><span class=\"line\">    public int b &#123; get; set; &#125;</span><br><span class=\"line\">    public int c &#123; get; set; &#125;</span><br><span class=\"line\">    public int d &#123; get; set; &#125;</span><br><span class=\"line\">    public int e &#123; get; set; &#125;</span><br><span class=\"line\">    public int f &#123; get; set; &#125;</span><br><span class=\"line\">    public int g &#123; get; set; &#125;</span><br><span class=\"line\">    public int h &#123; get; set; &#125;</span><br><span class=\"line\">    public int i &#123; get; set; &#125;</span><br><span class=\"line\">    public int j &#123; get; set; &#125;</span><br><span class=\"line\">    public int k &#123; get; set; &#125;</span><br><span class=\"line\">    public int l &#123; get; set; &#125;</span><br><span class=\"line\">    public int hh &#123; get; set; &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">private class MyClass2</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    public int A &#123; get; set; &#125;</span><br><span class=\"line\">    public int b &#123; get; set; &#125;</span><br><span class=\"line\">    public int c &#123; get; set; &#125;</span><br><span class=\"line\">    public int d &#123; get; set; &#125;</span><br><span class=\"line\">    public int e &#123; get; set; &#125;</span><br><span class=\"line\">    public int hh &#123; get; set; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用-Linq\"><a href=\"#使用-Linq\" class=\"headerlink\" title=\"使用 Linq\"></a>使用 Linq</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">List&lt;MyClass2&gt; data = my.Select(x =&gt; new MyClass2()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    A = x.A,</span><br><span class=\"line\">    b = x.b,</span><br><span class=\"line\">    c = x.c,</span><br><span class=\"line\">    d = x.d,</span><br><span class=\"line\">    e = x.e,</span><br><span class=\"line\">    hh = x.hh</span><br><span class=\"line\">&#125;).ToList();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用-AutoMapper-對映\"><a href=\"#使用-AutoMapper-對映\" class=\"headerlink\" title=\"使用 AutoMapper 對映\"></a>使用 AutoMapper 對映</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mapper.Initialize(cfg =&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    cfg.CreateMap&lt;MyClass, MyClass2&gt;();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">List&lt;MyClass2&gt; data2 = Mapper.Map&lt;List&lt;MyClass2&gt;&gt;(my);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"參考網址\"><a href=\"#參考網址\" class=\"headerlink\" title=\"參考網址\"></a>參考網址</h1><ul>\n<li><a href=\"https://automapper.org/\" target=\"_blank\" rel=\"noopener\">Automapper官網</a></li>\n<li><a href=\"https://github.com/AutoMapper/AutoMapper\" target=\"_blank\" rel=\"noopener\">Automapper Github</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"AutoMapper\"><a href=\"#AutoMapper\" class=\"headerlink\" title=\"AutoMapper\"></a>AutoMapper</h1><blockquote>\n<p>兩個 class 要對映，可以使用linq來寫，但是當欄位一多的時候，就要寫的很多，這時候就可以使用 AutoMapper。</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">private class MyClass</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    public int A &#123; get; set; &#125;</span><br><span class=\"line\">    public int b &#123; get; set; &#125;</span><br><span class=\"line\">    public int c &#123; get; set; &#125;</span><br><span class=\"line\">    public int d &#123; get; set; &#125;</span><br><span class=\"line\">    public int e &#123; get; set; &#125;</span><br><span class=\"line\">    public int f &#123; get; set; &#125;</span><br><span class=\"line\">    public int g &#123; get; set; &#125;</span><br><span class=\"line\">    public int h &#123; get; set; &#125;</span><br><span class=\"line\">    public int i &#123; get; set; &#125;</span><br><span class=\"line\">    public int j &#123; get; set; &#125;</span><br><span class=\"line\">    public int k &#123; get; set; &#125;</span><br><span class=\"line\">    public int l &#123; get; set; &#125;</span><br><span class=\"line\">    public int hh &#123; get; set; &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">private class MyClass2</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    public int A &#123; get; set; &#125;</span><br><span class=\"line\">    public int b &#123; get; set; &#125;</span><br><span class=\"line\">    public int c &#123; get; set; &#125;</span><br><span class=\"line\">    public int d &#123; get; set; &#125;</span><br><span class=\"line\">    public int e &#123; get; set; &#125;</span><br><span class=\"line\">    public int hh &#123; get; set; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用-Linq\"><a href=\"#使用-Linq\" class=\"headerlink\" title=\"使用 Linq\"></a>使用 Linq</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">List&lt;MyClass2&gt; data = my.Select(x =&gt; new MyClass2()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    A = x.A,</span><br><span class=\"line\">    b = x.b,</span><br><span class=\"line\">    c = x.c,</span><br><span class=\"line\">    d = x.d,</span><br><span class=\"line\">    e = x.e,</span><br><span class=\"line\">    hh = x.hh</span><br><span class=\"line\">&#125;).ToList();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用-AutoMapper-對映\"><a href=\"#使用-AutoMapper-對映\" class=\"headerlink\" title=\"使用 AutoMapper 對映\"></a>使用 AutoMapper 對映</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mapper.Initialize(cfg =&gt;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    cfg.CreateMap&lt;MyClass, MyClass2&gt;();</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">List&lt;MyClass2&gt; data2 = Mapper.Map&lt;List&lt;MyClass2&gt;&gt;(my);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"參考網址\"><a href=\"#參考網址\" class=\"headerlink\" title=\"參考網址\"></a>參考網址</h1><ul>\n<li><a href=\"https://automapper.org/\" target=\"_blank\" rel=\"noopener\">Automapper官網</a></li>\n<li><a href=\"https://github.com/AutoMapper/AutoMapper\" target=\"_blank\" rel=\"noopener\">Automapper Github</a></li>\n</ul>\n"},{"title":"Axios Post Form Data","date":"2019-05-31T02:26:33.000Z","_content":"\n# Axios Post Form Data\n\n## 安裝套件\n\n```base\nnpm init\nnpm install axios\nnpm i qs\n```\n\n## Code\n\n```javascript\nconst axios = require('axios');\nconst qs = require('qs');\n\nlet formdata = qs.stringify({\n    Name: 'Andy',\n    Age : 18\n});\n\naxios({\n    method: 'post',\n    url: 'Your Url',\n    data: formdata,\n    config: { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } }\n})\n    .then(function (response) {\n        //handle success\n        console.log(response.data);\n    })\n    .catch(function (response) {\n        //handle error\n        console.log(response);\n    });\n\n```\n\n# 參考\n* [axios](https://github.com/axios/axios)\n* [qs](https://www.npmjs.com/package/qs)","source":"_posts/Axios-Post-Form-Data.md","raw":"---\ntitle: Axios Post Form Data\ndate: 2019-05-31 10:26:33\ncategories:\n- Axios\ntags:\n- Axios\n- Node JS\n---\n\n# Axios Post Form Data\n\n## 安裝套件\n\n```base\nnpm init\nnpm install axios\nnpm i qs\n```\n\n## Code\n\n```javascript\nconst axios = require('axios');\nconst qs = require('qs');\n\nlet formdata = qs.stringify({\n    Name: 'Andy',\n    Age : 18\n});\n\naxios({\n    method: 'post',\n    url: 'Your Url',\n    data: formdata,\n    config: { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } }\n})\n    .then(function (response) {\n        //handle success\n        console.log(response.data);\n    })\n    .catch(function (response) {\n        //handle error\n        console.log(response);\n    });\n\n```\n\n# 參考\n* [axios](https://github.com/axios/axios)\n* [qs](https://www.npmjs.com/package/qs)","slug":"Axios-Post-Form-Data","published":1,"updated":"2019-06-05T15:29:12.345Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xti00011q22emjd2spm","content":"<h1 id=\"Axios-Post-Form-Data\"><a href=\"#Axios-Post-Form-Data\" class=\"headerlink\" title=\"Axios Post Form Data\"></a>Axios Post Form Data</h1><h2 id=\"安裝套件\"><a href=\"#安裝套件\" class=\"headerlink\" title=\"安裝套件\"></a>安裝套件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm init</span><br><span class=\"line\">npm install axios</span><br><span class=\"line\">npm i qs</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> axios = <span class=\"built_in\">require</span>(<span class=\"string\">'axios'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> qs = <span class=\"built_in\">require</span>(<span class=\"string\">'qs'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> formdata = qs.stringify(&#123;</span><br><span class=\"line\">    Name: <span class=\"string\">'Andy'</span>,</span><br><span class=\"line\">    Age : <span class=\"number\">18</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">axios(&#123;</span><br><span class=\"line\">    method: <span class=\"string\">'post'</span>,</span><br><span class=\"line\">    url: <span class=\"string\">'Your Url'</span>,</span><br><span class=\"line\">    data: formdata,</span><br><span class=\"line\">    config: &#123; <span class=\"attr\">headers</span>: &#123; <span class=\"string\">'Content-Type'</span>: <span class=\"string\">'application/x-www-form-urlencoded'</span> &#125; &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">    .then(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">response</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//handle success</span></span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(response.data);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    .catch(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">response</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//handle error</span></span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(response);</span><br><span class=\"line\">    &#125;);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://github.com/axios/axios\" target=\"_blank\" rel=\"noopener\">axios</a></li>\n<li><a href=\"https://www.npmjs.com/package/qs\" target=\"_blank\" rel=\"noopener\">qs</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Axios-Post-Form-Data\"><a href=\"#Axios-Post-Form-Data\" class=\"headerlink\" title=\"Axios Post Form Data\"></a>Axios Post Form Data</h1><h2 id=\"安裝套件\"><a href=\"#安裝套件\" class=\"headerlink\" title=\"安裝套件\"></a>安裝套件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm init</span><br><span class=\"line\">npm install axios</span><br><span class=\"line\">npm i qs</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> axios = <span class=\"built_in\">require</span>(<span class=\"string\">'axios'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> qs = <span class=\"built_in\">require</span>(<span class=\"string\">'qs'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> formdata = qs.stringify(&#123;</span><br><span class=\"line\">    Name: <span class=\"string\">'Andy'</span>,</span><br><span class=\"line\">    Age : <span class=\"number\">18</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">axios(&#123;</span><br><span class=\"line\">    method: <span class=\"string\">'post'</span>,</span><br><span class=\"line\">    url: <span class=\"string\">'Your Url'</span>,</span><br><span class=\"line\">    data: formdata,</span><br><span class=\"line\">    config: &#123; <span class=\"attr\">headers</span>: &#123; <span class=\"string\">'Content-Type'</span>: <span class=\"string\">'application/x-www-form-urlencoded'</span> &#125; &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">    .then(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">response</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//handle success</span></span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(response.data);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    .catch(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">response</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//handle error</span></span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(response);</span><br><span class=\"line\">    &#125;);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://github.com/axios/axios\" target=\"_blank\" rel=\"noopener\">axios</a></li>\n<li><a href=\"https://www.npmjs.com/package/qs\" target=\"_blank\" rel=\"noopener\">qs</a></li>\n</ul>\n"},{"title":"C# HttpWebRequest ClientCertificates","date":"2019-03-19T12:00:14.000Z","_content":"\n# C# HttpWebRequest ClientCertificates\n\n````C#\n\nbyte[] aryData = Encoding.UTF8.GetBytes(string.Empty);\n\n            HttpWebRequest req = (HttpWebRequest)HttpWebRequest.Create(\"URL\");\n\n            //// 設定私有憑證\n            req.ClientCertificates.Add(new X509Certificate(HttpRuntime.AppDomainAppPath + @\"\\yourCertificates.p12\", \"yourpassword\"));\n            X509Store certStore = new X509Store(\"My\", StoreLocation.LocalMachine);\n            certStore.Open(OpenFlags.ReadOnly | OpenFlags.OpenExistingOnly);\n            X509Certificate2 cert = certStore.Certificates[0];\n            certStore.Close();\n            req.ClientCertificates.Add(cert);\n\n            req.Method = \"POST\";\n            req.ContentType = \"application/json\";\n            req.ContentLength = aryData.Length;\n            req.Accept = \"application/json\";\n\n            using (Stream reqStream = req.GetRequestStream())\n            {\n                reqStream.Write(aryData, 0, aryData.Length);\n            }\n\n            string strResult = string.Empty;\n\n            using (WebResponse res = req.GetResponse())\n            {\n                using (Stream resStream = res.GetResponseStream())\n                {\n                    using (StreamReader objSR = new StreamReader(resStream))\n                    {\n                        strResult = objSR.ReadToEnd();\n                    }\n                }\n            }\n\n            return strResult;\n\n````\n\n# 參考\n\n* [Force HttpWebRequest to send client certificate](https://stackoverflow.com/questions/39528973/force-httpwebrequest-to-send-client-certificate)","source":"_posts/C-HttpWebRequest-ClientCertificates.md","raw":"---\ntitle: 'C# HttpWebRequest ClientCertificates'\ndate: 2019-03-19 20:00:14\ncategories:\n- HttpWebRequest\ntags:\n- HttpWebRequest\n- C#\n- 筆記\n---\n\n# C# HttpWebRequest ClientCertificates\n\n````C#\n\nbyte[] aryData = Encoding.UTF8.GetBytes(string.Empty);\n\n            HttpWebRequest req = (HttpWebRequest)HttpWebRequest.Create(\"URL\");\n\n            //// 設定私有憑證\n            req.ClientCertificates.Add(new X509Certificate(HttpRuntime.AppDomainAppPath + @\"\\yourCertificates.p12\", \"yourpassword\"));\n            X509Store certStore = new X509Store(\"My\", StoreLocation.LocalMachine);\n            certStore.Open(OpenFlags.ReadOnly | OpenFlags.OpenExistingOnly);\n            X509Certificate2 cert = certStore.Certificates[0];\n            certStore.Close();\n            req.ClientCertificates.Add(cert);\n\n            req.Method = \"POST\";\n            req.ContentType = \"application/json\";\n            req.ContentLength = aryData.Length;\n            req.Accept = \"application/json\";\n\n            using (Stream reqStream = req.GetRequestStream())\n            {\n                reqStream.Write(aryData, 0, aryData.Length);\n            }\n\n            string strResult = string.Empty;\n\n            using (WebResponse res = req.GetResponse())\n            {\n                using (Stream resStream = res.GetResponseStream())\n                {\n                    using (StreamReader objSR = new StreamReader(resStream))\n                    {\n                        strResult = objSR.ReadToEnd();\n                    }\n                }\n            }\n\n            return strResult;\n\n````\n\n# 參考\n\n* [Force HttpWebRequest to send client certificate](https://stackoverflow.com/questions/39528973/force-httpwebrequest-to-send-client-certificate)","slug":"C-HttpWebRequest-ClientCertificates","published":1,"updated":"2019-06-03T01:52:24.682Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xtm00041q224youqsvf","content":"<h1 id=\"C-HttpWebRequest-ClientCertificates\"><a href=\"#C-HttpWebRequest-ClientCertificates\" class=\"headerlink\" title=\"C# HttpWebRequest ClientCertificates\"></a>C# HttpWebRequest ClientCertificates</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">byte[] aryData = Encoding.UTF8.GetBytes(string.Empty);</span><br><span class=\"line\"></span><br><span class=\"line\">            HttpWebRequest req = (HttpWebRequest)HttpWebRequest.Create(&quot;URL&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">            //// 設定私有憑證</span><br><span class=\"line\">            req.ClientCertificates.Add(new X509Certificate(HttpRuntime.AppDomainAppPath + @&quot;\\yourCertificates.p12&quot;, &quot;yourpassword&quot;));</span><br><span class=\"line\">            X509Store certStore = new X509Store(&quot;My&quot;, StoreLocation.LocalMachine);</span><br><span class=\"line\">            certStore.Open(OpenFlags.ReadOnly | OpenFlags.OpenExistingOnly);</span><br><span class=\"line\">            X509Certificate2 cert = certStore.Certificates[0];</span><br><span class=\"line\">            certStore.Close();</span><br><span class=\"line\">            req.ClientCertificates.Add(cert);</span><br><span class=\"line\"></span><br><span class=\"line\">            req.Method = &quot;POST&quot;;</span><br><span class=\"line\">            req.ContentType = &quot;application/json&quot;;</span><br><span class=\"line\">            req.ContentLength = aryData.Length;</span><br><span class=\"line\">            req.Accept = &quot;application/json&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">            using (Stream reqStream = req.GetRequestStream())</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                reqStream.Write(aryData, 0, aryData.Length);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            string strResult = string.Empty;</span><br><span class=\"line\"></span><br><span class=\"line\">            using (WebResponse res = req.GetResponse())</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                using (Stream resStream = res.GetResponseStream())</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    using (StreamReader objSR = new StreamReader(resStream))</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        strResult = objSR.ReadToEnd();</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            return strResult;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://stackoverflow.com/questions/39528973/force-httpwebrequest-to-send-client-certificate\" target=\"_blank\" rel=\"noopener\">Force HttpWebRequest to send client certificate</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"C-HttpWebRequest-ClientCertificates\"><a href=\"#C-HttpWebRequest-ClientCertificates\" class=\"headerlink\" title=\"C# HttpWebRequest ClientCertificates\"></a>C# HttpWebRequest ClientCertificates</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">byte[] aryData = Encoding.UTF8.GetBytes(string.Empty);</span><br><span class=\"line\"></span><br><span class=\"line\">            HttpWebRequest req = (HttpWebRequest)HttpWebRequest.Create(&quot;URL&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">            //// 設定私有憑證</span><br><span class=\"line\">            req.ClientCertificates.Add(new X509Certificate(HttpRuntime.AppDomainAppPath + @&quot;\\yourCertificates.p12&quot;, &quot;yourpassword&quot;));</span><br><span class=\"line\">            X509Store certStore = new X509Store(&quot;My&quot;, StoreLocation.LocalMachine);</span><br><span class=\"line\">            certStore.Open(OpenFlags.ReadOnly | OpenFlags.OpenExistingOnly);</span><br><span class=\"line\">            X509Certificate2 cert = certStore.Certificates[0];</span><br><span class=\"line\">            certStore.Close();</span><br><span class=\"line\">            req.ClientCertificates.Add(cert);</span><br><span class=\"line\"></span><br><span class=\"line\">            req.Method = &quot;POST&quot;;</span><br><span class=\"line\">            req.ContentType = &quot;application/json&quot;;</span><br><span class=\"line\">            req.ContentLength = aryData.Length;</span><br><span class=\"line\">            req.Accept = &quot;application/json&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">            using (Stream reqStream = req.GetRequestStream())</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                reqStream.Write(aryData, 0, aryData.Length);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            string strResult = string.Empty;</span><br><span class=\"line\"></span><br><span class=\"line\">            using (WebResponse res = req.GetResponse())</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                using (Stream resStream = res.GetResponseStream())</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    using (StreamReader objSR = new StreamReader(resStream))</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        strResult = objSR.ReadToEnd();</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            return strResult;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://stackoverflow.com/questions/39528973/force-httpwebrequest-to-send-client-certificate\" target=\"_blank\" rel=\"noopener\">Force HttpWebRequest to send client certificate</a></li>\n</ul>\n"},{"title":"CV","date":"2018-11-05T08:33:58.000Z","_content":"\n### 基本資料\n\n姓名: 巫佳溢\nEmail: ste5022424@gmail.com\n學歷: 僑光科技大學資訊科技系\n\n### 專業領域\n\n* Web:\nAsp.net Mvc(C#), AngularJs, Asp.Net Core\n* DB:\nMsSql、Redis、Mongo\n* 容器技術應用:\nDocker、Kubernetes\n* Cloud:\nGCP\n* DevOps:\nCI: Jenkins\nCD: Octopus\nELK\nGrafana\n* 遊戲API串接:\nEzgui、Yggdrasil Gaming\n\n### 工作經歷\n\n* 2013 僑光科技大學資訊科技系畢業\n* 2014 向上國際股份有限公司 抓寶網: 開發及維護\n* 2015 向上國際股份有限公司 至尊、百老匯、Golden City: Web全端開發、維護\n* 2016 向上國際股份有限公司 老子有錢: Web全端開發、維護\n* 2017 向上國際股份有限公司 老子有錢: Web全端開發、維護、遊戲串接\n* 2018 向上國際股份有限公司 老子有錢: Web全端開發、維護、遊戲串接","source":"_posts/CV.md","raw":"---\ntitle: CV\ndate: 2018-11-05 16:33:58\ncategories:\ntags:\n- CV\n---\n\n### 基本資料\n\n姓名: 巫佳溢\nEmail: ste5022424@gmail.com\n學歷: 僑光科技大學資訊科技系\n\n### 專業領域\n\n* Web:\nAsp.net Mvc(C#), AngularJs, Asp.Net Core\n* DB:\nMsSql、Redis、Mongo\n* 容器技術應用:\nDocker、Kubernetes\n* Cloud:\nGCP\n* DevOps:\nCI: Jenkins\nCD: Octopus\nELK\nGrafana\n* 遊戲API串接:\nEzgui、Yggdrasil Gaming\n\n### 工作經歷\n\n* 2013 僑光科技大學資訊科技系畢業\n* 2014 向上國際股份有限公司 抓寶網: 開發及維護\n* 2015 向上國際股份有限公司 至尊、百老匯、Golden City: Web全端開發、維護\n* 2016 向上國際股份有限公司 老子有錢: Web全端開發、維護\n* 2017 向上國際股份有限公司 老子有錢: Web全端開發、維護、遊戲串接\n* 2018 向上國際股份有限公司 老子有錢: Web全端開發、維護、遊戲串接","slug":"CV","published":1,"updated":"2019-03-09T09:33:53.319Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xtn00051q22ejv7zug0","content":"<h3 id=\"基本資料\"><a href=\"#基本資料\" class=\"headerlink\" title=\"基本資料\"></a>基本資料</h3><p>姓名: 巫佳溢<br>Email: <a href=\"mailto:ste5022424@gmail.com\" target=\"_blank\" rel=\"noopener\">ste5022424@gmail.com</a><br>學歷: 僑光科技大學資訊科技系</p>\n<h3 id=\"專業領域\"><a href=\"#專業領域\" class=\"headerlink\" title=\"專業領域\"></a>專業領域</h3><ul>\n<li>Web:<br>Asp.net Mvc(C#), AngularJs, Asp.Net Core</li>\n<li>DB:<br>MsSql、Redis、Mongo</li>\n<li>容器技術應用:<br>Docker、Kubernetes</li>\n<li>Cloud:<br>GCP</li>\n<li>DevOps:<br>CI: Jenkins<br>CD: Octopus<br>ELK<br>Grafana</li>\n<li>遊戲API串接:<br>Ezgui、Yggdrasil Gaming</li>\n</ul>\n<h3 id=\"工作經歷\"><a href=\"#工作經歷\" class=\"headerlink\" title=\"工作經歷\"></a>工作經歷</h3><ul>\n<li>2013 僑光科技大學資訊科技系畢業</li>\n<li>2014 向上國際股份有限公司 抓寶網: 開發及維護</li>\n<li>2015 向上國際股份有限公司 至尊、百老匯、Golden City: Web全端開發、維護</li>\n<li>2016 向上國際股份有限公司 老子有錢: Web全端開發、維護</li>\n<li>2017 向上國際股份有限公司 老子有錢: Web全端開發、維護、遊戲串接</li>\n<li>2018 向上國際股份有限公司 老子有錢: Web全端開發、維護、遊戲串接</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"基本資料\"><a href=\"#基本資料\" class=\"headerlink\" title=\"基本資料\"></a>基本資料</h3><p>姓名: 巫佳溢<br>Email: <a href=\"mailto:ste5022424@gmail.com\" target=\"_blank\" rel=\"noopener\">ste5022424@gmail.com</a><br>學歷: 僑光科技大學資訊科技系</p>\n<h3 id=\"專業領域\"><a href=\"#專業領域\" class=\"headerlink\" title=\"專業領域\"></a>專業領域</h3><ul>\n<li>Web:<br>Asp.net Mvc(C#), AngularJs, Asp.Net Core</li>\n<li>DB:<br>MsSql、Redis、Mongo</li>\n<li>容器技術應用:<br>Docker、Kubernetes</li>\n<li>Cloud:<br>GCP</li>\n<li>DevOps:<br>CI: Jenkins<br>CD: Octopus<br>ELK<br>Grafana</li>\n<li>遊戲API串接:<br>Ezgui、Yggdrasil Gaming</li>\n</ul>\n<h3 id=\"工作經歷\"><a href=\"#工作經歷\" class=\"headerlink\" title=\"工作經歷\"></a>工作經歷</h3><ul>\n<li>2013 僑光科技大學資訊科技系畢業</li>\n<li>2014 向上國際股份有限公司 抓寶網: 開發及維護</li>\n<li>2015 向上國際股份有限公司 至尊、百老匯、Golden City: Web全端開發、維護</li>\n<li>2016 向上國際股份有限公司 老子有錢: Web全端開發、維護</li>\n<li>2017 向上國際股份有限公司 老子有錢: Web全端開發、維護、遊戲串接</li>\n<li>2018 向上國際股份有限公司 老子有錢: Web全端開發、維護、遊戲串接</li>\n</ul>\n"},{"title":"Docker Nginx Reverse Proxy","date":"2018-12-10T06:55:44.000Z","_content":"\n# Docker Nginx Reverse Proxy\n\n## 1. 建立 nginx_reverseproxy 資料夾\n\n```bash\nmkdir nginx_reverseproxy\ncd ngixn_reverseproxy/\n```\n\n## 2. 建立 nginx.conf\n\n```bash\ntouch nginx.conf\n```\n\n## 3. 編輯 nginx.conf\n\n```bash\nvi nginx.conf\n```\n\n> 輸入 i可以進入編輯模式\n> 輸入 ESC離開編輯模式，在輸入 \":wq\"存檔\n> 刪除資料夾可以使用 \"rm -r 資料夾名稱\"\n\n## 4. 設定 nginx.conf\n\n```bash\nevents {\n\n}\n\nhttp {\nserver {\n  listen 80;\n  server_name www.google.com;\n  location / {\n    proxy_pass http://www.google.com;\n  }\n}\n}\n```\n\n## 5. Run Docker Nginx\n\n```bash\ndocker run --name proxy_nginx -v /nginx_reverseproxy/nginx.conf:/etc/nginx/nginx.conf:ro -p 8088:80 -d nginx\n```\n\n## 6. 瀏覽 Yourhost:8088\n\n![瀏覽](https://i.imgur.com/imLE42t.png)\n\n## 使用 Dockerfile 建立 image & docker run container\n\n### 1. Dockerfile\n\n```bash\nFROM nginx\nADD nginx.conf /etc/nginx/nginx.conf\n```\n\n### 2. build\n\n```bash\ndocker build -t nginx_dockerfile:v1 .\n```\n\n### 3. docker run\n\n```bash\ndocker run --name nginx_dockerfile -p 8089:80 -d nginx_dockerfile:v1\n```\n\n# 參考\n\n* [[ DevOps ] Nginx 設定 Proxy Server 及 Load balance](https://oranwind.org/-devops-ubuntu-shang-nginx-an-zhuang-yu-she-ding/)\n* [NGINX Reverse Proxy](https://docs.nginx.com/nginx/admin-guide/web-server/reverse-proxy/)","source":"_posts/Docker Nginx Reverse Proxy.md","raw":"---\ntitle: Docker Nginx Reverse Proxy\ndate: 2018-12-10 14:55:44\ncategories:\n- Nginx\ntags:\n- Docker\n- Nginx\n---\n\n# Docker Nginx Reverse Proxy\n\n## 1. 建立 nginx_reverseproxy 資料夾\n\n```bash\nmkdir nginx_reverseproxy\ncd ngixn_reverseproxy/\n```\n\n## 2. 建立 nginx.conf\n\n```bash\ntouch nginx.conf\n```\n\n## 3. 編輯 nginx.conf\n\n```bash\nvi nginx.conf\n```\n\n> 輸入 i可以進入編輯模式\n> 輸入 ESC離開編輯模式，在輸入 \":wq\"存檔\n> 刪除資料夾可以使用 \"rm -r 資料夾名稱\"\n\n## 4. 設定 nginx.conf\n\n```bash\nevents {\n\n}\n\nhttp {\nserver {\n  listen 80;\n  server_name www.google.com;\n  location / {\n    proxy_pass http://www.google.com;\n  }\n}\n}\n```\n\n## 5. Run Docker Nginx\n\n```bash\ndocker run --name proxy_nginx -v /nginx_reverseproxy/nginx.conf:/etc/nginx/nginx.conf:ro -p 8088:80 -d nginx\n```\n\n## 6. 瀏覽 Yourhost:8088\n\n![瀏覽](https://i.imgur.com/imLE42t.png)\n\n## 使用 Dockerfile 建立 image & docker run container\n\n### 1. Dockerfile\n\n```bash\nFROM nginx\nADD nginx.conf /etc/nginx/nginx.conf\n```\n\n### 2. build\n\n```bash\ndocker build -t nginx_dockerfile:v1 .\n```\n\n### 3. docker run\n\n```bash\ndocker run --name nginx_dockerfile -p 8089:80 -d nginx_dockerfile:v1\n```\n\n# 參考\n\n* [[ DevOps ] Nginx 設定 Proxy Server 及 Load balance](https://oranwind.org/-devops-ubuntu-shang-nginx-an-zhuang-yu-she-ding/)\n* [NGINX Reverse Proxy](https://docs.nginx.com/nginx/admin-guide/web-server/reverse-proxy/)","slug":"Docker Nginx Reverse Proxy","published":1,"updated":"2019-06-03T01:52:24.683Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xtp00061q22hocv8z5i","content":"<h1 id=\"Docker-Nginx-Reverse-Proxy\"><a href=\"#Docker-Nginx-Reverse-Proxy\" class=\"headerlink\" title=\"Docker Nginx Reverse Proxy\"></a>Docker Nginx Reverse Proxy</h1><h2 id=\"1-建立-nginx-reverseproxy-資料夾\"><a href=\"#1-建立-nginx-reverseproxy-資料夾\" class=\"headerlink\" title=\"1. 建立 nginx_reverseproxy 資料夾\"></a>1. 建立 nginx_reverseproxy 資料夾</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir nginx_reverseproxy</span><br><span class=\"line\"><span class=\"built_in\">cd</span> ngixn_reverseproxy/</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-建立-nginx-conf\"><a href=\"#2-建立-nginx-conf\" class=\"headerlink\" title=\"2. 建立 nginx.conf\"></a>2. 建立 nginx.conf</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch nginx.conf</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-編輯-nginx-conf\"><a href=\"#3-編輯-nginx-conf\" class=\"headerlink\" title=\"3. 編輯 nginx.conf\"></a>3. 編輯 nginx.conf</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi nginx.conf</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>輸入 i可以進入編輯模式<br>輸入 ESC離開編輯模式，在輸入 “:wq”存檔<br>刪除資料夾可以使用 “rm -r 資料夾名稱”</p>\n</blockquote>\n<h2 id=\"4-設定-nginx-conf\"><a href=\"#4-設定-nginx-conf\" class=\"headerlink\" title=\"4. 設定 nginx.conf\"></a>4. 設定 nginx.conf</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">events &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">http &#123;</span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">  listen 80;</span><br><span class=\"line\">  server_name www.google.com;</span><br><span class=\"line\">  location / &#123;</span><br><span class=\"line\">    proxy_pass http://www.google.com;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-Run-Docker-Nginx\"><a href=\"#5-Run-Docker-Nginx\" class=\"headerlink\" title=\"5. Run Docker Nginx\"></a>5. Run Docker Nginx</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name proxy_nginx -v /nginx_reverseproxy/nginx.conf:/etc/nginx/nginx.conf:ro -p 8088:80 -d nginx</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-瀏覽-Yourhost-8088\"><a href=\"#6-瀏覽-Yourhost-8088\" class=\"headerlink\" title=\"6. 瀏覽 Yourhost:8088\"></a>6. 瀏覽 Yourhost:8088</h2><p><img src=\"https://i.imgur.com/imLE42t.png\" alt=\"瀏覽\"></p>\n<h2 id=\"使用-Dockerfile-建立-image-amp-docker-run-container\"><a href=\"#使用-Dockerfile-建立-image-amp-docker-run-container\" class=\"headerlink\" title=\"使用 Dockerfile 建立 image &amp; docker run container\"></a>使用 Dockerfile 建立 image &amp; docker run container</h2><h3 id=\"1-Dockerfile\"><a href=\"#1-Dockerfile\" class=\"headerlink\" title=\"1. Dockerfile\"></a>1. Dockerfile</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FROM nginx</span><br><span class=\"line\">ADD nginx.conf /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-build\"><a href=\"#2-build\" class=\"headerlink\" title=\"2. build\"></a>2. build</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker build -t nginx_dockerfile:v1 .</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-docker-run\"><a href=\"#3-docker-run\" class=\"headerlink\" title=\"3. docker run\"></a>3. docker run</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name nginx_dockerfile -p 8089:80 -d nginx_dockerfile:v1</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://oranwind.org/-devops-ubuntu-shang-nginx-an-zhuang-yu-she-ding/\" target=\"_blank\" rel=\"noopener\">[ DevOps ] Nginx 設定 Proxy Server 及 Load balance</a></li>\n<li><a href=\"https://docs.nginx.com/nginx/admin-guide/web-server/reverse-proxy/\" target=\"_blank\" rel=\"noopener\">NGINX Reverse Proxy</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Docker-Nginx-Reverse-Proxy\"><a href=\"#Docker-Nginx-Reverse-Proxy\" class=\"headerlink\" title=\"Docker Nginx Reverse Proxy\"></a>Docker Nginx Reverse Proxy</h1><h2 id=\"1-建立-nginx-reverseproxy-資料夾\"><a href=\"#1-建立-nginx-reverseproxy-資料夾\" class=\"headerlink\" title=\"1. 建立 nginx_reverseproxy 資料夾\"></a>1. 建立 nginx_reverseproxy 資料夾</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir nginx_reverseproxy</span><br><span class=\"line\"><span class=\"built_in\">cd</span> ngixn_reverseproxy/</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-建立-nginx-conf\"><a href=\"#2-建立-nginx-conf\" class=\"headerlink\" title=\"2. 建立 nginx.conf\"></a>2. 建立 nginx.conf</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch nginx.conf</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-編輯-nginx-conf\"><a href=\"#3-編輯-nginx-conf\" class=\"headerlink\" title=\"3. 編輯 nginx.conf\"></a>3. 編輯 nginx.conf</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi nginx.conf</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>輸入 i可以進入編輯模式<br>輸入 ESC離開編輯模式，在輸入 “:wq”存檔<br>刪除資料夾可以使用 “rm -r 資料夾名稱”</p>\n</blockquote>\n<h2 id=\"4-設定-nginx-conf\"><a href=\"#4-設定-nginx-conf\" class=\"headerlink\" title=\"4. 設定 nginx.conf\"></a>4. 設定 nginx.conf</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">events &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">http &#123;</span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">  listen 80;</span><br><span class=\"line\">  server_name www.google.com;</span><br><span class=\"line\">  location / &#123;</span><br><span class=\"line\">    proxy_pass http://www.google.com;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-Run-Docker-Nginx\"><a href=\"#5-Run-Docker-Nginx\" class=\"headerlink\" title=\"5. Run Docker Nginx\"></a>5. Run Docker Nginx</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name proxy_nginx -v /nginx_reverseproxy/nginx.conf:/etc/nginx/nginx.conf:ro -p 8088:80 -d nginx</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-瀏覽-Yourhost-8088\"><a href=\"#6-瀏覽-Yourhost-8088\" class=\"headerlink\" title=\"6. 瀏覽 Yourhost:8088\"></a>6. 瀏覽 Yourhost:8088</h2><p><img src=\"https://i.imgur.com/imLE42t.png\" alt=\"瀏覽\"></p>\n<h2 id=\"使用-Dockerfile-建立-image-amp-docker-run-container\"><a href=\"#使用-Dockerfile-建立-image-amp-docker-run-container\" class=\"headerlink\" title=\"使用 Dockerfile 建立 image &amp; docker run container\"></a>使用 Dockerfile 建立 image &amp; docker run container</h2><h3 id=\"1-Dockerfile\"><a href=\"#1-Dockerfile\" class=\"headerlink\" title=\"1. Dockerfile\"></a>1. Dockerfile</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FROM nginx</span><br><span class=\"line\">ADD nginx.conf /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-build\"><a href=\"#2-build\" class=\"headerlink\" title=\"2. build\"></a>2. build</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker build -t nginx_dockerfile:v1 .</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-docker-run\"><a href=\"#3-docker-run\" class=\"headerlink\" title=\"3. docker run\"></a>3. docker run</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name nginx_dockerfile -p 8089:80 -d nginx_dockerfile:v1</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://oranwind.org/-devops-ubuntu-shang-nginx-an-zhuang-yu-she-ding/\" target=\"_blank\" rel=\"noopener\">[ DevOps ] Nginx 設定 Proxy Server 及 Load balance</a></li>\n<li><a href=\"https://docs.nginx.com/nginx/admin-guide/web-server/reverse-proxy/\" target=\"_blank\" rel=\"noopener\">NGINX Reverse Proxy</a></li>\n</ul>\n"},{"title":"Docker run Jenkins","date":"2018-10-19T03:50:40.000Z","_content":"\n## Docker run Jenkins\n\n### 安裝 jenkins\n\n```\nmkdir -p -m 777 jenkins_home\ndocker run -d -p 8080:8080 -p 50000:50000 -v /jenkins_home:/var/jenkins_home --name jenkins jenkins\n\n```\n### 取得密碼(initialAdminPassword)\n```\ndocker exec jenkins cat /var/jenkins_home/secrets/initialAdminPassword\n```\n\n### 進入Jenkins\nhttp://127.0.0.1:8080/\n\n\n## 參考網址\n* [Jenkins On Doker](https://github.com/jenkinsci/docker/blob/master/README.md)\n* [Get Started with Jenkins 2.0 with Docker](https://www.cloudbees.com/blog/get-started-jenkins-20-docker)","source":"_posts/Docker run Jenkins.md","raw":"---\ntitle: 'Docker run Jenkins'\ndate: 2018-10-19 11:50:40\ncategories: \n- Jenkins\ntags: \n- Jenkins\n- Docker\n---\n\n## Docker run Jenkins\n\n### 安裝 jenkins\n\n```\nmkdir -p -m 777 jenkins_home\ndocker run -d -p 8080:8080 -p 50000:50000 -v /jenkins_home:/var/jenkins_home --name jenkins jenkins\n\n```\n### 取得密碼(initialAdminPassword)\n```\ndocker exec jenkins cat /var/jenkins_home/secrets/initialAdminPassword\n```\n\n### 進入Jenkins\nhttp://127.0.0.1:8080/\n\n\n## 參考網址\n* [Jenkins On Doker](https://github.com/jenkinsci/docker/blob/master/README.md)\n* [Get Started with Jenkins 2.0 with Docker](https://www.cloudbees.com/blog/get-started-jenkins-20-docker)","slug":"Docker run Jenkins","published":1,"updated":"2019-06-03T01:52:24.683Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xtr00091q22lgufzdpn","content":"<h2 id=\"Docker-run-Jenkins\"><a href=\"#Docker-run-Jenkins\" class=\"headerlink\" title=\"Docker run Jenkins\"></a>Docker run Jenkins</h2><h3 id=\"安裝-jenkins\"><a href=\"#安裝-jenkins\" class=\"headerlink\" title=\"安裝 jenkins\"></a>安裝 jenkins</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p -m 777 jenkins_home</span><br><span class=\"line\">docker run -d -p 8080:8080 -p 50000:50000 -v /jenkins_home:/var/jenkins_home --name jenkins jenkins</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"取得密碼-initialAdminPassword\"><a href=\"#取得密碼-initialAdminPassword\" class=\"headerlink\" title=\"取得密碼(initialAdminPassword)\"></a>取得密碼(initialAdminPassword)</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec jenkins cat /var/jenkins_home/secrets/initialAdminPassword</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"進入Jenkins\"><a href=\"#進入Jenkins\" class=\"headerlink\" title=\"進入Jenkins\"></a>進入Jenkins</h3><p><a href=\"http://127.0.0.1:8080/\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8080/</a></p>\n<h2 id=\"參考網址\"><a href=\"#參考網址\" class=\"headerlink\" title=\"參考網址\"></a>參考網址</h2><ul>\n<li><a href=\"https://github.com/jenkinsci/docker/blob/master/README.md\" target=\"_blank\" rel=\"noopener\">Jenkins On Doker</a></li>\n<li><a href=\"https://www.cloudbees.com/blog/get-started-jenkins-20-docker\" target=\"_blank\" rel=\"noopener\">Get Started with Jenkins 2.0 with Docker</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Docker-run-Jenkins\"><a href=\"#Docker-run-Jenkins\" class=\"headerlink\" title=\"Docker run Jenkins\"></a>Docker run Jenkins</h2><h3 id=\"安裝-jenkins\"><a href=\"#安裝-jenkins\" class=\"headerlink\" title=\"安裝 jenkins\"></a>安裝 jenkins</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p -m 777 jenkins_home</span><br><span class=\"line\">docker run -d -p 8080:8080 -p 50000:50000 -v /jenkins_home:/var/jenkins_home --name jenkins jenkins</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"取得密碼-initialAdminPassword\"><a href=\"#取得密碼-initialAdminPassword\" class=\"headerlink\" title=\"取得密碼(initialAdminPassword)\"></a>取得密碼(initialAdminPassword)</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec jenkins cat /var/jenkins_home/secrets/initialAdminPassword</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"進入Jenkins\"><a href=\"#進入Jenkins\" class=\"headerlink\" title=\"進入Jenkins\"></a>進入Jenkins</h3><p><a href=\"http://127.0.0.1:8080/\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8080/</a></p>\n<h2 id=\"參考網址\"><a href=\"#參考網址\" class=\"headerlink\" title=\"參考網址\"></a>參考網址</h2><ul>\n<li><a href=\"https://github.com/jenkinsci/docker/blob/master/README.md\" target=\"_blank\" rel=\"noopener\">Jenkins On Doker</a></li>\n<li><a href=\"https://www.cloudbees.com/blog/get-started-jenkins-20-docker\" target=\"_blank\" rel=\"noopener\">Get Started with Jenkins 2.0 with Docker</a></li>\n</ul>\n"},{"title":"Docker compose Run Redis","date":"2018-12-12T08:32:46.000Z","_content":"# Docker compose Run Redis\n\n## 建立資料夾 及 Dockerfile\n\n```bash\n mkdir composeredis\n cd composeredis\n vi docker-compose.yml\n```\n\n## docker-compose.yml\n\n```bash\nversion: \"3\"\nservices:\n  redis:\n    image: redis\n    ports:\n     - \"1233:6379\"\n    volumes:\n     - \"./tmp/redis:/data\"\n```\n\n## docker-compse run redis\n\n```bash\ndocker-compose up -d\n```\n\n![docker-compose](https://i.imgur.com/fzhLCey.png)\n\n## docekr ps -a\n\n![docekr ps -a](https://i.imgur.com/oCA5fVw.png)\n\n## 連線測試\n\n```bash\ntelnet 127.0.0.1 1233\nset mykey 999\nget mykey\n```\n\n![telnet](https://i.imgur.com/zz3UsVZ.png)","source":"_posts/Docker-compose-Run-Redis.md","raw":"---\ntitle: Docker compose Run Redis\ndate: 2018-12-12 16:32:46\ncategories:\n- Redis\ntags:\n- Docker\n- Redis\n- Docker compose\n- Visual Studio Code\n---\n# Docker compose Run Redis\n\n## 建立資料夾 及 Dockerfile\n\n```bash\n mkdir composeredis\n cd composeredis\n vi docker-compose.yml\n```\n\n## docker-compose.yml\n\n```bash\nversion: \"3\"\nservices:\n  redis:\n    image: redis\n    ports:\n     - \"1233:6379\"\n    volumes:\n     - \"./tmp/redis:/data\"\n```\n\n## docker-compse run redis\n\n```bash\ndocker-compose up -d\n```\n\n![docker-compose](https://i.imgur.com/fzhLCey.png)\n\n## docekr ps -a\n\n![docekr ps -a](https://i.imgur.com/oCA5fVw.png)\n\n## 連線測試\n\n```bash\ntelnet 127.0.0.1 1233\nset mykey 999\nget mykey\n```\n\n![telnet](https://i.imgur.com/zz3UsVZ.png)","slug":"Docker-compose-Run-Redis","published":1,"updated":"2019-03-09T09:33:53.320Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xts000a1q22roko7501","content":"<h1 id=\"Docker-compose-Run-Redis\"><a href=\"#Docker-compose-Run-Redis\" class=\"headerlink\" title=\"Docker compose Run Redis\"></a>Docker compose Run Redis</h1><h2 id=\"建立資料夾-及-Dockerfile\"><a href=\"#建立資料夾-及-Dockerfile\" class=\"headerlink\" title=\"建立資料夾 及 Dockerfile\"></a>建立資料夾 及 Dockerfile</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir composeredis</span><br><span class=\"line\"><span class=\"built_in\">cd</span> composeredis</span><br><span class=\"line\">vi docker-compose.yml</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"docker-compose-yml\"><a href=\"#docker-compose-yml\" class=\"headerlink\" title=\"docker-compose.yml\"></a>docker-compose.yml</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: <span class=\"string\">\"3\"</span></span><br><span class=\"line\">services:</span><br><span class=\"line\">  redis:</span><br><span class=\"line\">    image: redis</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">     - <span class=\"string\">\"1233:6379\"</span></span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">     - <span class=\"string\">\"./tmp/redis:/data\"</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"docker-compse-run-redis\"><a href=\"#docker-compse-run-redis\" class=\"headerlink\" title=\"docker-compse run redis\"></a>docker-compse run redis</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/fzhLCey.png\" alt=\"docker-compose\"></p>\n<h2 id=\"docekr-ps-a\"><a href=\"#docekr-ps-a\" class=\"headerlink\" title=\"docekr ps -a\"></a>docekr ps -a</h2><p><img src=\"https://i.imgur.com/oCA5fVw.png\" alt=\"docekr ps -a\"></p>\n<h2 id=\"連線測試\"><a href=\"#連線測試\" class=\"headerlink\" title=\"連線測試\"></a>連線測試</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">telnet 127.0.0.1 1233</span><br><span class=\"line\"><span class=\"built_in\">set</span> mykey 999</span><br><span class=\"line\">get mykey</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/zz3UsVZ.png\" alt=\"telnet\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Docker-compose-Run-Redis\"><a href=\"#Docker-compose-Run-Redis\" class=\"headerlink\" title=\"Docker compose Run Redis\"></a>Docker compose Run Redis</h1><h2 id=\"建立資料夾-及-Dockerfile\"><a href=\"#建立資料夾-及-Dockerfile\" class=\"headerlink\" title=\"建立資料夾 及 Dockerfile\"></a>建立資料夾 及 Dockerfile</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir composeredis</span><br><span class=\"line\"><span class=\"built_in\">cd</span> composeredis</span><br><span class=\"line\">vi docker-compose.yml</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"docker-compose-yml\"><a href=\"#docker-compose-yml\" class=\"headerlink\" title=\"docker-compose.yml\"></a>docker-compose.yml</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: <span class=\"string\">\"3\"</span></span><br><span class=\"line\">services:</span><br><span class=\"line\">  redis:</span><br><span class=\"line\">    image: redis</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">     - <span class=\"string\">\"1233:6379\"</span></span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">     - <span class=\"string\">\"./tmp/redis:/data\"</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"docker-compse-run-redis\"><a href=\"#docker-compse-run-redis\" class=\"headerlink\" title=\"docker-compse run redis\"></a>docker-compse run redis</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/fzhLCey.png\" alt=\"docker-compose\"></p>\n<h2 id=\"docekr-ps-a\"><a href=\"#docekr-ps-a\" class=\"headerlink\" title=\"docekr ps -a\"></a>docekr ps -a</h2><p><img src=\"https://i.imgur.com/oCA5fVw.png\" alt=\"docekr ps -a\"></p>\n<h2 id=\"連線測試\"><a href=\"#連線測試\" class=\"headerlink\" title=\"連線測試\"></a>連線測試</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">telnet 127.0.0.1 1233</span><br><span class=\"line\"><span class=\"built_in\">set</span> mykey 999</span><br><span class=\"line\">get mykey</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/zz3UsVZ.png\" alt=\"telnet\"></p>\n"},{"title":"Docker compose","date":"2018-12-12T06:33:21.000Z","_content":"# Docker compose\n\n> 安裝 [Docker Compose](https://docs.docker.com/compose/install/)\n\n```bash\nsudo curl -L \"https://github.com/docker/compose/releases/download/1.23.1/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\n\nsudo chmod +x /usr/local/bin/docker-compose\n\ndocker-compose --version\n```\n\n## 安裝完成就可以看版本資訊\n\n![安裝](https://i.imgur.com/mwTzUhO.png)\n\n## Step 1: Setup\n\n### 1.建立 composetest 資料夾\n\n```bash\nmkdir composetest\ncd composetest\n```\n\n### 2.建立 app.py\n\n```bash\ntouch app.py\n```\n\n#### 2.1.編輯 app.py\n\n```bash\nvi app.py\n```\n\nVi指令\n> i 編輯\n> ESC 結束編輯\n> :wq 存檔並離開\n\n#### 2.2輸入以下內容\n\n```bash\nimport time\n\nimport redis\nfrom flask import Flask\n\n\napp = Flask(__name__)\ncache = redis.Redis(host='redis', port=6379)\n\n\ndef get_hit_count():\n    retries = 5\n    while True:\n        try:\n            return cache.incr('hits')\n        except redis.exceptions.ConnectionError as exc:\n            if retries == 0:\n                raise exc\n            retries -= 1\n            time.sleep(0.5)\n\n\n@app.route('/')\ndef hello():\n    count = get_hit_count()\n    return 'Hello World! I have been seen {} times.\\n'.format(count)\n\nif __name__ == \"__main__\":\n    app.run(host=\"0.0.0.0\", debug=True)\n```\n\n### 3. 建立 requirements.txt\n\n```bash\ntouch requirements.txt\n```\n\n#### 3.1. 編輯 requirements.txt\n\n```bash\nvi requirements.txt\n```\n\n#### 3.2. 輸入文字\n\n```bash\nflask\nredis\n```\n\n## Step 2: Create a Dockerfile\n\n### 1. 建立 touch Dockerfile\n\n```bash\ntouch Dockerfile\n```\n#### 1.1. 輸入內容\n\n```\nFROM python:3.4-alpine\nADD . /code\nWORKDIR /code\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n```\n## Step 3: Define services in a Compose file\n\n### 1. 建立 docker-compose.yml\n```\ntouch docker-compose.yml\n```\n#### 1.1. 輸入內容\n```\nversion: '3'\nservices:\n  web:\n    build: .\n    ports:\n     - \"5000:5000\"\n  redis:\n    image: \"redis\"\n    ports:\n     - \"6379:6379\"\n```\n\n> 這時候 檔案結構會是這樣\n> \n![](https://i.imgur.com/mgKu7Wa.png)\n\n## Step 4: Build and run your app with Compose\n\n```\ndocker-compose up -d\n```\n\n>這時後就可以看到剛剛 Run 的 python 網站\n\n![](https://i.imgur.com/ftdICEH.png)\n\n\n## Step 5: Edit the Compose file to add a bind mount\n\n```\nversion: '3.1'\nservices:\n  web:\n    build: .\n    ports:\n     - \"5000:5000\"\n    volumes:\n     - .:/code\n  redis:\n    image: \"redis\"\n    ports:\n     - \"6379:6379\"\n```\n### 5.1. 再重新 build 一次就可以看到剛剛修改的內容\n\n```\ndocker-compose up -d\n```\n\n![](https://i.imgur.com/YT90O9u.png)\n\n\n## docker-compose 其他指令\n> 背景執行 docker-compose\n```\n docker-compose up -d\n```\n> 檢查 docker-compose 容器狀態\n \n```\ndocker-compose ps\n```\n\n\n# 參考\n\n* [Docker Compose](https://docs.docker.com/compose/)\n* [Get started with Docker Compose](https://docs.docker.com/compose/gettingstarted/)","source":"_posts/Docker-compose.md","raw":"---\ntitle: Docker compose\ndate: 2018-12-12 14:33:21\ncategories:\n- Docker compose\ntags:\n- Docker\n- Docker compose\n---\n# Docker compose\n\n> 安裝 [Docker Compose](https://docs.docker.com/compose/install/)\n\n```bash\nsudo curl -L \"https://github.com/docker/compose/releases/download/1.23.1/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\n\nsudo chmod +x /usr/local/bin/docker-compose\n\ndocker-compose --version\n```\n\n## 安裝完成就可以看版本資訊\n\n![安裝](https://i.imgur.com/mwTzUhO.png)\n\n## Step 1: Setup\n\n### 1.建立 composetest 資料夾\n\n```bash\nmkdir composetest\ncd composetest\n```\n\n### 2.建立 app.py\n\n```bash\ntouch app.py\n```\n\n#### 2.1.編輯 app.py\n\n```bash\nvi app.py\n```\n\nVi指令\n> i 編輯\n> ESC 結束編輯\n> :wq 存檔並離開\n\n#### 2.2輸入以下內容\n\n```bash\nimport time\n\nimport redis\nfrom flask import Flask\n\n\napp = Flask(__name__)\ncache = redis.Redis(host='redis', port=6379)\n\n\ndef get_hit_count():\n    retries = 5\n    while True:\n        try:\n            return cache.incr('hits')\n        except redis.exceptions.ConnectionError as exc:\n            if retries == 0:\n                raise exc\n            retries -= 1\n            time.sleep(0.5)\n\n\n@app.route('/')\ndef hello():\n    count = get_hit_count()\n    return 'Hello World! I have been seen {} times.\\n'.format(count)\n\nif __name__ == \"__main__\":\n    app.run(host=\"0.0.0.0\", debug=True)\n```\n\n### 3. 建立 requirements.txt\n\n```bash\ntouch requirements.txt\n```\n\n#### 3.1. 編輯 requirements.txt\n\n```bash\nvi requirements.txt\n```\n\n#### 3.2. 輸入文字\n\n```bash\nflask\nredis\n```\n\n## Step 2: Create a Dockerfile\n\n### 1. 建立 touch Dockerfile\n\n```bash\ntouch Dockerfile\n```\n#### 1.1. 輸入內容\n\n```\nFROM python:3.4-alpine\nADD . /code\nWORKDIR /code\nRUN pip install -r requirements.txt\nCMD [\"python\", \"app.py\"]\n```\n## Step 3: Define services in a Compose file\n\n### 1. 建立 docker-compose.yml\n```\ntouch docker-compose.yml\n```\n#### 1.1. 輸入內容\n```\nversion: '3'\nservices:\n  web:\n    build: .\n    ports:\n     - \"5000:5000\"\n  redis:\n    image: \"redis\"\n    ports:\n     - \"6379:6379\"\n```\n\n> 這時候 檔案結構會是這樣\n> \n![](https://i.imgur.com/mgKu7Wa.png)\n\n## Step 4: Build and run your app with Compose\n\n```\ndocker-compose up -d\n```\n\n>這時後就可以看到剛剛 Run 的 python 網站\n\n![](https://i.imgur.com/ftdICEH.png)\n\n\n## Step 5: Edit the Compose file to add a bind mount\n\n```\nversion: '3.1'\nservices:\n  web:\n    build: .\n    ports:\n     - \"5000:5000\"\n    volumes:\n     - .:/code\n  redis:\n    image: \"redis\"\n    ports:\n     - \"6379:6379\"\n```\n### 5.1. 再重新 build 一次就可以看到剛剛修改的內容\n\n```\ndocker-compose up -d\n```\n\n![](https://i.imgur.com/YT90O9u.png)\n\n\n## docker-compose 其他指令\n> 背景執行 docker-compose\n```\n docker-compose up -d\n```\n> 檢查 docker-compose 容器狀態\n \n```\ndocker-compose ps\n```\n\n\n# 參考\n\n* [Docker Compose](https://docs.docker.com/compose/)\n* [Get started with Docker Compose](https://docs.docker.com/compose/gettingstarted/)","slug":"Docker-compose","published":1,"updated":"2019-06-03T01:52:24.684Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xtt000e1q22pa4fj5qn","content":"<h1 id=\"Docker-compose\"><a href=\"#Docker-compose\" class=\"headerlink\" title=\"Docker compose\"></a>Docker compose</h1><blockquote>\n<p>安裝 <a href=\"https://docs.docker.com/compose/install/\" target=\"_blank\" rel=\"noopener\">Docker Compose</a></p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo curl -L <span class=\"string\">\"https://github.com/docker/compose/releases/download/1.23.1/docker-compose-<span class=\"variable\">$(uname -s)</span>-<span class=\"variable\">$(uname -m)</span>\"</span> -o /usr/<span class=\"built_in\">local</span>/bin/docker-compose</span><br><span class=\"line\"></span><br><span class=\"line\">sudo chmod +x /usr/<span class=\"built_in\">local</span>/bin/docker-compose</span><br><span class=\"line\"></span><br><span class=\"line\">docker-compose --version</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安裝完成就可以看版本資訊\"><a href=\"#安裝完成就可以看版本資訊\" class=\"headerlink\" title=\"安裝完成就可以看版本資訊\"></a>安裝完成就可以看版本資訊</h2><p><img src=\"https://i.imgur.com/mwTzUhO.png\" alt=\"安裝\"></p>\n<h2 id=\"Step-1-Setup\"><a href=\"#Step-1-Setup\" class=\"headerlink\" title=\"Step 1: Setup\"></a>Step 1: Setup</h2><h3 id=\"1-建立-composetest-資料夾\"><a href=\"#1-建立-composetest-資料夾\" class=\"headerlink\" title=\"1.建立 composetest 資料夾\"></a>1.建立 composetest 資料夾</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir composetest</span><br><span class=\"line\"><span class=\"built_in\">cd</span> composetest</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-建立-app-py\"><a href=\"#2-建立-app-py\" class=\"headerlink\" title=\"2.建立 app.py\"></a>2.建立 app.py</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch app.py</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-1-編輯-app-py\"><a href=\"#2-1-編輯-app-py\" class=\"headerlink\" title=\"2.1.編輯 app.py\"></a>2.1.編輯 app.py</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi app.py</span><br></pre></td></tr></table></figure>\n\n<p>Vi指令</p>\n<blockquote>\n<p>i 編輯<br>ESC 結束編輯<br>:wq 存檔並離開</p>\n</blockquote>\n<h4 id=\"2-2輸入以下內容\"><a href=\"#2-2輸入以下內容\" class=\"headerlink\" title=\"2.2輸入以下內容\"></a>2.2輸入以下內容</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import time</span><br><span class=\"line\"></span><br><span class=\"line\">import redis</span><br><span class=\"line\">from flask import Flask</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\">cache = redis.Redis(host=<span class=\"string\">'redis'</span>, port=6379)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def get_hit_count():</span><br><span class=\"line\">    retries = 5</span><br><span class=\"line\">    <span class=\"keyword\">while</span> True:</span><br><span class=\"line\">        try:</span><br><span class=\"line\">            <span class=\"built_in\">return</span> cache.incr(<span class=\"string\">'hits'</span>)</span><br><span class=\"line\">        except redis.exceptions.ConnectionError as exc:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> retries == 0:</span><br><span class=\"line\">                raise exc</span><br><span class=\"line\">            retries -= 1</span><br><span class=\"line\">            time.sleep(0.5)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(<span class=\"string\">'/'</span>)</span><br><span class=\"line\">def hello():</span><br><span class=\"line\">    count = get_hit_count()</span><br><span class=\"line\">    <span class=\"built_in\">return</span> <span class=\"string\">'Hello World! I have been seen &#123;&#125; times.\\n'</span>.format(count)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    app.run(host=<span class=\"string\">\"0.0.0.0\"</span>, debug=True)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-建立-requirements-txt\"><a href=\"#3-建立-requirements-txt\" class=\"headerlink\" title=\"3. 建立 requirements.txt\"></a>3. 建立 requirements.txt</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch requirements.txt</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-1-編輯-requirements-txt\"><a href=\"#3-1-編輯-requirements-txt\" class=\"headerlink\" title=\"3.1. 編輯 requirements.txt\"></a>3.1. 編輯 requirements.txt</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi requirements.txt</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-2-輸入文字\"><a href=\"#3-2-輸入文字\" class=\"headerlink\" title=\"3.2. 輸入文字\"></a>3.2. 輸入文字</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flask</span><br><span class=\"line\">redis</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Step-2-Create-a-Dockerfile\"><a href=\"#Step-2-Create-a-Dockerfile\" class=\"headerlink\" title=\"Step 2: Create a Dockerfile\"></a>Step 2: Create a Dockerfile</h2><h3 id=\"1-建立-touch-Dockerfile\"><a href=\"#1-建立-touch-Dockerfile\" class=\"headerlink\" title=\"1. 建立 touch Dockerfile\"></a>1. 建立 touch Dockerfile</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch Dockerfile</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-1-輸入內容\"><a href=\"#1-1-輸入內容\" class=\"headerlink\" title=\"1.1. 輸入內容\"></a>1.1. 輸入內容</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FROM python:3.4-alpine</span><br><span class=\"line\">ADD . /code</span><br><span class=\"line\">WORKDIR /code</span><br><span class=\"line\">RUN pip install -r requirements.txt</span><br><span class=\"line\">CMD [&quot;python&quot;, &quot;app.py&quot;]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Step-3-Define-services-in-a-Compose-file\"><a href=\"#Step-3-Define-services-in-a-Compose-file\" class=\"headerlink\" title=\"Step 3: Define services in a Compose file\"></a>Step 3: Define services in a Compose file</h2><h3 id=\"1-建立-docker-compose-yml\"><a href=\"#1-建立-docker-compose-yml\" class=\"headerlink\" title=\"1. 建立 docker-compose.yml\"></a>1. 建立 docker-compose.yml</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch docker-compose.yml</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-1-輸入內容-1\"><a href=\"#1-1-輸入內容-1\" class=\"headerlink\" title=\"1.1. 輸入內容\"></a>1.1. 輸入內容</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: &apos;3&apos;</span><br><span class=\"line\">services:</span><br><span class=\"line\">  web:</span><br><span class=\"line\">    build: .</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">     - &quot;5000:5000&quot;</span><br><span class=\"line\">  redis:</span><br><span class=\"line\">    image: &quot;redis&quot;</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">     - &quot;6379:6379&quot;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>這時候 檔案結構會是這樣</p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/mgKu7Wa.png\" alt></p>\n<h2 id=\"Step-4-Build-and-run-your-app-with-Compose\"><a href=\"#Step-4-Build-and-run-your-app-with-Compose\" class=\"headerlink\" title=\"Step 4: Build and run your app with Compose\"></a>Step 4: Build and run your app with Compose</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>這時後就可以看到剛剛 Run 的 python 網站</p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/ftdICEH.png\" alt></p>\n<h2 id=\"Step-5-Edit-the-Compose-file-to-add-a-bind-mount\"><a href=\"#Step-5-Edit-the-Compose-file-to-add-a-bind-mount\" class=\"headerlink\" title=\"Step 5: Edit the Compose file to add a bind mount\"></a>Step 5: Edit the Compose file to add a bind mount</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: &apos;3.1&apos;</span><br><span class=\"line\">services:</span><br><span class=\"line\">  web:</span><br><span class=\"line\">    build: .</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">     - &quot;5000:5000&quot;</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">     - .:/code</span><br><span class=\"line\">  redis:</span><br><span class=\"line\">    image: &quot;redis&quot;</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">     - &quot;6379:6379&quot;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-1-再重新-build-一次就可以看到剛剛修改的內容\"><a href=\"#5-1-再重新-build-一次就可以看到剛剛修改的內容\" class=\"headerlink\" title=\"5.1. 再重新 build 一次就可以看到剛剛修改的內容\"></a>5.1. 再重新 build 一次就可以看到剛剛修改的內容</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/YT90O9u.png\" alt></p>\n<h2 id=\"docker-compose-其他指令\"><a href=\"#docker-compose-其他指令\" class=\"headerlink\" title=\"docker-compose 其他指令\"></a>docker-compose 其他指令</h2><blockquote>\n<p>背景執行 docker-compose</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>檢查 docker-compose 容器狀態</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose ps</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://docs.docker.com/compose/\" target=\"_blank\" rel=\"noopener\">Docker Compose</a></li>\n<li><a href=\"https://docs.docker.com/compose/gettingstarted/\" target=\"_blank\" rel=\"noopener\">Get started with Docker Compose</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Docker-compose\"><a href=\"#Docker-compose\" class=\"headerlink\" title=\"Docker compose\"></a>Docker compose</h1><blockquote>\n<p>安裝 <a href=\"https://docs.docker.com/compose/install/\" target=\"_blank\" rel=\"noopener\">Docker Compose</a></p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo curl -L <span class=\"string\">\"https://github.com/docker/compose/releases/download/1.23.1/docker-compose-<span class=\"variable\">$(uname -s)</span>-<span class=\"variable\">$(uname -m)</span>\"</span> -o /usr/<span class=\"built_in\">local</span>/bin/docker-compose</span><br><span class=\"line\"></span><br><span class=\"line\">sudo chmod +x /usr/<span class=\"built_in\">local</span>/bin/docker-compose</span><br><span class=\"line\"></span><br><span class=\"line\">docker-compose --version</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安裝完成就可以看版本資訊\"><a href=\"#安裝完成就可以看版本資訊\" class=\"headerlink\" title=\"安裝完成就可以看版本資訊\"></a>安裝完成就可以看版本資訊</h2><p><img src=\"https://i.imgur.com/mwTzUhO.png\" alt=\"安裝\"></p>\n<h2 id=\"Step-1-Setup\"><a href=\"#Step-1-Setup\" class=\"headerlink\" title=\"Step 1: Setup\"></a>Step 1: Setup</h2><h3 id=\"1-建立-composetest-資料夾\"><a href=\"#1-建立-composetest-資料夾\" class=\"headerlink\" title=\"1.建立 composetest 資料夾\"></a>1.建立 composetest 資料夾</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir composetest</span><br><span class=\"line\"><span class=\"built_in\">cd</span> composetest</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-建立-app-py\"><a href=\"#2-建立-app-py\" class=\"headerlink\" title=\"2.建立 app.py\"></a>2.建立 app.py</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch app.py</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-1-編輯-app-py\"><a href=\"#2-1-編輯-app-py\" class=\"headerlink\" title=\"2.1.編輯 app.py\"></a>2.1.編輯 app.py</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi app.py</span><br></pre></td></tr></table></figure>\n\n<p>Vi指令</p>\n<blockquote>\n<p>i 編輯<br>ESC 結束編輯<br>:wq 存檔並離開</p>\n</blockquote>\n<h4 id=\"2-2輸入以下內容\"><a href=\"#2-2輸入以下內容\" class=\"headerlink\" title=\"2.2輸入以下內容\"></a>2.2輸入以下內容</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import time</span><br><span class=\"line\"></span><br><span class=\"line\">import redis</span><br><span class=\"line\">from flask import Flask</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\">cache = redis.Redis(host=<span class=\"string\">'redis'</span>, port=6379)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def get_hit_count():</span><br><span class=\"line\">    retries = 5</span><br><span class=\"line\">    <span class=\"keyword\">while</span> True:</span><br><span class=\"line\">        try:</span><br><span class=\"line\">            <span class=\"built_in\">return</span> cache.incr(<span class=\"string\">'hits'</span>)</span><br><span class=\"line\">        except redis.exceptions.ConnectionError as exc:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> retries == 0:</span><br><span class=\"line\">                raise exc</span><br><span class=\"line\">            retries -= 1</span><br><span class=\"line\">            time.sleep(0.5)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(<span class=\"string\">'/'</span>)</span><br><span class=\"line\">def hello():</span><br><span class=\"line\">    count = get_hit_count()</span><br><span class=\"line\">    <span class=\"built_in\">return</span> <span class=\"string\">'Hello World! I have been seen &#123;&#125; times.\\n'</span>.format(count)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    app.run(host=<span class=\"string\">\"0.0.0.0\"</span>, debug=True)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-建立-requirements-txt\"><a href=\"#3-建立-requirements-txt\" class=\"headerlink\" title=\"3. 建立 requirements.txt\"></a>3. 建立 requirements.txt</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch requirements.txt</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-1-編輯-requirements-txt\"><a href=\"#3-1-編輯-requirements-txt\" class=\"headerlink\" title=\"3.1. 編輯 requirements.txt\"></a>3.1. 編輯 requirements.txt</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi requirements.txt</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-2-輸入文字\"><a href=\"#3-2-輸入文字\" class=\"headerlink\" title=\"3.2. 輸入文字\"></a>3.2. 輸入文字</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flask</span><br><span class=\"line\">redis</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Step-2-Create-a-Dockerfile\"><a href=\"#Step-2-Create-a-Dockerfile\" class=\"headerlink\" title=\"Step 2: Create a Dockerfile\"></a>Step 2: Create a Dockerfile</h2><h3 id=\"1-建立-touch-Dockerfile\"><a href=\"#1-建立-touch-Dockerfile\" class=\"headerlink\" title=\"1. 建立 touch Dockerfile\"></a>1. 建立 touch Dockerfile</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch Dockerfile</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-1-輸入內容\"><a href=\"#1-1-輸入內容\" class=\"headerlink\" title=\"1.1. 輸入內容\"></a>1.1. 輸入內容</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FROM python:3.4-alpine</span><br><span class=\"line\">ADD . /code</span><br><span class=\"line\">WORKDIR /code</span><br><span class=\"line\">RUN pip install -r requirements.txt</span><br><span class=\"line\">CMD [&quot;python&quot;, &quot;app.py&quot;]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Step-3-Define-services-in-a-Compose-file\"><a href=\"#Step-3-Define-services-in-a-Compose-file\" class=\"headerlink\" title=\"Step 3: Define services in a Compose file\"></a>Step 3: Define services in a Compose file</h2><h3 id=\"1-建立-docker-compose-yml\"><a href=\"#1-建立-docker-compose-yml\" class=\"headerlink\" title=\"1. 建立 docker-compose.yml\"></a>1. 建立 docker-compose.yml</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch docker-compose.yml</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"1-1-輸入內容-1\"><a href=\"#1-1-輸入內容-1\" class=\"headerlink\" title=\"1.1. 輸入內容\"></a>1.1. 輸入內容</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: &apos;3&apos;</span><br><span class=\"line\">services:</span><br><span class=\"line\">  web:</span><br><span class=\"line\">    build: .</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">     - &quot;5000:5000&quot;</span><br><span class=\"line\">  redis:</span><br><span class=\"line\">    image: &quot;redis&quot;</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">     - &quot;6379:6379&quot;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>這時候 檔案結構會是這樣</p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/mgKu7Wa.png\" alt></p>\n<h2 id=\"Step-4-Build-and-run-your-app-with-Compose\"><a href=\"#Step-4-Build-and-run-your-app-with-Compose\" class=\"headerlink\" title=\"Step 4: Build and run your app with Compose\"></a>Step 4: Build and run your app with Compose</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>這時後就可以看到剛剛 Run 的 python 網站</p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/ftdICEH.png\" alt></p>\n<h2 id=\"Step-5-Edit-the-Compose-file-to-add-a-bind-mount\"><a href=\"#Step-5-Edit-the-Compose-file-to-add-a-bind-mount\" class=\"headerlink\" title=\"Step 5: Edit the Compose file to add a bind mount\"></a>Step 5: Edit the Compose file to add a bind mount</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: &apos;3.1&apos;</span><br><span class=\"line\">services:</span><br><span class=\"line\">  web:</span><br><span class=\"line\">    build: .</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">     - &quot;5000:5000&quot;</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">     - .:/code</span><br><span class=\"line\">  redis:</span><br><span class=\"line\">    image: &quot;redis&quot;</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">     - &quot;6379:6379&quot;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-1-再重新-build-一次就可以看到剛剛修改的內容\"><a href=\"#5-1-再重新-build-一次就可以看到剛剛修改的內容\" class=\"headerlink\" title=\"5.1. 再重新 build 一次就可以看到剛剛修改的內容\"></a>5.1. 再重新 build 一次就可以看到剛剛修改的內容</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/YT90O9u.png\" alt></p>\n<h2 id=\"docker-compose-其他指令\"><a href=\"#docker-compose-其他指令\" class=\"headerlink\" title=\"docker-compose 其他指令\"></a>docker-compose 其他指令</h2><blockquote>\n<p>背景執行 docker-compose</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>檢查 docker-compose 容器狀態</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose ps</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://docs.docker.com/compose/\" target=\"_blank\" rel=\"noopener\">Docker Compose</a></li>\n<li><a href=\"https://docs.docker.com/compose/gettingstarted/\" target=\"_blank\" rel=\"noopener\">Get started with Docker Compose</a></li>\n</ul>\n"},{"title":"Docker run Nginx","date":"2018-12-07T07:24:06.000Z","_content":"\n## Docker run Nginx\n\n### Run Nginx\n\n```\ndocker run -d -p 1324:80 --name mynginx nginx\n```\n![](https://i.imgur.com/q64ALvt.png)\n\n### Using Dockerfile Create Nginx & Run Nginx\n\n#### Creat Docker file\n\n> Dockerfile\n```\nFROM nginx\nCOPY ./index.html /usr/share/nginx/html\n```\n\n> index.html\n```\n<!DOCTYPE html>\n<html>\n    <head>\n        <title></title>\n    </head>\n    <body>\n        <p>Hello Nginx</p>\n    </body>\n</html>\n\n```\n\n#### build docker imgage\n```\ndocker build -t mynginx:1 .\n```\n#### Run mynginx\n\n```\ndocker run -d --name mynginx -p 1234:80 mynginx:1\n```\n![](https://i.imgur.com/yeybXMF.png)\n\n\n# 參考\n\n* [https://hub.docker.com/_/nginx/](https://hub.docker.com/_/nginx/)","source":"_posts/Docker-run-Nginx.md","raw":"---\ntitle: Docker run Nginx\ndate: 2018-12-07 15:24:06\ncategories:\n- Nginx\ntags:\n- Docker\n- Nginx\n---\n\n## Docker run Nginx\n\n### Run Nginx\n\n```\ndocker run -d -p 1324:80 --name mynginx nginx\n```\n![](https://i.imgur.com/q64ALvt.png)\n\n### Using Dockerfile Create Nginx & Run Nginx\n\n#### Creat Docker file\n\n> Dockerfile\n```\nFROM nginx\nCOPY ./index.html /usr/share/nginx/html\n```\n\n> index.html\n```\n<!DOCTYPE html>\n<html>\n    <head>\n        <title></title>\n    </head>\n    <body>\n        <p>Hello Nginx</p>\n    </body>\n</html>\n\n```\n\n#### build docker imgage\n```\ndocker build -t mynginx:1 .\n```\n#### Run mynginx\n\n```\ndocker run -d --name mynginx -p 1234:80 mynginx:1\n```\n![](https://i.imgur.com/yeybXMF.png)\n\n\n# 參考\n\n* [https://hub.docker.com/_/nginx/](https://hub.docker.com/_/nginx/)","slug":"Docker-run-Nginx","published":1,"updated":"2019-06-03T01:52:24.685Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xtu000g1q222p0zyd73","content":"<h2 id=\"Docker-run-Nginx\"><a href=\"#Docker-run-Nginx\" class=\"headerlink\" title=\"Docker run Nginx\"></a>Docker run Nginx</h2><h3 id=\"Run-Nginx\"><a href=\"#Run-Nginx\" class=\"headerlink\" title=\"Run Nginx\"></a>Run Nginx</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d -p 1324:80 --name mynginx nginx</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/q64ALvt.png\" alt></p>\n<h3 id=\"Using-Dockerfile-Create-Nginx-amp-Run-Nginx\"><a href=\"#Using-Dockerfile-Create-Nginx-amp-Run-Nginx\" class=\"headerlink\" title=\"Using Dockerfile Create Nginx &amp; Run Nginx\"></a>Using Dockerfile Create Nginx &amp; Run Nginx</h3><h4 id=\"Creat-Docker-file\"><a href=\"#Creat-Docker-file\" class=\"headerlink\" title=\"Creat Docker file\"></a>Creat Docker file</h4><blockquote>\n<p>Dockerfile</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FROM nginx</span><br><span class=\"line\">COPY ./index.html /usr/share/nginx/html</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>index.html</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">    &lt;head&gt;</span><br><span class=\"line\">        &lt;title&gt;&lt;/title&gt;</span><br><span class=\"line\">    &lt;/head&gt;</span><br><span class=\"line\">    &lt;body&gt;</span><br><span class=\"line\">        &lt;p&gt;Hello Nginx&lt;/p&gt;</span><br><span class=\"line\">    &lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"build-docker-imgage\"><a href=\"#build-docker-imgage\" class=\"headerlink\" title=\"build docker imgage\"></a>build docker imgage</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker build -t mynginx:1 .</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Run-mynginx\"><a href=\"#Run-mynginx\" class=\"headerlink\" title=\"Run mynginx\"></a>Run mynginx</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d --name mynginx -p 1234:80 mynginx:1</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/yeybXMF.png\" alt></p>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://hub.docker.com/_/nginx/\" target=\"_blank\" rel=\"noopener\">https://hub.docker.com/_/nginx/</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Docker-run-Nginx\"><a href=\"#Docker-run-Nginx\" class=\"headerlink\" title=\"Docker run Nginx\"></a>Docker run Nginx</h2><h3 id=\"Run-Nginx\"><a href=\"#Run-Nginx\" class=\"headerlink\" title=\"Run Nginx\"></a>Run Nginx</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d -p 1324:80 --name mynginx nginx</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/q64ALvt.png\" alt></p>\n<h3 id=\"Using-Dockerfile-Create-Nginx-amp-Run-Nginx\"><a href=\"#Using-Dockerfile-Create-Nginx-amp-Run-Nginx\" class=\"headerlink\" title=\"Using Dockerfile Create Nginx &amp; Run Nginx\"></a>Using Dockerfile Create Nginx &amp; Run Nginx</h3><h4 id=\"Creat-Docker-file\"><a href=\"#Creat-Docker-file\" class=\"headerlink\" title=\"Creat Docker file\"></a>Creat Docker file</h4><blockquote>\n<p>Dockerfile</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FROM nginx</span><br><span class=\"line\">COPY ./index.html /usr/share/nginx/html</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>index.html</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">    &lt;head&gt;</span><br><span class=\"line\">        &lt;title&gt;&lt;/title&gt;</span><br><span class=\"line\">    &lt;/head&gt;</span><br><span class=\"line\">    &lt;body&gt;</span><br><span class=\"line\">        &lt;p&gt;Hello Nginx&lt;/p&gt;</span><br><span class=\"line\">    &lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"build-docker-imgage\"><a href=\"#build-docker-imgage\" class=\"headerlink\" title=\"build docker imgage\"></a>build docker imgage</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker build -t mynginx:1 .</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Run-mynginx\"><a href=\"#Run-mynginx\" class=\"headerlink\" title=\"Run mynginx\"></a>Run mynginx</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d --name mynginx -p 1234:80 mynginx:1</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/yeybXMF.png\" alt></p>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://hub.docker.com/_/nginx/\" target=\"_blank\" rel=\"noopener\">https://hub.docker.com/_/nginx/</a></li>\n</ul>\n"},{"title":"ELK Stack","date":"2019-01-09T09:00:00.000Z","_content":"\n# ELK Stack\nELK Stack 是 Elasticsearch、Logstash、Kibana這三個Open Source專案\n\n![](https://i.imgur.com/Fk7k1EP.png)\n\n\n### Elasticsearch \n\n> Elasticsearch是用於分佈式搜索和實時數據進行分析的平台\n\n### Kibana \n\n> Kibana是讓Elasticsearch儲存的數據視覺化的平台\n\n### Logstash\n\n> 日誌搜集工具\n\n### Beat\n\n> Beats是一系列產品的統稱，屬於ElasticStack裡面收集數據的這一層\n\n\n#  Docker Run ELK\n\n## 1. Install Dokcer\n\n```\ncurl -fsSL https://get.docker.com/ | sh\n```\n#### Dokcer 指令\n>  -d 背景執行\n    --name 名稱\n    --restart=always 自動重啟\n    -p port\n    -V 指定資料夾位置\n\n## 2. Run elasticsearch\n\n\n### 2-1. Creat elasticsearch 持久層資料夾跟設定權限\n\n```\nmkdir -m 777 /data/elasticsearch\n```\n\n### 2-2. Run elasticsearch 之前要先設定 [max_map_count](https://github.com/docker-library/elasticsearch/issues/111)\n\n```\nsudo sysctl -w vm.max_map_count=262144\n```\n### 2-3. docker run\n\n```\ndocker run  -d -p 9200:9200 -p 9300:9300 --name elasticsearch -v /data/elasticsearch:/usr/share/elasticsearch/data docker.elastic.co/elasticsearch/elasticsearch:6.5.4\n```\n> [Install Elasticsearch with Docker](https://www.elastic.co/guide/en/elasticsearch/reference/6.5/docker.html#docker)\n> \n### 2-4 Preview elasticsearch\n\n```\ncurl 127.0.0.1:9200\n```\n![](https://i.imgur.com/DspQBxW.png)\n\n## 3. Run kibana\n\n### 3-1 docker run\n```\ndocker run -d --name kibana --restart=always -p 5601:5601 --link elasticsearch:elasticsearch docker.elastic.co/kibana/kibana:6.5.4\n```\n> [Run kibana with Docker](https://www.elastic.co/guide/en/kibana/6.5/docker.html)\n\n> Set [kibana.yml](https://www.elastic.co/guide/en/kibana/6.5/settings.html)\n\n### 3-2 Preview kibana(http://yourhost:5601)\n\n![](https://i.imgur.com/NRw4J3U.png)\n\n### 3-3  Check kibana status (http://yourhost:5601/status)\n\n![](https://i.imgur.com/LUBhBbr.png)\n\n## 4. Run Logstash\n\n### 4-1 Run [donetcoreapi](https://ste5022424.github.io/2019/01/04/Net-Core-Nlog/)\n\n#### Run\n![](https://i.imgur.com/2lT45G1.png)\n#### Log\n![](https://i.imgur.com/zoE34DD.png)\n\n### 4-2 Creat logstash.conf\n\n#### Creat in /tmp/logstash/pipeline/\n```\ncd ..\ncd /tmp/logstash/pipeline/\nvi logstash.conf\n```\n#### logstash.conf\n```\nfile {\n    path => \"/usr/share/logstash/Log/*\"\n    type => \"file\"\n    start_position => \"beginning\"\n   }\n }\n\nfilter {\n    grok {\n           match => [\"message\", \"%{TIMESTAMP_ISO8601:[@metadata][timestamp]} %{NUMBER:threadid} %{LOGLEVEL:loglevel} %{NOTSPACE:logger} %{GREEDYDATA:message}\"]\n           overwrite => [ \"message\" ]\n        }\n}\n\noutput {\n  elasticsearch {\n    hosts => [\"elasticsearch:9200\"]\n    index => \"logstash-test\"  \n   }\n  stdout { codec => rubydebug}\n}\n```\n> [logstash pattern](https://github.com/elastic/logstash/blob/v1.4.2/patterns/grok-patterns)\n\n> [Grok filter plugin](https://www.elastic.co/guide/en/logstash/current/plugins-filters-grok.html)\n### 4-3 docker run\n```\ndocker run it ---name logstash --link elasticsearch:elasticsearch -v /tmp/logstash/pipeline:/usr/share/logstash/pipeline/ -v /tmp/Log/:/usr/share/logstash/Log/ docker.elastic.co/logstash/logstash:6.5.4\n```\n\n> /tmp/Log/:/usr/share/logstash/Log/   → [donetcoreapi](https://ste5022424.github.io/2019/01/04/Net-Core-Nlog/) log 共用至 logstash\n \n> /tmp/logstash/pipeline:/usr/share/logstash/pipeline/ →  自定義 logstash.conf\n\n> [Configuring Logstash for Docker](https://www.elastic.co/guide/en/logstash/6.5/config-setting-files.html)\n  \n### 4-4 Push to elasticsearch\n\n#### attach  logstash\n```\ndocker attach logstash\n```\n![](https://i.imgur.com/H5u5hz5.png)\n\n### 4-4 Set kibana\n\n#### Set index\n![](https://i.imgur.com/JZOrSEX.png)\n\n#### Set Time Filter\n![](https://i.imgur.com/jfVaVXd.png)\n\n#### Discover\n![](https://i.imgur.com/0GrJwU1.png)\n\n## 5. Filebeat\n\n> 官網的[架構圖](https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-overview.html)可以知道 Filebeat 是一個搜集器，它可以把 log 蒐集起來之後往後面送\n\n![架構圖](https://i.imgur.com/l9fRRUE.png)\n\n\n> Integrating with Messaging Queuesedit\n\n> 在Log量很大的情況下，會使用 MessagQueue 來減輕負擔，以下是官方網站的[架構圖](https://www.elastic.co/guide/en/logstash/current/deploying-and-scaling.html)\n\n![架構圖](https://www.elastic.co/guide/en/logstash/current/static/images/deploy4.png)\n\n> filebeat 蒐集log後，推送到 kafka，logstash 訂閱 kafka，logstash 從 kafa 抓資料後，再將 log parser，然後再送到 elasticsearch ，最後再由 kibana 顯示資料\n\n## 5.1 Docker  run [Filebeat](https://www.elastic.co/guide/en/beats/filebeat/current/running-on-docker.html#_custom_image_configuration)\n\n> Dockerfile\n\n```bash\nFROM docker.elastic.co/beats/filebeat:6.6.2\nCOPY filebeat.yml /usr/share/filebeat/filebeat.yml\nUSER root\nRUN chown root:filebeat /usr/share/filebeat/filebeat.yml\nUSER filebeat\n```\n\n> [Configure the Logstash output](https://www.elastic.co/guide/en/beats/filebeat/master/kafka-output.html)\n\n## 參考\n\n* [installing-elastic-stack](https://www.elastic.co/guide/en/elastic-stack/current/installing-elastic-stack.html)\n* [deploying-and-scaling](https://www.elastic.co/guide/en/logstash/6.5/deploying-and-scaling.html)\n* [官方網站](https://www.elastic.co/cn/elk-stack)","source":"_posts/ELK Stack.md","raw":"---\ntitle: ELK Stack\ndate: 2019-01-09 17:00:00\ncategories:\n- ELK Stack\ntags:\n- ELK Stack\n- Docker\n- Elasticsearch\n- Kibana\n- Logstash\n---\n\n# ELK Stack\nELK Stack 是 Elasticsearch、Logstash、Kibana這三個Open Source專案\n\n![](https://i.imgur.com/Fk7k1EP.png)\n\n\n### Elasticsearch \n\n> Elasticsearch是用於分佈式搜索和實時數據進行分析的平台\n\n### Kibana \n\n> Kibana是讓Elasticsearch儲存的數據視覺化的平台\n\n### Logstash\n\n> 日誌搜集工具\n\n### Beat\n\n> Beats是一系列產品的統稱，屬於ElasticStack裡面收集數據的這一層\n\n\n#  Docker Run ELK\n\n## 1. Install Dokcer\n\n```\ncurl -fsSL https://get.docker.com/ | sh\n```\n#### Dokcer 指令\n>  -d 背景執行\n    --name 名稱\n    --restart=always 自動重啟\n    -p port\n    -V 指定資料夾位置\n\n## 2. Run elasticsearch\n\n\n### 2-1. Creat elasticsearch 持久層資料夾跟設定權限\n\n```\nmkdir -m 777 /data/elasticsearch\n```\n\n### 2-2. Run elasticsearch 之前要先設定 [max_map_count](https://github.com/docker-library/elasticsearch/issues/111)\n\n```\nsudo sysctl -w vm.max_map_count=262144\n```\n### 2-3. docker run\n\n```\ndocker run  -d -p 9200:9200 -p 9300:9300 --name elasticsearch -v /data/elasticsearch:/usr/share/elasticsearch/data docker.elastic.co/elasticsearch/elasticsearch:6.5.4\n```\n> [Install Elasticsearch with Docker](https://www.elastic.co/guide/en/elasticsearch/reference/6.5/docker.html#docker)\n> \n### 2-4 Preview elasticsearch\n\n```\ncurl 127.0.0.1:9200\n```\n![](https://i.imgur.com/DspQBxW.png)\n\n## 3. Run kibana\n\n### 3-1 docker run\n```\ndocker run -d --name kibana --restart=always -p 5601:5601 --link elasticsearch:elasticsearch docker.elastic.co/kibana/kibana:6.5.4\n```\n> [Run kibana with Docker](https://www.elastic.co/guide/en/kibana/6.5/docker.html)\n\n> Set [kibana.yml](https://www.elastic.co/guide/en/kibana/6.5/settings.html)\n\n### 3-2 Preview kibana(http://yourhost:5601)\n\n![](https://i.imgur.com/NRw4J3U.png)\n\n### 3-3  Check kibana status (http://yourhost:5601/status)\n\n![](https://i.imgur.com/LUBhBbr.png)\n\n## 4. Run Logstash\n\n### 4-1 Run [donetcoreapi](https://ste5022424.github.io/2019/01/04/Net-Core-Nlog/)\n\n#### Run\n![](https://i.imgur.com/2lT45G1.png)\n#### Log\n![](https://i.imgur.com/zoE34DD.png)\n\n### 4-2 Creat logstash.conf\n\n#### Creat in /tmp/logstash/pipeline/\n```\ncd ..\ncd /tmp/logstash/pipeline/\nvi logstash.conf\n```\n#### logstash.conf\n```\nfile {\n    path => \"/usr/share/logstash/Log/*\"\n    type => \"file\"\n    start_position => \"beginning\"\n   }\n }\n\nfilter {\n    grok {\n           match => [\"message\", \"%{TIMESTAMP_ISO8601:[@metadata][timestamp]} %{NUMBER:threadid} %{LOGLEVEL:loglevel} %{NOTSPACE:logger} %{GREEDYDATA:message}\"]\n           overwrite => [ \"message\" ]\n        }\n}\n\noutput {\n  elasticsearch {\n    hosts => [\"elasticsearch:9200\"]\n    index => \"logstash-test\"  \n   }\n  stdout { codec => rubydebug}\n}\n```\n> [logstash pattern](https://github.com/elastic/logstash/blob/v1.4.2/patterns/grok-patterns)\n\n> [Grok filter plugin](https://www.elastic.co/guide/en/logstash/current/plugins-filters-grok.html)\n### 4-3 docker run\n```\ndocker run it ---name logstash --link elasticsearch:elasticsearch -v /tmp/logstash/pipeline:/usr/share/logstash/pipeline/ -v /tmp/Log/:/usr/share/logstash/Log/ docker.elastic.co/logstash/logstash:6.5.4\n```\n\n> /tmp/Log/:/usr/share/logstash/Log/   → [donetcoreapi](https://ste5022424.github.io/2019/01/04/Net-Core-Nlog/) log 共用至 logstash\n \n> /tmp/logstash/pipeline:/usr/share/logstash/pipeline/ →  自定義 logstash.conf\n\n> [Configuring Logstash for Docker](https://www.elastic.co/guide/en/logstash/6.5/config-setting-files.html)\n  \n### 4-4 Push to elasticsearch\n\n#### attach  logstash\n```\ndocker attach logstash\n```\n![](https://i.imgur.com/H5u5hz5.png)\n\n### 4-4 Set kibana\n\n#### Set index\n![](https://i.imgur.com/JZOrSEX.png)\n\n#### Set Time Filter\n![](https://i.imgur.com/jfVaVXd.png)\n\n#### Discover\n![](https://i.imgur.com/0GrJwU1.png)\n\n## 5. Filebeat\n\n> 官網的[架構圖](https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-overview.html)可以知道 Filebeat 是一個搜集器，它可以把 log 蒐集起來之後往後面送\n\n![架構圖](https://i.imgur.com/l9fRRUE.png)\n\n\n> Integrating with Messaging Queuesedit\n\n> 在Log量很大的情況下，會使用 MessagQueue 來減輕負擔，以下是官方網站的[架構圖](https://www.elastic.co/guide/en/logstash/current/deploying-and-scaling.html)\n\n![架構圖](https://www.elastic.co/guide/en/logstash/current/static/images/deploy4.png)\n\n> filebeat 蒐集log後，推送到 kafka，logstash 訂閱 kafka，logstash 從 kafa 抓資料後，再將 log parser，然後再送到 elasticsearch ，最後再由 kibana 顯示資料\n\n## 5.1 Docker  run [Filebeat](https://www.elastic.co/guide/en/beats/filebeat/current/running-on-docker.html#_custom_image_configuration)\n\n> Dockerfile\n\n```bash\nFROM docker.elastic.co/beats/filebeat:6.6.2\nCOPY filebeat.yml /usr/share/filebeat/filebeat.yml\nUSER root\nRUN chown root:filebeat /usr/share/filebeat/filebeat.yml\nUSER filebeat\n```\n\n> [Configure the Logstash output](https://www.elastic.co/guide/en/beats/filebeat/master/kafka-output.html)\n\n## 參考\n\n* [installing-elastic-stack](https://www.elastic.co/guide/en/elastic-stack/current/installing-elastic-stack.html)\n* [deploying-and-scaling](https://www.elastic.co/guide/en/logstash/6.5/deploying-and-scaling.html)\n* [官方網站](https://www.elastic.co/cn/elk-stack)","slug":"ELK Stack","published":1,"updated":"2019-06-03T01:52:24.687Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xtw000l1q22w314l2ww","content":"<h1 id=\"ELK-Stack\"><a href=\"#ELK-Stack\" class=\"headerlink\" title=\"ELK Stack\"></a>ELK Stack</h1><p>ELK Stack 是 Elasticsearch、Logstash、Kibana這三個Open Source專案</p>\n<p><img src=\"https://i.imgur.com/Fk7k1EP.png\" alt></p>\n<h3 id=\"Elasticsearch\"><a href=\"#Elasticsearch\" class=\"headerlink\" title=\"Elasticsearch\"></a>Elasticsearch</h3><blockquote>\n<p>Elasticsearch是用於分佈式搜索和實時數據進行分析的平台</p>\n</blockquote>\n<h3 id=\"Kibana\"><a href=\"#Kibana\" class=\"headerlink\" title=\"Kibana\"></a>Kibana</h3><blockquote>\n<p>Kibana是讓Elasticsearch儲存的數據視覺化的平台</p>\n</blockquote>\n<h3 id=\"Logstash\"><a href=\"#Logstash\" class=\"headerlink\" title=\"Logstash\"></a>Logstash</h3><blockquote>\n<p>日誌搜集工具</p>\n</blockquote>\n<h3 id=\"Beat\"><a href=\"#Beat\" class=\"headerlink\" title=\"Beat\"></a>Beat</h3><blockquote>\n<p>Beats是一系列產品的統稱，屬於ElasticStack裡面收集數據的這一層</p>\n</blockquote>\n<h1 id=\"Docker-Run-ELK\"><a href=\"#Docker-Run-ELK\" class=\"headerlink\" title=\"Docker Run ELK\"></a>Docker Run ELK</h1><h2 id=\"1-Install-Dokcer\"><a href=\"#1-Install-Dokcer\" class=\"headerlink\" title=\"1. Install Dokcer\"></a>1. Install Dokcer</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -fsSL https://get.docker.com/ | sh</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Dokcer-指令\"><a href=\"#Dokcer-指令\" class=\"headerlink\" title=\"Dokcer 指令\"></a>Dokcer 指令</h4><blockquote>\n<p> -d 背景執行<br>    –name 名稱<br>    –restart=always 自動重啟<br>    -p port<br>    -V 指定資料夾位置</p>\n</blockquote>\n<h2 id=\"2-Run-elasticsearch\"><a href=\"#2-Run-elasticsearch\" class=\"headerlink\" title=\"2. Run elasticsearch\"></a>2. Run elasticsearch</h2><h3 id=\"2-1-Creat-elasticsearch-持久層資料夾跟設定權限\"><a href=\"#2-1-Creat-elasticsearch-持久層資料夾跟設定權限\" class=\"headerlink\" title=\"2-1. Creat elasticsearch 持久層資料夾跟設定權限\"></a>2-1. Creat elasticsearch 持久層資料夾跟設定權限</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -m 777 /data/elasticsearch</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-2-Run-elasticsearch-之前要先設定-max-map-count\"><a href=\"#2-2-Run-elasticsearch-之前要先設定-max-map-count\" class=\"headerlink\" title=\"2-2. Run elasticsearch 之前要先設定 max_map_count\"></a>2-2. Run elasticsearch 之前要先設定 <a href=\"https://github.com/docker-library/elasticsearch/issues/111\" target=\"_blank\" rel=\"noopener\">max_map_count</a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo sysctl -w vm.max_map_count=262144</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-3-docker-run\"><a href=\"#2-3-docker-run\" class=\"headerlink\" title=\"2-3. docker run\"></a>2-3. docker run</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run  -d -p 9200:9200 -p 9300:9300 --name elasticsearch -v /data/elasticsearch:/usr/share/elasticsearch/data docker.elastic.co/elasticsearch/elasticsearch:6.5.4</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.5/docker.html#docker\" target=\"_blank\" rel=\"noopener\">Install Elasticsearch with Docker</a></p>\n</blockquote>\n<h3 id=\"2-4-Preview-elasticsearch\"><a href=\"#2-4-Preview-elasticsearch\" class=\"headerlink\" title=\"2-4 Preview elasticsearch\"></a>2-4 Preview elasticsearch</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl 127.0.0.1:9200</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/DspQBxW.png\" alt></p>\n<h2 id=\"3-Run-kibana\"><a href=\"#3-Run-kibana\" class=\"headerlink\" title=\"3. Run kibana\"></a>3. Run kibana</h2><h3 id=\"3-1-docker-run\"><a href=\"#3-1-docker-run\" class=\"headerlink\" title=\"3-1 docker run\"></a>3-1 docker run</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d --name kibana --restart=always -p 5601:5601 --link elasticsearch:elasticsearch docker.elastic.co/kibana/kibana:6.5.4</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><a href=\"https://www.elastic.co/guide/en/kibana/6.5/docker.html\" target=\"_blank\" rel=\"noopener\">Run kibana with Docker</a></p>\n</blockquote>\n<blockquote>\n<p>Set <a href=\"https://www.elastic.co/guide/en/kibana/6.5/settings.html\" target=\"_blank\" rel=\"noopener\">kibana.yml</a></p>\n</blockquote>\n<h3 id=\"3-2-Preview-kibana-http-yourhost-5601\"><a href=\"#3-2-Preview-kibana-http-yourhost-5601\" class=\"headerlink\" title=\"3-2 Preview kibana(http://yourhost:5601)\"></a>3-2 Preview kibana(<a href=\"http://yourhost:5601\" target=\"_blank\" rel=\"noopener\">http://yourhost:5601</a>)</h3><p><img src=\"https://i.imgur.com/NRw4J3U.png\" alt></p>\n<h3 id=\"3-3-Check-kibana-status-http-yourhost-5601-status\"><a href=\"#3-3-Check-kibana-status-http-yourhost-5601-status\" class=\"headerlink\" title=\"3-3  Check kibana status (http://yourhost:5601/status)\"></a>3-3  Check kibana status (<a href=\"http://yourhost:5601/status\" target=\"_blank\" rel=\"noopener\">http://yourhost:5601/status</a>)</h3><p><img src=\"https://i.imgur.com/LUBhBbr.png\" alt></p>\n<h2 id=\"4-Run-Logstash\"><a href=\"#4-Run-Logstash\" class=\"headerlink\" title=\"4. Run Logstash\"></a>4. Run Logstash</h2><h3 id=\"4-1-Run-donetcoreapi\"><a href=\"#4-1-Run-donetcoreapi\" class=\"headerlink\" title=\"4-1 Run donetcoreapi\"></a>4-1 Run <a href=\"https://ste5022424.github.io/2019/01/04/Net-Core-Nlog/\">donetcoreapi</a></h3><h4 id=\"Run\"><a href=\"#Run\" class=\"headerlink\" title=\"Run\"></a>Run</h4><p><img src=\"https://i.imgur.com/2lT45G1.png\" alt></p>\n<h4 id=\"Log\"><a href=\"#Log\" class=\"headerlink\" title=\"Log\"></a>Log</h4><p><img src=\"https://i.imgur.com/zoE34DD.png\" alt></p>\n<h3 id=\"4-2-Creat-logstash-conf\"><a href=\"#4-2-Creat-logstash-conf\" class=\"headerlink\" title=\"4-2 Creat logstash.conf\"></a>4-2 Creat logstash.conf</h3><h4 id=\"Creat-in-tmp-logstash-pipeline\"><a href=\"#Creat-in-tmp-logstash-pipeline\" class=\"headerlink\" title=\"Creat in /tmp/logstash/pipeline/\"></a>Creat in /tmp/logstash/pipeline/</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ..</span><br><span class=\"line\">cd /tmp/logstash/pipeline/</span><br><span class=\"line\">vi logstash.conf</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"logstash-conf\"><a href=\"#logstash-conf\" class=\"headerlink\" title=\"logstash.conf\"></a>logstash.conf</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file &#123;</span><br><span class=\"line\">    path =&gt; &quot;/usr/share/logstash/Log/*&quot;</span><br><span class=\"line\">    type =&gt; &quot;file&quot;</span><br><span class=\"line\">    start_position =&gt; &quot;beginning&quot;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">filter &#123;</span><br><span class=\"line\">    grok &#123;</span><br><span class=\"line\">           match =&gt; [&quot;message&quot;, &quot;%&#123;TIMESTAMP_ISO8601:[@metadata][timestamp]&#125; %&#123;NUMBER:threadid&#125; %&#123;LOGLEVEL:loglevel&#125; %&#123;NOTSPACE:logger&#125; %&#123;GREEDYDATA:message&#125;&quot;]</span><br><span class=\"line\">           overwrite =&gt; [ &quot;message&quot; ]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">output &#123;</span><br><span class=\"line\">  elasticsearch &#123;</span><br><span class=\"line\">    hosts =&gt; [&quot;elasticsearch:9200&quot;]</span><br><span class=\"line\">    index =&gt; &quot;logstash-test&quot;  </span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">  stdout &#123; codec =&gt; rubydebug&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><a href=\"https://github.com/elastic/logstash/blob/v1.4.2/patterns/grok-patterns\" target=\"_blank\" rel=\"noopener\">logstash pattern</a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"https://www.elastic.co/guide/en/logstash/current/plugins-filters-grok.html\" target=\"_blank\" rel=\"noopener\">Grok filter plugin</a></p>\n</blockquote>\n<h3 id=\"4-3-docker-run\"><a href=\"#4-3-docker-run\" class=\"headerlink\" title=\"4-3 docker run\"></a>4-3 docker run</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run it ---name logstash --link elasticsearch:elasticsearch -v /tmp/logstash/pipeline:/usr/share/logstash/pipeline/ -v /tmp/Log/:/usr/share/logstash/Log/ docker.elastic.co/logstash/logstash:6.5.4</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>/tmp/Log/:/usr/share/logstash/Log/   → <a href=\"https://ste5022424.github.io/2019/01/04/Net-Core-Nlog/\">donetcoreapi</a> log 共用至 logstash</p>\n</blockquote>\n<blockquote>\n<p>/tmp/logstash/pipeline:/usr/share/logstash/pipeline/ →  自定義 logstash.conf</p>\n</blockquote>\n<blockquote>\n<p><a href=\"https://www.elastic.co/guide/en/logstash/6.5/config-setting-files.html\" target=\"_blank\" rel=\"noopener\">Configuring Logstash for Docker</a></p>\n</blockquote>\n<h3 id=\"4-4-Push-to-elasticsearch\"><a href=\"#4-4-Push-to-elasticsearch\" class=\"headerlink\" title=\"4-4 Push to elasticsearch\"></a>4-4 Push to elasticsearch</h3><h4 id=\"attach-logstash\"><a href=\"#attach-logstash\" class=\"headerlink\" title=\"attach  logstash\"></a>attach  logstash</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker attach logstash</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/H5u5hz5.png\" alt></p>\n<h3 id=\"4-4-Set-kibana\"><a href=\"#4-4-Set-kibana\" class=\"headerlink\" title=\"4-4 Set kibana\"></a>4-4 Set kibana</h3><h4 id=\"Set-index\"><a href=\"#Set-index\" class=\"headerlink\" title=\"Set index\"></a>Set index</h4><p><img src=\"https://i.imgur.com/JZOrSEX.png\" alt></p>\n<h4 id=\"Set-Time-Filter\"><a href=\"#Set-Time-Filter\" class=\"headerlink\" title=\"Set Time Filter\"></a>Set Time Filter</h4><p><img src=\"https://i.imgur.com/jfVaVXd.png\" alt></p>\n<h4 id=\"Discover\"><a href=\"#Discover\" class=\"headerlink\" title=\"Discover\"></a>Discover</h4><p><img src=\"https://i.imgur.com/0GrJwU1.png\" alt></p>\n<h2 id=\"5-Filebeat\"><a href=\"#5-Filebeat\" class=\"headerlink\" title=\"5. Filebeat\"></a>5. Filebeat</h2><blockquote>\n<p>官網的<a href=\"https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-overview.html\" target=\"_blank\" rel=\"noopener\">架構圖</a>可以知道 Filebeat 是一個搜集器，它可以把 log 蒐集起來之後往後面送</p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/l9fRRUE.png\" alt=\"架構圖\"></p>\n<blockquote>\n<p>Integrating with Messaging Queuesedit</p>\n</blockquote>\n<blockquote>\n<p>在Log量很大的情況下，會使用 MessagQueue 來減輕負擔，以下是官方網站的<a href=\"https://www.elastic.co/guide/en/logstash/current/deploying-and-scaling.html\" target=\"_blank\" rel=\"noopener\">架構圖</a></p>\n</blockquote>\n<p><img src=\"https://www.elastic.co/guide/en/logstash/current/static/images/deploy4.png\" alt=\"架構圖\"></p>\n<blockquote>\n<p>filebeat 蒐集log後，推送到 kafka，logstash 訂閱 kafka，logstash 從 kafa 抓資料後，再將 log parser，然後再送到 elasticsearch ，最後再由 kibana 顯示資料</p>\n</blockquote>\n<h2 id=\"5-1-Docker-run-Filebeat\"><a href=\"#5-1-Docker-run-Filebeat\" class=\"headerlink\" title=\"5.1 Docker  run Filebeat\"></a>5.1 Docker  run <a href=\"https://www.elastic.co/guide/en/beats/filebeat/current/running-on-docker.html#_custom_image_configuration\" target=\"_blank\" rel=\"noopener\">Filebeat</a></h2><blockquote>\n<p>Dockerfile</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FROM docker.elastic.co/beats/filebeat:6.6.2</span><br><span class=\"line\">COPY filebeat.yml /usr/share/filebeat/filebeat.yml</span><br><span class=\"line\">USER root</span><br><span class=\"line\">RUN chown root:filebeat /usr/share/filebeat/filebeat.yml</span><br><span class=\"line\">USER filebeat</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><a href=\"https://www.elastic.co/guide/en/beats/filebeat/master/kafka-output.html\" target=\"_blank\" rel=\"noopener\">Configure the Logstash output</a></p>\n</blockquote>\n<h2 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h2><ul>\n<li><a href=\"https://www.elastic.co/guide/en/elastic-stack/current/installing-elastic-stack.html\" target=\"_blank\" rel=\"noopener\">installing-elastic-stack</a></li>\n<li><a href=\"https://www.elastic.co/guide/en/logstash/6.5/deploying-and-scaling.html\" target=\"_blank\" rel=\"noopener\">deploying-and-scaling</a></li>\n<li><a href=\"https://www.elastic.co/cn/elk-stack\" target=\"_blank\" rel=\"noopener\">官方網站</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"ELK-Stack\"><a href=\"#ELK-Stack\" class=\"headerlink\" title=\"ELK Stack\"></a>ELK Stack</h1><p>ELK Stack 是 Elasticsearch、Logstash、Kibana這三個Open Source專案</p>\n<p><img src=\"https://i.imgur.com/Fk7k1EP.png\" alt></p>\n<h3 id=\"Elasticsearch\"><a href=\"#Elasticsearch\" class=\"headerlink\" title=\"Elasticsearch\"></a>Elasticsearch</h3><blockquote>\n<p>Elasticsearch是用於分佈式搜索和實時數據進行分析的平台</p>\n</blockquote>\n<h3 id=\"Kibana\"><a href=\"#Kibana\" class=\"headerlink\" title=\"Kibana\"></a>Kibana</h3><blockquote>\n<p>Kibana是讓Elasticsearch儲存的數據視覺化的平台</p>\n</blockquote>\n<h3 id=\"Logstash\"><a href=\"#Logstash\" class=\"headerlink\" title=\"Logstash\"></a>Logstash</h3><blockquote>\n<p>日誌搜集工具</p>\n</blockquote>\n<h3 id=\"Beat\"><a href=\"#Beat\" class=\"headerlink\" title=\"Beat\"></a>Beat</h3><blockquote>\n<p>Beats是一系列產品的統稱，屬於ElasticStack裡面收集數據的這一層</p>\n</blockquote>\n<h1 id=\"Docker-Run-ELK\"><a href=\"#Docker-Run-ELK\" class=\"headerlink\" title=\"Docker Run ELK\"></a>Docker Run ELK</h1><h2 id=\"1-Install-Dokcer\"><a href=\"#1-Install-Dokcer\" class=\"headerlink\" title=\"1. Install Dokcer\"></a>1. Install Dokcer</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -fsSL https://get.docker.com/ | sh</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Dokcer-指令\"><a href=\"#Dokcer-指令\" class=\"headerlink\" title=\"Dokcer 指令\"></a>Dokcer 指令</h4><blockquote>\n<p> -d 背景執行<br>    –name 名稱<br>    –restart=always 自動重啟<br>    -p port<br>    -V 指定資料夾位置</p>\n</blockquote>\n<h2 id=\"2-Run-elasticsearch\"><a href=\"#2-Run-elasticsearch\" class=\"headerlink\" title=\"2. Run elasticsearch\"></a>2. Run elasticsearch</h2><h3 id=\"2-1-Creat-elasticsearch-持久層資料夾跟設定權限\"><a href=\"#2-1-Creat-elasticsearch-持久層資料夾跟設定權限\" class=\"headerlink\" title=\"2-1. Creat elasticsearch 持久層資料夾跟設定權限\"></a>2-1. Creat elasticsearch 持久層資料夾跟設定權限</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -m 777 /data/elasticsearch</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-2-Run-elasticsearch-之前要先設定-max-map-count\"><a href=\"#2-2-Run-elasticsearch-之前要先設定-max-map-count\" class=\"headerlink\" title=\"2-2. Run elasticsearch 之前要先設定 max_map_count\"></a>2-2. Run elasticsearch 之前要先設定 <a href=\"https://github.com/docker-library/elasticsearch/issues/111\" target=\"_blank\" rel=\"noopener\">max_map_count</a></h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo sysctl -w vm.max_map_count=262144</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-3-docker-run\"><a href=\"#2-3-docker-run\" class=\"headerlink\" title=\"2-3. docker run\"></a>2-3. docker run</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run  -d -p 9200:9200 -p 9300:9300 --name elasticsearch -v /data/elasticsearch:/usr/share/elasticsearch/data docker.elastic.co/elasticsearch/elasticsearch:6.5.4</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/6.5/docker.html#docker\" target=\"_blank\" rel=\"noopener\">Install Elasticsearch with Docker</a></p>\n</blockquote>\n<h3 id=\"2-4-Preview-elasticsearch\"><a href=\"#2-4-Preview-elasticsearch\" class=\"headerlink\" title=\"2-4 Preview elasticsearch\"></a>2-4 Preview elasticsearch</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl 127.0.0.1:9200</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/DspQBxW.png\" alt></p>\n<h2 id=\"3-Run-kibana\"><a href=\"#3-Run-kibana\" class=\"headerlink\" title=\"3. Run kibana\"></a>3. Run kibana</h2><h3 id=\"3-1-docker-run\"><a href=\"#3-1-docker-run\" class=\"headerlink\" title=\"3-1 docker run\"></a>3-1 docker run</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d --name kibana --restart=always -p 5601:5601 --link elasticsearch:elasticsearch docker.elastic.co/kibana/kibana:6.5.4</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><a href=\"https://www.elastic.co/guide/en/kibana/6.5/docker.html\" target=\"_blank\" rel=\"noopener\">Run kibana with Docker</a></p>\n</blockquote>\n<blockquote>\n<p>Set <a href=\"https://www.elastic.co/guide/en/kibana/6.5/settings.html\" target=\"_blank\" rel=\"noopener\">kibana.yml</a></p>\n</blockquote>\n<h3 id=\"3-2-Preview-kibana-http-yourhost-5601\"><a href=\"#3-2-Preview-kibana-http-yourhost-5601\" class=\"headerlink\" title=\"3-2 Preview kibana(http://yourhost:5601)\"></a>3-2 Preview kibana(<a href=\"http://yourhost:5601\" target=\"_blank\" rel=\"noopener\">http://yourhost:5601</a>)</h3><p><img src=\"https://i.imgur.com/NRw4J3U.png\" alt></p>\n<h3 id=\"3-3-Check-kibana-status-http-yourhost-5601-status\"><a href=\"#3-3-Check-kibana-status-http-yourhost-5601-status\" class=\"headerlink\" title=\"3-3  Check kibana status (http://yourhost:5601/status)\"></a>3-3  Check kibana status (<a href=\"http://yourhost:5601/status\" target=\"_blank\" rel=\"noopener\">http://yourhost:5601/status</a>)</h3><p><img src=\"https://i.imgur.com/LUBhBbr.png\" alt></p>\n<h2 id=\"4-Run-Logstash\"><a href=\"#4-Run-Logstash\" class=\"headerlink\" title=\"4. Run Logstash\"></a>4. Run Logstash</h2><h3 id=\"4-1-Run-donetcoreapi\"><a href=\"#4-1-Run-donetcoreapi\" class=\"headerlink\" title=\"4-1 Run donetcoreapi\"></a>4-1 Run <a href=\"https://ste5022424.github.io/2019/01/04/Net-Core-Nlog/\">donetcoreapi</a></h3><h4 id=\"Run\"><a href=\"#Run\" class=\"headerlink\" title=\"Run\"></a>Run</h4><p><img src=\"https://i.imgur.com/2lT45G1.png\" alt></p>\n<h4 id=\"Log\"><a href=\"#Log\" class=\"headerlink\" title=\"Log\"></a>Log</h4><p><img src=\"https://i.imgur.com/zoE34DD.png\" alt></p>\n<h3 id=\"4-2-Creat-logstash-conf\"><a href=\"#4-2-Creat-logstash-conf\" class=\"headerlink\" title=\"4-2 Creat logstash.conf\"></a>4-2 Creat logstash.conf</h3><h4 id=\"Creat-in-tmp-logstash-pipeline\"><a href=\"#Creat-in-tmp-logstash-pipeline\" class=\"headerlink\" title=\"Creat in /tmp/logstash/pipeline/\"></a>Creat in /tmp/logstash/pipeline/</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ..</span><br><span class=\"line\">cd /tmp/logstash/pipeline/</span><br><span class=\"line\">vi logstash.conf</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"logstash-conf\"><a href=\"#logstash-conf\" class=\"headerlink\" title=\"logstash.conf\"></a>logstash.conf</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file &#123;</span><br><span class=\"line\">    path =&gt; &quot;/usr/share/logstash/Log/*&quot;</span><br><span class=\"line\">    type =&gt; &quot;file&quot;</span><br><span class=\"line\">    start_position =&gt; &quot;beginning&quot;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">filter &#123;</span><br><span class=\"line\">    grok &#123;</span><br><span class=\"line\">           match =&gt; [&quot;message&quot;, &quot;%&#123;TIMESTAMP_ISO8601:[@metadata][timestamp]&#125; %&#123;NUMBER:threadid&#125; %&#123;LOGLEVEL:loglevel&#125; %&#123;NOTSPACE:logger&#125; %&#123;GREEDYDATA:message&#125;&quot;]</span><br><span class=\"line\">           overwrite =&gt; [ &quot;message&quot; ]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">output &#123;</span><br><span class=\"line\">  elasticsearch &#123;</span><br><span class=\"line\">    hosts =&gt; [&quot;elasticsearch:9200&quot;]</span><br><span class=\"line\">    index =&gt; &quot;logstash-test&quot;  </span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">  stdout &#123; codec =&gt; rubydebug&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><a href=\"https://github.com/elastic/logstash/blob/v1.4.2/patterns/grok-patterns\" target=\"_blank\" rel=\"noopener\">logstash pattern</a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"https://www.elastic.co/guide/en/logstash/current/plugins-filters-grok.html\" target=\"_blank\" rel=\"noopener\">Grok filter plugin</a></p>\n</blockquote>\n<h3 id=\"4-3-docker-run\"><a href=\"#4-3-docker-run\" class=\"headerlink\" title=\"4-3 docker run\"></a>4-3 docker run</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run it ---name logstash --link elasticsearch:elasticsearch -v /tmp/logstash/pipeline:/usr/share/logstash/pipeline/ -v /tmp/Log/:/usr/share/logstash/Log/ docker.elastic.co/logstash/logstash:6.5.4</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>/tmp/Log/:/usr/share/logstash/Log/   → <a href=\"https://ste5022424.github.io/2019/01/04/Net-Core-Nlog/\">donetcoreapi</a> log 共用至 logstash</p>\n</blockquote>\n<blockquote>\n<p>/tmp/logstash/pipeline:/usr/share/logstash/pipeline/ →  自定義 logstash.conf</p>\n</blockquote>\n<blockquote>\n<p><a href=\"https://www.elastic.co/guide/en/logstash/6.5/config-setting-files.html\" target=\"_blank\" rel=\"noopener\">Configuring Logstash for Docker</a></p>\n</blockquote>\n<h3 id=\"4-4-Push-to-elasticsearch\"><a href=\"#4-4-Push-to-elasticsearch\" class=\"headerlink\" title=\"4-4 Push to elasticsearch\"></a>4-4 Push to elasticsearch</h3><h4 id=\"attach-logstash\"><a href=\"#attach-logstash\" class=\"headerlink\" title=\"attach  logstash\"></a>attach  logstash</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker attach logstash</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/H5u5hz5.png\" alt></p>\n<h3 id=\"4-4-Set-kibana\"><a href=\"#4-4-Set-kibana\" class=\"headerlink\" title=\"4-4 Set kibana\"></a>4-4 Set kibana</h3><h4 id=\"Set-index\"><a href=\"#Set-index\" class=\"headerlink\" title=\"Set index\"></a>Set index</h4><p><img src=\"https://i.imgur.com/JZOrSEX.png\" alt></p>\n<h4 id=\"Set-Time-Filter\"><a href=\"#Set-Time-Filter\" class=\"headerlink\" title=\"Set Time Filter\"></a>Set Time Filter</h4><p><img src=\"https://i.imgur.com/jfVaVXd.png\" alt></p>\n<h4 id=\"Discover\"><a href=\"#Discover\" class=\"headerlink\" title=\"Discover\"></a>Discover</h4><p><img src=\"https://i.imgur.com/0GrJwU1.png\" alt></p>\n<h2 id=\"5-Filebeat\"><a href=\"#5-Filebeat\" class=\"headerlink\" title=\"5. Filebeat\"></a>5. Filebeat</h2><blockquote>\n<p>官網的<a href=\"https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-overview.html\" target=\"_blank\" rel=\"noopener\">架構圖</a>可以知道 Filebeat 是一個搜集器，它可以把 log 蒐集起來之後往後面送</p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/l9fRRUE.png\" alt=\"架構圖\"></p>\n<blockquote>\n<p>Integrating with Messaging Queuesedit</p>\n</blockquote>\n<blockquote>\n<p>在Log量很大的情況下，會使用 MessagQueue 來減輕負擔，以下是官方網站的<a href=\"https://www.elastic.co/guide/en/logstash/current/deploying-and-scaling.html\" target=\"_blank\" rel=\"noopener\">架構圖</a></p>\n</blockquote>\n<p><img src=\"https://www.elastic.co/guide/en/logstash/current/static/images/deploy4.png\" alt=\"架構圖\"></p>\n<blockquote>\n<p>filebeat 蒐集log後，推送到 kafka，logstash 訂閱 kafka，logstash 從 kafa 抓資料後，再將 log parser，然後再送到 elasticsearch ，最後再由 kibana 顯示資料</p>\n</blockquote>\n<h2 id=\"5-1-Docker-run-Filebeat\"><a href=\"#5-1-Docker-run-Filebeat\" class=\"headerlink\" title=\"5.1 Docker  run Filebeat\"></a>5.1 Docker  run <a href=\"https://www.elastic.co/guide/en/beats/filebeat/current/running-on-docker.html#_custom_image_configuration\" target=\"_blank\" rel=\"noopener\">Filebeat</a></h2><blockquote>\n<p>Dockerfile</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FROM docker.elastic.co/beats/filebeat:6.6.2</span><br><span class=\"line\">COPY filebeat.yml /usr/share/filebeat/filebeat.yml</span><br><span class=\"line\">USER root</span><br><span class=\"line\">RUN chown root:filebeat /usr/share/filebeat/filebeat.yml</span><br><span class=\"line\">USER filebeat</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><a href=\"https://www.elastic.co/guide/en/beats/filebeat/master/kafka-output.html\" target=\"_blank\" rel=\"noopener\">Configure the Logstash output</a></p>\n</blockquote>\n<h2 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h2><ul>\n<li><a href=\"https://www.elastic.co/guide/en/elastic-stack/current/installing-elastic-stack.html\" target=\"_blank\" rel=\"noopener\">installing-elastic-stack</a></li>\n<li><a href=\"https://www.elastic.co/guide/en/logstash/6.5/deploying-and-scaling.html\" target=\"_blank\" rel=\"noopener\">deploying-and-scaling</a></li>\n<li><a href=\"https://www.elastic.co/cn/elk-stack\" target=\"_blank\" rel=\"noopener\">官方網站</a></li>\n</ul>\n"},{"title":"Docker 介紹","date":"2018-10-19T05:44:56.000Z","_content":"\n![](https://i.imgur.com/XFB46do.png)\n\n\n> Docker 是一個開源專案，它使用GO語言實作，讓應用程式在容器中工作並且可以自動進行，使用者不需要去關心容器的管理，操作 Docker 的容器就像操作一個快速輕量級的虛擬機。\n\n[https://www.docker.com/](https://www.docker.com/ \"https://www.docker.com/\")\n\n## Container 容器\n\n> Container技術採取共用Host OS ，不需在每一個Container內執行Guest OS，而是在OS內的核心系統層來打造虛擬執行環境，也被稱為是OS層的虛擬化技術。\n\n![](https://i.imgur.com/XF9AmNd.png)\n\n## Image 映像檔\n\n> 映像檔一個唯讀的板模，裏面包含了容器內的所有應用程式\n\n\n## Docker 倉庫\n\n> 存放Docker映像檔的倉庫，可以建立公用或者私用的倉庫\n\n\n[https://hub.docker.com/](https://hub.docker.com/ \"hub.docker.com\")\n\n\n# Docker 常用指令\n\n### 安裝Docker\n```\ncurl -fsSL https://get.docker.com/ | sh\n```\n\n### 查 Docker 版本\n    docker version\n    \n### 取得 映像檔\n    docker pull\n\n### 查看 映像檔\n    docker images\n\n    -a 完整資訊\n    -q 只列檔名\n\n### 刪除 映像檔\n    docker rmi image_id \n\n### 匯出 映像檔\n    docker save -o\n\n#### 載入 映像檔\n    docker load \n\n\n### 查看 容器\n    docker ps -a\n\n### 執行容器\n    docker run\n\n    -d 背景執行\n    --name 命名container\n    -p 指定主機的port 轉到 container 的 port\n\n### 刪除 容器 \n    docker stop container_id\n    docker rm container_id\n\n### 批次停止跟刪除 容器\n    docker stop $(docker ps -a -q)\n    docker rm $(docker ps -a -q)","source":"_posts/Docker.md","raw":"---\ntitle: Docker 介紹\ndate: 2018-10-19 13:44:56\ncategories: \n- Docker\ntags:\n- Docker\n---\n\n![](https://i.imgur.com/XFB46do.png)\n\n\n> Docker 是一個開源專案，它使用GO語言實作，讓應用程式在容器中工作並且可以自動進行，使用者不需要去關心容器的管理，操作 Docker 的容器就像操作一個快速輕量級的虛擬機。\n\n[https://www.docker.com/](https://www.docker.com/ \"https://www.docker.com/\")\n\n## Container 容器\n\n> Container技術採取共用Host OS ，不需在每一個Container內執行Guest OS，而是在OS內的核心系統層來打造虛擬執行環境，也被稱為是OS層的虛擬化技術。\n\n![](https://i.imgur.com/XF9AmNd.png)\n\n## Image 映像檔\n\n> 映像檔一個唯讀的板模，裏面包含了容器內的所有應用程式\n\n\n## Docker 倉庫\n\n> 存放Docker映像檔的倉庫，可以建立公用或者私用的倉庫\n\n\n[https://hub.docker.com/](https://hub.docker.com/ \"hub.docker.com\")\n\n\n# Docker 常用指令\n\n### 安裝Docker\n```\ncurl -fsSL https://get.docker.com/ | sh\n```\n\n### 查 Docker 版本\n    docker version\n    \n### 取得 映像檔\n    docker pull\n\n### 查看 映像檔\n    docker images\n\n    -a 完整資訊\n    -q 只列檔名\n\n### 刪除 映像檔\n    docker rmi image_id \n\n### 匯出 映像檔\n    docker save -o\n\n#### 載入 映像檔\n    docker load \n\n\n### 查看 容器\n    docker ps -a\n\n### 執行容器\n    docker run\n\n    -d 背景執行\n    --name 命名container\n    -p 指定主機的port 轉到 container 的 port\n\n### 刪除 容器 \n    docker stop container_id\n    docker rm container_id\n\n### 批次停止跟刪除 容器\n    docker stop $(docker ps -a -q)\n    docker rm $(docker ps -a -q)","slug":"Docker","published":1,"updated":"2019-06-03T01:52:24.686Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xty000m1q22ovfdsnng","content":"<p><img src=\"https://i.imgur.com/XFB46do.png\" alt></p>\n<blockquote>\n<p>Docker 是一個開源專案，它使用GO語言實作，讓應用程式在容器中工作並且可以自動進行，使用者不需要去關心容器的管理，操作 Docker 的容器就像操作一個快速輕量級的虛擬機。</p>\n</blockquote>\n<p><a href=\"https://www.docker.com/\" title=\"https://www.docker.com/\" target=\"_blank\" rel=\"noopener\">https://www.docker.com/</a></p>\n<h2 id=\"Container-容器\"><a href=\"#Container-容器\" class=\"headerlink\" title=\"Container 容器\"></a>Container 容器</h2><blockquote>\n<p>Container技術採取共用Host OS ，不需在每一個Container內執行Guest OS，而是在OS內的核心系統層來打造虛擬執行環境，也被稱為是OS層的虛擬化技術。</p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/XF9AmNd.png\" alt></p>\n<h2 id=\"Image-映像檔\"><a href=\"#Image-映像檔\" class=\"headerlink\" title=\"Image 映像檔\"></a>Image 映像檔</h2><blockquote>\n<p>映像檔一個唯讀的板模，裏面包含了容器內的所有應用程式</p>\n</blockquote>\n<h2 id=\"Docker-倉庫\"><a href=\"#Docker-倉庫\" class=\"headerlink\" title=\"Docker 倉庫\"></a>Docker 倉庫</h2><blockquote>\n<p>存放Docker映像檔的倉庫，可以建立公用或者私用的倉庫</p>\n</blockquote>\n<p><a href=\"https://hub.docker.com/\" title=\"hub.docker.com\" target=\"_blank\" rel=\"noopener\">https://hub.docker.com/</a></p>\n<h1 id=\"Docker-常用指令\"><a href=\"#Docker-常用指令\" class=\"headerlink\" title=\"Docker 常用指令\"></a>Docker 常用指令</h1><h3 id=\"安裝Docker\"><a href=\"#安裝Docker\" class=\"headerlink\" title=\"安裝Docker\"></a>安裝Docker</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -fsSL https://get.docker.com/ | sh</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"查-Docker-版本\"><a href=\"#查-Docker-版本\" class=\"headerlink\" title=\"查 Docker 版本\"></a>查 Docker 版本</h3><pre><code>docker version</code></pre><h3 id=\"取得-映像檔\"><a href=\"#取得-映像檔\" class=\"headerlink\" title=\"取得 映像檔\"></a>取得 映像檔</h3><pre><code>docker pull</code></pre><h3 id=\"查看-映像檔\"><a href=\"#查看-映像檔\" class=\"headerlink\" title=\"查看 映像檔\"></a>查看 映像檔</h3><pre><code>docker images\n\n-a 完整資訊\n-q 只列檔名</code></pre><h3 id=\"刪除-映像檔\"><a href=\"#刪除-映像檔\" class=\"headerlink\" title=\"刪除 映像檔\"></a>刪除 映像檔</h3><pre><code>docker rmi image_id </code></pre><h3 id=\"匯出-映像檔\"><a href=\"#匯出-映像檔\" class=\"headerlink\" title=\"匯出 映像檔\"></a>匯出 映像檔</h3><pre><code>docker save -o</code></pre><h4 id=\"載入-映像檔\"><a href=\"#載入-映像檔\" class=\"headerlink\" title=\"載入 映像檔\"></a>載入 映像檔</h4><pre><code>docker load </code></pre><h3 id=\"查看-容器\"><a href=\"#查看-容器\" class=\"headerlink\" title=\"查看 容器\"></a>查看 容器</h3><pre><code>docker ps -a</code></pre><h3 id=\"執行容器\"><a href=\"#執行容器\" class=\"headerlink\" title=\"執行容器\"></a>執行容器</h3><pre><code>docker run\n\n-d 背景執行\n--name 命名container\n-p 指定主機的port 轉到 container 的 port</code></pre><h3 id=\"刪除-容器\"><a href=\"#刪除-容器\" class=\"headerlink\" title=\"刪除 容器\"></a>刪除 容器</h3><pre><code>docker stop container_id\ndocker rm container_id</code></pre><h3 id=\"批次停止跟刪除-容器\"><a href=\"#批次停止跟刪除-容器\" class=\"headerlink\" title=\"批次停止跟刪除 容器\"></a>批次停止跟刪除 容器</h3><pre><code>docker stop $(docker ps -a -q)\ndocker rm $(docker ps -a -q)</code></pre>","site":{"data":{}},"excerpt":"","more":"<p><img src=\"https://i.imgur.com/XFB46do.png\" alt></p>\n<blockquote>\n<p>Docker 是一個開源專案，它使用GO語言實作，讓應用程式在容器中工作並且可以自動進行，使用者不需要去關心容器的管理，操作 Docker 的容器就像操作一個快速輕量級的虛擬機。</p>\n</blockquote>\n<p><a href=\"https://www.docker.com/\" title=\"https://www.docker.com/\" target=\"_blank\" rel=\"noopener\">https://www.docker.com/</a></p>\n<h2 id=\"Container-容器\"><a href=\"#Container-容器\" class=\"headerlink\" title=\"Container 容器\"></a>Container 容器</h2><blockquote>\n<p>Container技術採取共用Host OS ，不需在每一個Container內執行Guest OS，而是在OS內的核心系統層來打造虛擬執行環境，也被稱為是OS層的虛擬化技術。</p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/XF9AmNd.png\" alt></p>\n<h2 id=\"Image-映像檔\"><a href=\"#Image-映像檔\" class=\"headerlink\" title=\"Image 映像檔\"></a>Image 映像檔</h2><blockquote>\n<p>映像檔一個唯讀的板模，裏面包含了容器內的所有應用程式</p>\n</blockquote>\n<h2 id=\"Docker-倉庫\"><a href=\"#Docker-倉庫\" class=\"headerlink\" title=\"Docker 倉庫\"></a>Docker 倉庫</h2><blockquote>\n<p>存放Docker映像檔的倉庫，可以建立公用或者私用的倉庫</p>\n</blockquote>\n<p><a href=\"https://hub.docker.com/\" title=\"hub.docker.com\" target=\"_blank\" rel=\"noopener\">https://hub.docker.com/</a></p>\n<h1 id=\"Docker-常用指令\"><a href=\"#Docker-常用指令\" class=\"headerlink\" title=\"Docker 常用指令\"></a>Docker 常用指令</h1><h3 id=\"安裝Docker\"><a href=\"#安裝Docker\" class=\"headerlink\" title=\"安裝Docker\"></a>安裝Docker</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -fsSL https://get.docker.com/ | sh</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"查-Docker-版本\"><a href=\"#查-Docker-版本\" class=\"headerlink\" title=\"查 Docker 版本\"></a>查 Docker 版本</h3><pre><code>docker version</code></pre><h3 id=\"取得-映像檔\"><a href=\"#取得-映像檔\" class=\"headerlink\" title=\"取得 映像檔\"></a>取得 映像檔</h3><pre><code>docker pull</code></pre><h3 id=\"查看-映像檔\"><a href=\"#查看-映像檔\" class=\"headerlink\" title=\"查看 映像檔\"></a>查看 映像檔</h3><pre><code>docker images\n\n-a 完整資訊\n-q 只列檔名</code></pre><h3 id=\"刪除-映像檔\"><a href=\"#刪除-映像檔\" class=\"headerlink\" title=\"刪除 映像檔\"></a>刪除 映像檔</h3><pre><code>docker rmi image_id </code></pre><h3 id=\"匯出-映像檔\"><a href=\"#匯出-映像檔\" class=\"headerlink\" title=\"匯出 映像檔\"></a>匯出 映像檔</h3><pre><code>docker save -o</code></pre><h4 id=\"載入-映像檔\"><a href=\"#載入-映像檔\" class=\"headerlink\" title=\"載入 映像檔\"></a>載入 映像檔</h4><pre><code>docker load </code></pre><h3 id=\"查看-容器\"><a href=\"#查看-容器\" class=\"headerlink\" title=\"查看 容器\"></a>查看 容器</h3><pre><code>docker ps -a</code></pre><h3 id=\"執行容器\"><a href=\"#執行容器\" class=\"headerlink\" title=\"執行容器\"></a>執行容器</h3><pre><code>docker run\n\n-d 背景執行\n--name 命名container\n-p 指定主機的port 轉到 container 的 port</code></pre><h3 id=\"刪除-容器\"><a href=\"#刪除-容器\" class=\"headerlink\" title=\"刪除 容器\"></a>刪除 容器</h3><pre><code>docker stop container_id\ndocker rm container_id</code></pre><h3 id=\"批次停止跟刪除-容器\"><a href=\"#批次停止跟刪除-容器\" class=\"headerlink\" title=\"批次停止跟刪除 容器\"></a>批次停止跟刪除 容器</h3><pre><code>docker stop $(docker ps -a -q)\ndocker rm $(docker ps -a -q)</code></pre>"},{"title":"ESLint Javascript 程式碼規範檢查工具","date":"2019-05-21T09:42:06.000Z","_content":"\n# ESLint Javascript 程式碼規範檢查工具\n\n## 1. 安裝工具\n\n```bash=\nnpm install eslint --save-dev\n```\n\n## 2. 跑規則\n\n> 如果方案沒有 package.json 記得先 npm init\n\n```bash=\n./node_modules/.bin/eslint --init\n```\n\n![init](https://i.imgur.com/AQOsWew.png)\n\n## 3. 跑完之後會發現 檔案呈現紅色的\n\n![red](https://i.imgur.com/OUZQko3.png)\n\n## 4. 這邊就可以看到要些改的項目\n\n![edit](https://i.imgur.com/sZ9IWa6.png)\n\n## 5. 自動修復\n\n```bash=\n./node_modules/.bin/eslint --fix My.js\n```\n\n![fix](https://i.imgur.com/1da2Kvm.png)\n\n# VsCode ESLint\n\n[ESLint](https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint)\n![ESLint](https://i.imgur.com/ebWP69Q.png)\n\n# 參考\n* [Getting Started with ESLint](https://eslint.org/docs/user-guide/getting-started)\n* [在 VSCode 啟用程式碼規範工具 (ESLint)](https://wcc723.github.io/tool/2017/11/09/coding-style/)\n* [eslint](https://eslint.org/)\n* [ESLint Quickstart - find errors automatically](https://www.youtube.com/watch?v=qhuFviJn-es)","source":"_posts/ESLint-Javascript-程式碼規範檢查工具.md","raw":"---\ntitle: ESLint Javascript 程式碼規範檢查工具\ndate: 2019-05-21 17:42:06\ncategories:\n- ESLint\ntags:\n- ESLint\n- Node JS\n- Javascriptd\n---\n\n# ESLint Javascript 程式碼規範檢查工具\n\n## 1. 安裝工具\n\n```bash=\nnpm install eslint --save-dev\n```\n\n## 2. 跑規則\n\n> 如果方案沒有 package.json 記得先 npm init\n\n```bash=\n./node_modules/.bin/eslint --init\n```\n\n![init](https://i.imgur.com/AQOsWew.png)\n\n## 3. 跑完之後會發現 檔案呈現紅色的\n\n![red](https://i.imgur.com/OUZQko3.png)\n\n## 4. 這邊就可以看到要些改的項目\n\n![edit](https://i.imgur.com/sZ9IWa6.png)\n\n## 5. 自動修復\n\n```bash=\n./node_modules/.bin/eslint --fix My.js\n```\n\n![fix](https://i.imgur.com/1da2Kvm.png)\n\n# VsCode ESLint\n\n[ESLint](https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint)\n![ESLint](https://i.imgur.com/ebWP69Q.png)\n\n# 參考\n* [Getting Started with ESLint](https://eslint.org/docs/user-guide/getting-started)\n* [在 VSCode 啟用程式碼規範工具 (ESLint)](https://wcc723.github.io/tool/2017/11/09/coding-style/)\n* [eslint](https://eslint.org/)\n* [ESLint Quickstart - find errors automatically](https://www.youtube.com/watch?v=qhuFviJn-es)","slug":"ESLint-Javascript-程式碼規範檢查工具","published":1,"updated":"2019-06-03T01:52:24.687Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xu1000q1q221buu0u9r","content":"<h1 id=\"ESLint-Javascript-程式碼規範檢查工具\"><a href=\"#ESLint-Javascript-程式碼規範檢查工具\" class=\"headerlink\" title=\"ESLint Javascript 程式碼規範檢查工具\"></a>ESLint Javascript 程式碼規範檢查工具</h1><h2 id=\"1-安裝工具\"><a href=\"#1-安裝工具\" class=\"headerlink\" title=\"1. 安裝工具\"></a>1. 安裝工具</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install eslint --save-dev</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-跑規則\"><a href=\"#2-跑規則\" class=\"headerlink\" title=\"2. 跑規則\"></a>2. 跑規則</h2><blockquote>\n<p>如果方案沒有 package.json 記得先 npm init</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./node_modules/.bin/eslint --init</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/AQOsWew.png\" alt=\"init\"></p>\n<h2 id=\"3-跑完之後會發現-檔案呈現紅色的\"><a href=\"#3-跑完之後會發現-檔案呈現紅色的\" class=\"headerlink\" title=\"3. 跑完之後會發現 檔案呈現紅色的\"></a>3. 跑完之後會發現 檔案呈現紅色的</h2><p><img src=\"https://i.imgur.com/OUZQko3.png\" alt=\"red\"></p>\n<h2 id=\"4-這邊就可以看到要些改的項目\"><a href=\"#4-這邊就可以看到要些改的項目\" class=\"headerlink\" title=\"4. 這邊就可以看到要些改的項目\"></a>4. 這邊就可以看到要些改的項目</h2><p><img src=\"https://i.imgur.com/sZ9IWa6.png\" alt=\"edit\"></p>\n<h2 id=\"5-自動修復\"><a href=\"#5-自動修復\" class=\"headerlink\" title=\"5. 自動修復\"></a>5. 自動修復</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./node_modules/.bin/eslint --fix My.js</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/1da2Kvm.png\" alt=\"fix\"></p>\n<h1 id=\"VsCode-ESLint\"><a href=\"#VsCode-ESLint\" class=\"headerlink\" title=\"VsCode ESLint\"></a>VsCode ESLint</h1><p><a href=\"https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint\" target=\"_blank\" rel=\"noopener\">ESLint</a><br><img src=\"https://i.imgur.com/ebWP69Q.png\" alt=\"ESLint\"></p>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://eslint.org/docs/user-guide/getting-started\" target=\"_blank\" rel=\"noopener\">Getting Started with ESLint</a></li>\n<li><a href=\"https://wcc723.github.io/tool/2017/11/09/coding-style/\" target=\"_blank\" rel=\"noopener\">在 VSCode 啟用程式碼規範工具 (ESLint)</a></li>\n<li><a href=\"https://eslint.org/\" target=\"_blank\" rel=\"noopener\">eslint</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=qhuFviJn-es\" target=\"_blank\" rel=\"noopener\">ESLint Quickstart - find errors automatically</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"ESLint-Javascript-程式碼規範檢查工具\"><a href=\"#ESLint-Javascript-程式碼規範檢查工具\" class=\"headerlink\" title=\"ESLint Javascript 程式碼規範檢查工具\"></a>ESLint Javascript 程式碼規範檢查工具</h1><h2 id=\"1-安裝工具\"><a href=\"#1-安裝工具\" class=\"headerlink\" title=\"1. 安裝工具\"></a>1. 安裝工具</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install eslint --save-dev</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-跑規則\"><a href=\"#2-跑規則\" class=\"headerlink\" title=\"2. 跑規則\"></a>2. 跑規則</h2><blockquote>\n<p>如果方案沒有 package.json 記得先 npm init</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./node_modules/.bin/eslint --init</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/AQOsWew.png\" alt=\"init\"></p>\n<h2 id=\"3-跑完之後會發現-檔案呈現紅色的\"><a href=\"#3-跑完之後會發現-檔案呈現紅色的\" class=\"headerlink\" title=\"3. 跑完之後會發現 檔案呈現紅色的\"></a>3. 跑完之後會發現 檔案呈現紅色的</h2><p><img src=\"https://i.imgur.com/OUZQko3.png\" alt=\"red\"></p>\n<h2 id=\"4-這邊就可以看到要些改的項目\"><a href=\"#4-這邊就可以看到要些改的項目\" class=\"headerlink\" title=\"4. 這邊就可以看到要些改的項目\"></a>4. 這邊就可以看到要些改的項目</h2><p><img src=\"https://i.imgur.com/sZ9IWa6.png\" alt=\"edit\"></p>\n<h2 id=\"5-自動修復\"><a href=\"#5-自動修復\" class=\"headerlink\" title=\"5. 自動修復\"></a>5. 自動修復</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./node_modules/.bin/eslint --fix My.js</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/1da2Kvm.png\" alt=\"fix\"></p>\n<h1 id=\"VsCode-ESLint\"><a href=\"#VsCode-ESLint\" class=\"headerlink\" title=\"VsCode ESLint\"></a>VsCode ESLint</h1><p><a href=\"https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint\" target=\"_blank\" rel=\"noopener\">ESLint</a><br><img src=\"https://i.imgur.com/ebWP69Q.png\" alt=\"ESLint\"></p>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://eslint.org/docs/user-guide/getting-started\" target=\"_blank\" rel=\"noopener\">Getting Started with ESLint</a></li>\n<li><a href=\"https://wcc723.github.io/tool/2017/11/09/coding-style/\" target=\"_blank\" rel=\"noopener\">在 VSCode 啟用程式碼規範工具 (ESLint)</a></li>\n<li><a href=\"https://eslint.org/\" target=\"_blank\" rel=\"noopener\">eslint</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=qhuFviJn-es\" target=\"_blank\" rel=\"noopener\">ESLint Quickstart - find errors automatically</a></li>\n</ul>\n"},{"title":"Express Web Hello World","date":"2019-05-13T03:45:30.000Z","_content":"\n# Express Web Hello World\n\n> Express 是最小又靈活的 Node.js Web 應用程式架構，為 Web 與行動式應用程式提供一組健全的特性。\n\n## 1. 安裝 express 套件\n\n```bash\nnpm install express --save\n```\n\n## 2. 新增 一個 app.js\n\n```bash\nconst express = require('express')\nconst app = express()\nconst port = 3000\n\napp.get('/', (req, res) => res.send('Hello World!'))\n\napp.listen(port, () => console.log('Example app listening on port ${port}!'))\n```\n\n## 3. Run node\n\n```bash\nnode app.js\n```\n\n![node](https://i.imgur.com/WqQxqcU.png)\n\n## 4. Hello World!\n\n![Hello](https://i.imgur.com/82nZSdO.png)\n\n# [RestfulAPI](http://expressjs.com/en/starter/basic-routing.html) 實作 Get / Post / Put / Delete\n\n```bash\nconst express = require('express')\nconst app = express()\nconst port = 3000\n\n//// RestfulAPI\n\n// get\napp.get('/myget', (req, res) =>\nres.send('Hello World myget!')\n)\n\n//  post\napp.post('/mypost', function (req, res) {\n    res.json({ RestfulAPI: 'mypost' })\n})\n\n// put\napp.put('/myput', function (req, res) {\n    res.json({ RestfulAPI: 'myput' })\n})\n\n// delete\napp.delete('/mydelete', function (req, res) {\n    res.json({ RestfulAPI: 'mydelete' })\n})\n\n```\n\n### Get\n\n> http://localhost:3000/myget\n\n![Get](https://i.imgur.com/KIEL2im.png)\n\n### Post\n\n> http://localhost:3000/mypost\n\n![Post](https://i.imgur.com/NHb3yAh.png)\n\n### Put\n\n> http://localhost:3000/myput\n\n![Put](https://i.imgur.com/PTcWcUh.png)\n\n### Delete\n\n> http://localhost:3000/mydelete\n\n![Delete](https://i.imgur.com/5YN1uGj.png)\n\n# [Static File](http://expressjs.com/en/starter/static-files.html)\n\n```bash\nconst express = require('express')\nconst app = express()\nconst port = 3000\n\n//// static files\napp.use(express.static('static'))\n\napp.listen(port, () => console.log(`Example app listening on port ${port}!`))\n```\n\n![listen](https://i.imgur.com/vKhOU5L.png)\n\n# 參考\n\n- [expressjs](https://expressjs.com/zh-tw/starter/installing.html)\n","source":"_posts/Express-Node-js-Web.md","raw":"---\ntitle: Express Web Hello World\ndate: 2019-05-13 11:45:30\ncategories:\n  - Express\ntags:\n  - Express\n  - Node Js\n---\n\n# Express Web Hello World\n\n> Express 是最小又靈活的 Node.js Web 應用程式架構，為 Web 與行動式應用程式提供一組健全的特性。\n\n## 1. 安裝 express 套件\n\n```bash\nnpm install express --save\n```\n\n## 2. 新增 一個 app.js\n\n```bash\nconst express = require('express')\nconst app = express()\nconst port = 3000\n\napp.get('/', (req, res) => res.send('Hello World!'))\n\napp.listen(port, () => console.log('Example app listening on port ${port}!'))\n```\n\n## 3. Run node\n\n```bash\nnode app.js\n```\n\n![node](https://i.imgur.com/WqQxqcU.png)\n\n## 4. Hello World!\n\n![Hello](https://i.imgur.com/82nZSdO.png)\n\n# [RestfulAPI](http://expressjs.com/en/starter/basic-routing.html) 實作 Get / Post / Put / Delete\n\n```bash\nconst express = require('express')\nconst app = express()\nconst port = 3000\n\n//// RestfulAPI\n\n// get\napp.get('/myget', (req, res) =>\nres.send('Hello World myget!')\n)\n\n//  post\napp.post('/mypost', function (req, res) {\n    res.json({ RestfulAPI: 'mypost' })\n})\n\n// put\napp.put('/myput', function (req, res) {\n    res.json({ RestfulAPI: 'myput' })\n})\n\n// delete\napp.delete('/mydelete', function (req, res) {\n    res.json({ RestfulAPI: 'mydelete' })\n})\n\n```\n\n### Get\n\n> http://localhost:3000/myget\n\n![Get](https://i.imgur.com/KIEL2im.png)\n\n### Post\n\n> http://localhost:3000/mypost\n\n![Post](https://i.imgur.com/NHb3yAh.png)\n\n### Put\n\n> http://localhost:3000/myput\n\n![Put](https://i.imgur.com/PTcWcUh.png)\n\n### Delete\n\n> http://localhost:3000/mydelete\n\n![Delete](https://i.imgur.com/5YN1uGj.png)\n\n# [Static File](http://expressjs.com/en/starter/static-files.html)\n\n```bash\nconst express = require('express')\nconst app = express()\nconst port = 3000\n\n//// static files\napp.use(express.static('static'))\n\napp.listen(port, () => console.log(`Example app listening on port ${port}!`))\n```\n\n![listen](https://i.imgur.com/vKhOU5L.png)\n\n# 參考\n\n- [expressjs](https://expressjs.com/zh-tw/starter/installing.html)\n","slug":"Express-Node-js-Web","published":1,"updated":"2019-06-10T07:15:25.545Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xu2000s1q22ox4ayql8","content":"<h1 id=\"Express-Web-Hello-World\"><a href=\"#Express-Web-Hello-World\" class=\"headerlink\" title=\"Express Web Hello World\"></a>Express Web Hello World</h1><blockquote>\n<p>Express 是最小又靈活的 Node.js Web 應用程式架構，為 Web 與行動式應用程式提供一組健全的特性。</p>\n</blockquote>\n<h2 id=\"1-安裝-express-套件\"><a href=\"#1-安裝-express-套件\" class=\"headerlink\" title=\"1. 安裝 express 套件\"></a>1. 安裝 express 套件</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install express --save</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-新增-一個-app-js\"><a href=\"#2-新增-一個-app-js\" class=\"headerlink\" title=\"2. 新增 一個 app.js\"></a>2. 新增 一個 app.js</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const express = require(<span class=\"string\">'express'</span>)</span><br><span class=\"line\">const app = express()</span><br><span class=\"line\">const port = 3000</span><br><span class=\"line\"></span><br><span class=\"line\">app.get(<span class=\"string\">'/'</span>, (req, res) =&gt; res.send(<span class=\"string\">'Hello World!'</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">app.listen(port, () =&gt; console.log(<span class=\"string\">'Example app listening on port $&#123;port&#125;!'</span>))</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-Run-node\"><a href=\"#3-Run-node\" class=\"headerlink\" title=\"3. Run node\"></a>3. Run node</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node app.js</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/WqQxqcU.png\" alt=\"node\"></p>\n<h2 id=\"4-Hello-World\"><a href=\"#4-Hello-World\" class=\"headerlink\" title=\"4. Hello World!\"></a>4. Hello World!</h2><p><img src=\"https://i.imgur.com/82nZSdO.png\" alt=\"Hello\"></p>\n<h1 id=\"RestfulAPI-實作-Get-Post-Put-Delete\"><a href=\"#RestfulAPI-實作-Get-Post-Put-Delete\" class=\"headerlink\" title=\"RestfulAPI 實作 Get / Post / Put / Delete\"></a><a href=\"http://expressjs.com/en/starter/basic-routing.html\" target=\"_blank\" rel=\"noopener\">RestfulAPI</a> 實作 Get / Post / Put / Delete</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const express = require(<span class=\"string\">'express'</span>)</span><br><span class=\"line\">const app = express()</span><br><span class=\"line\">const port = 3000</span><br><span class=\"line\"></span><br><span class=\"line\">//// RestfulAPI</span><br><span class=\"line\"></span><br><span class=\"line\">// get</span><br><span class=\"line\">app.get(<span class=\"string\">'/myget'</span>, (req, res) =&gt;</span><br><span class=\"line\">res.send(<span class=\"string\">'Hello World myget!'</span>)</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">//  post</span><br><span class=\"line\">app.post(<span class=\"string\">'/mypost'</span>, <span class=\"keyword\">function</span> (req, res) &#123;</span><br><span class=\"line\">    res.json(&#123; RestfulAPI: <span class=\"string\">'mypost'</span> &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">// put</span><br><span class=\"line\">app.put(<span class=\"string\">'/myput'</span>, <span class=\"keyword\">function</span> (req, res) &#123;</span><br><span class=\"line\">    res.json(&#123; RestfulAPI: <span class=\"string\">'myput'</span> &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">// delete</span><br><span class=\"line\">app.delete(<span class=\"string\">'/mydelete'</span>, <span class=\"keyword\">function</span> (req, res) &#123;</span><br><span class=\"line\">    res.json(&#123; RestfulAPI: <span class=\"string\">'mydelete'</span> &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Get\"><a href=\"#Get\" class=\"headerlink\" title=\"Get\"></a>Get</h3><blockquote>\n<p><a href=\"http://localhost:3000/myget\" target=\"_blank\" rel=\"noopener\">http://localhost:3000/myget</a></p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/KIEL2im.png\" alt=\"Get\"></p>\n<h3 id=\"Post\"><a href=\"#Post\" class=\"headerlink\" title=\"Post\"></a>Post</h3><blockquote>\n<p><a href=\"http://localhost:3000/mypost\" target=\"_blank\" rel=\"noopener\">http://localhost:3000/mypost</a></p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/NHb3yAh.png\" alt=\"Post\"></p>\n<h3 id=\"Put\"><a href=\"#Put\" class=\"headerlink\" title=\"Put\"></a>Put</h3><blockquote>\n<p><a href=\"http://localhost:3000/myput\" target=\"_blank\" rel=\"noopener\">http://localhost:3000/myput</a></p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/PTcWcUh.png\" alt=\"Put\"></p>\n<h3 id=\"Delete\"><a href=\"#Delete\" class=\"headerlink\" title=\"Delete\"></a>Delete</h3><blockquote>\n<p><a href=\"http://localhost:3000/mydelete\" target=\"_blank\" rel=\"noopener\">http://localhost:3000/mydelete</a></p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/5YN1uGj.png\" alt=\"Delete\"></p>\n<h1 id=\"Static-File\"><a href=\"#Static-File\" class=\"headerlink\" title=\"Static File\"></a><a href=\"http://expressjs.com/en/starter/static-files.html\" target=\"_blank\" rel=\"noopener\">Static File</a></h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const express = require(<span class=\"string\">'express'</span>)</span><br><span class=\"line\">const app = express()</span><br><span class=\"line\">const port = 3000</span><br><span class=\"line\"></span><br><span class=\"line\">//// static files</span><br><span class=\"line\">app.use(express.static(<span class=\"string\">'static'</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">app.listen(port, () =&gt; console.log(`Example app listening on port <span class=\"variable\">$&#123;port&#125;</span>!`))</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/vKhOU5L.png\" alt=\"listen\"></p>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://expressjs.com/zh-tw/starter/installing.html\" target=\"_blank\" rel=\"noopener\">expressjs</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Express-Web-Hello-World\"><a href=\"#Express-Web-Hello-World\" class=\"headerlink\" title=\"Express Web Hello World\"></a>Express Web Hello World</h1><blockquote>\n<p>Express 是最小又靈活的 Node.js Web 應用程式架構，為 Web 與行動式應用程式提供一組健全的特性。</p>\n</blockquote>\n<h2 id=\"1-安裝-express-套件\"><a href=\"#1-安裝-express-套件\" class=\"headerlink\" title=\"1. 安裝 express 套件\"></a>1. 安裝 express 套件</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install express --save</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-新增-一個-app-js\"><a href=\"#2-新增-一個-app-js\" class=\"headerlink\" title=\"2. 新增 一個 app.js\"></a>2. 新增 一個 app.js</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const express = require(<span class=\"string\">'express'</span>)</span><br><span class=\"line\">const app = express()</span><br><span class=\"line\">const port = 3000</span><br><span class=\"line\"></span><br><span class=\"line\">app.get(<span class=\"string\">'/'</span>, (req, res) =&gt; res.send(<span class=\"string\">'Hello World!'</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">app.listen(port, () =&gt; console.log(<span class=\"string\">'Example app listening on port $&#123;port&#125;!'</span>))</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-Run-node\"><a href=\"#3-Run-node\" class=\"headerlink\" title=\"3. Run node\"></a>3. Run node</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node app.js</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/WqQxqcU.png\" alt=\"node\"></p>\n<h2 id=\"4-Hello-World\"><a href=\"#4-Hello-World\" class=\"headerlink\" title=\"4. Hello World!\"></a>4. Hello World!</h2><p><img src=\"https://i.imgur.com/82nZSdO.png\" alt=\"Hello\"></p>\n<h1 id=\"RestfulAPI-實作-Get-Post-Put-Delete\"><a href=\"#RestfulAPI-實作-Get-Post-Put-Delete\" class=\"headerlink\" title=\"RestfulAPI 實作 Get / Post / Put / Delete\"></a><a href=\"http://expressjs.com/en/starter/basic-routing.html\" target=\"_blank\" rel=\"noopener\">RestfulAPI</a> 實作 Get / Post / Put / Delete</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const express = require(<span class=\"string\">'express'</span>)</span><br><span class=\"line\">const app = express()</span><br><span class=\"line\">const port = 3000</span><br><span class=\"line\"></span><br><span class=\"line\">//// RestfulAPI</span><br><span class=\"line\"></span><br><span class=\"line\">// get</span><br><span class=\"line\">app.get(<span class=\"string\">'/myget'</span>, (req, res) =&gt;</span><br><span class=\"line\">res.send(<span class=\"string\">'Hello World myget!'</span>)</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">//  post</span><br><span class=\"line\">app.post(<span class=\"string\">'/mypost'</span>, <span class=\"keyword\">function</span> (req, res) &#123;</span><br><span class=\"line\">    res.json(&#123; RestfulAPI: <span class=\"string\">'mypost'</span> &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">// put</span><br><span class=\"line\">app.put(<span class=\"string\">'/myput'</span>, <span class=\"keyword\">function</span> (req, res) &#123;</span><br><span class=\"line\">    res.json(&#123; RestfulAPI: <span class=\"string\">'myput'</span> &#125;)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">// delete</span><br><span class=\"line\">app.delete(<span class=\"string\">'/mydelete'</span>, <span class=\"keyword\">function</span> (req, res) &#123;</span><br><span class=\"line\">    res.json(&#123; RestfulAPI: <span class=\"string\">'mydelete'</span> &#125;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Get\"><a href=\"#Get\" class=\"headerlink\" title=\"Get\"></a>Get</h3><blockquote>\n<p><a href=\"http://localhost:3000/myget\" target=\"_blank\" rel=\"noopener\">http://localhost:3000/myget</a></p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/KIEL2im.png\" alt=\"Get\"></p>\n<h3 id=\"Post\"><a href=\"#Post\" class=\"headerlink\" title=\"Post\"></a>Post</h3><blockquote>\n<p><a href=\"http://localhost:3000/mypost\" target=\"_blank\" rel=\"noopener\">http://localhost:3000/mypost</a></p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/NHb3yAh.png\" alt=\"Post\"></p>\n<h3 id=\"Put\"><a href=\"#Put\" class=\"headerlink\" title=\"Put\"></a>Put</h3><blockquote>\n<p><a href=\"http://localhost:3000/myput\" target=\"_blank\" rel=\"noopener\">http://localhost:3000/myput</a></p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/PTcWcUh.png\" alt=\"Put\"></p>\n<h3 id=\"Delete\"><a href=\"#Delete\" class=\"headerlink\" title=\"Delete\"></a>Delete</h3><blockquote>\n<p><a href=\"http://localhost:3000/mydelete\" target=\"_blank\" rel=\"noopener\">http://localhost:3000/mydelete</a></p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/5YN1uGj.png\" alt=\"Delete\"></p>\n<h1 id=\"Static-File\"><a href=\"#Static-File\" class=\"headerlink\" title=\"Static File\"></a><a href=\"http://expressjs.com/en/starter/static-files.html\" target=\"_blank\" rel=\"noopener\">Static File</a></h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const express = require(<span class=\"string\">'express'</span>)</span><br><span class=\"line\">const app = express()</span><br><span class=\"line\">const port = 3000</span><br><span class=\"line\"></span><br><span class=\"line\">//// static files</span><br><span class=\"line\">app.use(express.static(<span class=\"string\">'static'</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">app.listen(port, () =&gt; console.log(`Example app listening on port <span class=\"variable\">$&#123;port&#125;</span>!`))</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/vKhOU5L.png\" alt=\"listen\"></p>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://expressjs.com/zh-tw/starter/installing.html\" target=\"_blank\" rel=\"noopener\">expressjs</a></li>\n</ul>\n"},{"title":"GCP K8s Quickstart","date":"2018-12-28T07:19:04.000Z","_content":"\n## GCP K8s Quickstart\n\n### 1. 安裝 gcloud\n\n>[GCP Container Registry image安裝](https://ste5022424.github.io/2018/12/26/GCP-Container-Registry/)\n>[Cloud SDK(Linux)快速入門](https://cloud.google.com/sdk/docs/quickstart-linux)\n\n### 2. Creating a GKE cluster\n\n```\n./gcloud/google-cloud-sdk/bin/gcloud container clusters create [CLUSTER_NAME]\n```\n![](https://i.imgur.com/fcpVqKY.png)\n\n### 3. 安裝 kubectl\n\n```\n./gcloud/google-cloud-sdk/bin/gcloud components install kubectl\n```\n![](https://i.imgur.com/2gtxj6u.png)\n\n### 4. kubectl run Container Registry\n\n#### 4.1 Build Docker image \n\n> .net core webapi 建立可以參考這篇[.net core webapi](https://ste5022424.github.io/2018/12/28/Net-Core-CLI/)\n\n```\ndocker build -t gcr.io/[your-projectid]/netcorewebapi:v1\n```\n#### 4.2 Push image to GCR\n\n```\ndocker push gcr.io/[your-projectid]/netcorewebapi:v1\n```\n#### 4.3 執行服務\n\n```\nkubectl run netcorewebapi --image gcr.io/[your-projectid]/netcorewebapi:v1 --port 80\n```\n![](https://i.imgur.com/vWp9gWH.png)\n\n#### 4.4. 公開 k8s 容器\n```\nkubectl expose deployment netcorewebapi  --type LoadBalancer --port 80 --target-port 80\n```\n#### 4.5. 取得服務的資訊\n```\nkubectl get service netcorewebapi \n```\n![](https://i.imgur.com/IX5PCxJ.png)\n\n####  4.6 預覽\n\n![](https://i.imgur.com/3DX0Tcb.png)\n\n\n## 參考\n\n* [K8S Quickstart](https://cloud.google.com/kubernetes-engine/docs/quickstart)","source":"_posts/GCP K8s Quickstart.md","raw":"---\ntitle: GCP K8s Quickstart\ndate: 2018-12-28 15:19:04\ncategories:\n- k8s\ntags:\n- k8s\n- GCP\n- Docker\n---\n\n## GCP K8s Quickstart\n\n### 1. 安裝 gcloud\n\n>[GCP Container Registry image安裝](https://ste5022424.github.io/2018/12/26/GCP-Container-Registry/)\n>[Cloud SDK(Linux)快速入門](https://cloud.google.com/sdk/docs/quickstart-linux)\n\n### 2. Creating a GKE cluster\n\n```\n./gcloud/google-cloud-sdk/bin/gcloud container clusters create [CLUSTER_NAME]\n```\n![](https://i.imgur.com/fcpVqKY.png)\n\n### 3. 安裝 kubectl\n\n```\n./gcloud/google-cloud-sdk/bin/gcloud components install kubectl\n```\n![](https://i.imgur.com/2gtxj6u.png)\n\n### 4. kubectl run Container Registry\n\n#### 4.1 Build Docker image \n\n> .net core webapi 建立可以參考這篇[.net core webapi](https://ste5022424.github.io/2018/12/28/Net-Core-CLI/)\n\n```\ndocker build -t gcr.io/[your-projectid]/netcorewebapi:v1\n```\n#### 4.2 Push image to GCR\n\n```\ndocker push gcr.io/[your-projectid]/netcorewebapi:v1\n```\n#### 4.3 執行服務\n\n```\nkubectl run netcorewebapi --image gcr.io/[your-projectid]/netcorewebapi:v1 --port 80\n```\n![](https://i.imgur.com/vWp9gWH.png)\n\n#### 4.4. 公開 k8s 容器\n```\nkubectl expose deployment netcorewebapi  --type LoadBalancer --port 80 --target-port 80\n```\n#### 4.5. 取得服務的資訊\n```\nkubectl get service netcorewebapi \n```\n![](https://i.imgur.com/IX5PCxJ.png)\n\n####  4.6 預覽\n\n![](https://i.imgur.com/3DX0Tcb.png)\n\n\n## 參考\n\n* [K8S Quickstart](https://cloud.google.com/kubernetes-engine/docs/quickstart)","slug":"GCP K8s Quickstart","published":1,"updated":"2019-06-03T01:52:24.688Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xu3000v1q229wju5rle","content":"<h2 id=\"GCP-K8s-Quickstart\"><a href=\"#GCP-K8s-Quickstart\" class=\"headerlink\" title=\"GCP K8s Quickstart\"></a>GCP K8s Quickstart</h2><h3 id=\"1-安裝-gcloud\"><a href=\"#1-安裝-gcloud\" class=\"headerlink\" title=\"1. 安裝 gcloud\"></a>1. 安裝 gcloud</h3><blockquote>\n<p><a href=\"https://ste5022424.github.io/2018/12/26/GCP-Container-Registry/\">GCP Container Registry image安裝</a><br><a href=\"https://cloud.google.com/sdk/docs/quickstart-linux\" target=\"_blank\" rel=\"noopener\">Cloud SDK(Linux)快速入門</a></p>\n</blockquote>\n<h3 id=\"2-Creating-a-GKE-cluster\"><a href=\"#2-Creating-a-GKE-cluster\" class=\"headerlink\" title=\"2. Creating a GKE cluster\"></a>2. Creating a GKE cluster</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./gcloud/google-cloud-sdk/bin/gcloud container clusters create [CLUSTER_NAME]</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/fcpVqKY.png\" alt></p>\n<h3 id=\"3-安裝-kubectl\"><a href=\"#3-安裝-kubectl\" class=\"headerlink\" title=\"3. 安裝 kubectl\"></a>3. 安裝 kubectl</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./gcloud/google-cloud-sdk/bin/gcloud components install kubectl</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/2gtxj6u.png\" alt></p>\n<h3 id=\"4-kubectl-run-Container-Registry\"><a href=\"#4-kubectl-run-Container-Registry\" class=\"headerlink\" title=\"4. kubectl run Container Registry\"></a>4. kubectl run Container Registry</h3><h4 id=\"4-1-Build-Docker-image\"><a href=\"#4-1-Build-Docker-image\" class=\"headerlink\" title=\"4.1 Build Docker image\"></a>4.1 Build Docker image</h4><blockquote>\n<p>.net core webapi 建立可以參考這篇<a href=\"https://ste5022424.github.io/2018/12/28/Net-Core-CLI/\">.net core webapi</a></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker build -t gcr.io/[your-projectid]/netcorewebapi:v1</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-2-Push-image-to-GCR\"><a href=\"#4-2-Push-image-to-GCR\" class=\"headerlink\" title=\"4.2 Push image to GCR\"></a>4.2 Push image to GCR</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker push gcr.io/[your-projectid]/netcorewebapi:v1</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-3-執行服務\"><a href=\"#4-3-執行服務\" class=\"headerlink\" title=\"4.3 執行服務\"></a>4.3 執行服務</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl run netcorewebapi --image gcr.io/[your-projectid]/netcorewebapi:v1 --port 80</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/vWp9gWH.png\" alt></p>\n<h4 id=\"4-4-公開-k8s-容器\"><a href=\"#4-4-公開-k8s-容器\" class=\"headerlink\" title=\"4.4. 公開 k8s 容器\"></a>4.4. 公開 k8s 容器</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl expose deployment netcorewebapi  --type LoadBalancer --port 80 --target-port 80</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-5-取得服務的資訊\"><a href=\"#4-5-取得服務的資訊\" class=\"headerlink\" title=\"4.5. 取得服務的資訊\"></a>4.5. 取得服務的資訊</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl get service netcorewebapi</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/IX5PCxJ.png\" alt></p>\n<h4 id=\"4-6-預覽\"><a href=\"#4-6-預覽\" class=\"headerlink\" title=\"4.6 預覽\"></a>4.6 預覽</h4><p><img src=\"https://i.imgur.com/3DX0Tcb.png\" alt></p>\n<h2 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h2><ul>\n<li><a href=\"https://cloud.google.com/kubernetes-engine/docs/quickstart\" target=\"_blank\" rel=\"noopener\">K8S Quickstart</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"GCP-K8s-Quickstart\"><a href=\"#GCP-K8s-Quickstart\" class=\"headerlink\" title=\"GCP K8s Quickstart\"></a>GCP K8s Quickstart</h2><h3 id=\"1-安裝-gcloud\"><a href=\"#1-安裝-gcloud\" class=\"headerlink\" title=\"1. 安裝 gcloud\"></a>1. 安裝 gcloud</h3><blockquote>\n<p><a href=\"https://ste5022424.github.io/2018/12/26/GCP-Container-Registry/\">GCP Container Registry image安裝</a><br><a href=\"https://cloud.google.com/sdk/docs/quickstart-linux\" target=\"_blank\" rel=\"noopener\">Cloud SDK(Linux)快速入門</a></p>\n</blockquote>\n<h3 id=\"2-Creating-a-GKE-cluster\"><a href=\"#2-Creating-a-GKE-cluster\" class=\"headerlink\" title=\"2. Creating a GKE cluster\"></a>2. Creating a GKE cluster</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./gcloud/google-cloud-sdk/bin/gcloud container clusters create [CLUSTER_NAME]</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/fcpVqKY.png\" alt></p>\n<h3 id=\"3-安裝-kubectl\"><a href=\"#3-安裝-kubectl\" class=\"headerlink\" title=\"3. 安裝 kubectl\"></a>3. 安裝 kubectl</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./gcloud/google-cloud-sdk/bin/gcloud components install kubectl</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/2gtxj6u.png\" alt></p>\n<h3 id=\"4-kubectl-run-Container-Registry\"><a href=\"#4-kubectl-run-Container-Registry\" class=\"headerlink\" title=\"4. kubectl run Container Registry\"></a>4. kubectl run Container Registry</h3><h4 id=\"4-1-Build-Docker-image\"><a href=\"#4-1-Build-Docker-image\" class=\"headerlink\" title=\"4.1 Build Docker image\"></a>4.1 Build Docker image</h4><blockquote>\n<p>.net core webapi 建立可以參考這篇<a href=\"https://ste5022424.github.io/2018/12/28/Net-Core-CLI/\">.net core webapi</a></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker build -t gcr.io/[your-projectid]/netcorewebapi:v1</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-2-Push-image-to-GCR\"><a href=\"#4-2-Push-image-to-GCR\" class=\"headerlink\" title=\"4.2 Push image to GCR\"></a>4.2 Push image to GCR</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker push gcr.io/[your-projectid]/netcorewebapi:v1</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-3-執行服務\"><a href=\"#4-3-執行服務\" class=\"headerlink\" title=\"4.3 執行服務\"></a>4.3 執行服務</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl run netcorewebapi --image gcr.io/[your-projectid]/netcorewebapi:v1 --port 80</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/vWp9gWH.png\" alt></p>\n<h4 id=\"4-4-公開-k8s-容器\"><a href=\"#4-4-公開-k8s-容器\" class=\"headerlink\" title=\"4.4. 公開 k8s 容器\"></a>4.4. 公開 k8s 容器</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl expose deployment netcorewebapi  --type LoadBalancer --port 80 --target-port 80</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-5-取得服務的資訊\"><a href=\"#4-5-取得服務的資訊\" class=\"headerlink\" title=\"4.5. 取得服務的資訊\"></a>4.5. 取得服務的資訊</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl get service netcorewebapi</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/IX5PCxJ.png\" alt></p>\n<h4 id=\"4-6-預覽\"><a href=\"#4-6-預覽\" class=\"headerlink\" title=\"4.6 預覽\"></a>4.6 預覽</h4><p><img src=\"https://i.imgur.com/3DX0Tcb.png\" alt></p>\n<h2 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h2><ul>\n<li><a href=\"https://cloud.google.com/kubernetes-engine/docs/quickstart\" target=\"_blank\" rel=\"noopener\">K8S Quickstart</a></li>\n</ul>\n"},{"title":"GCP Container Registry","date":"2018-12-26T06:48:55.000Z","_content":"\n## GCP Container Registry\n\n### 1. 確認帳號已經啟用付費功能\n### 2. [開啟API服務](https://console.cloud.google.com/flows/enableapi?apiid=containerregistry.googleapis.com&redirect=https://cloud.google.com/container-registry/docs/quickstart&_ga=2.224013522.-850793838.1545806748)\n\n![](https://i.imgur.com/jHv4PGH.png)\n\n\n### 3. 安裝 [Cloud SDK](https://cloud.google.com/sdk/docs/)\n\n#### 3.1 下載 SDK\n```\nmkdir gcloud\ncd gcloud\nwget https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-218.0.0-linux-x86_64.tar.gz\n```\n#### 3.2 解壓縮\n```\ngunzip google-cloud-sdk-218.0.0-linux-x86_64.tar.gz\ntar xvf google-cloud-sdk-218.0.0-linux-x86_64.tar\n```\n> 這時候就可以看到 google-cloud-sdk/ 這個資料夾\n![](https://i.imgur.com/Mh6PsOr.png)\n\n#### 3.3 執行指令\n\n```\ncd google-cloud-sdk/\n./install.sh\n```\n![](https://i.imgur.com/2iG0Dp3.png)\n\n#### 3.4 init SDK\n\n```\ncd bin\n./gcloud init\n```\n> 把網址貼到網頁上面 取得 verification code\n \n![](https://i.imgur.com/rQRHit0.png)\n\n![](https://i.imgur.com/zz1RyRD.png)\n\n### 4. Build image\n\n#### 4.1.1 建立 Dockerfile\n```\nmkdir gcpimagetest\ncd gcpimagetest/\nvi Dockerfile\n```\n#### 4.1.2 將官方的範例貼上去\n```\n# The Dockerfile defines the image's environment\n# Import Python runtime and set up working directory\nFROM python:2.7-alpine\nWORKDIR /app\nADD . /app\n\n# Install any necessary dependencies\nRUN pip install -r ./requirements.txt\n\n# Open port 80 for serving the webpage\nEXPOSE 80\n\n# Run app.py when the container launches\nCMD [\"python\", \"app.py\"]\n```\n\n#### 4.1.3 建立 requirements.txt\n\n```\n# This file defines the image's dependencies\nFlask\n```\n\n\n#### 4.1.4 建立 app.py\n```\n# The Docker image contains the following code\nfrom flask import Flask\nimport os\nimport socket\n\napp = Flask(__name__)\n\n@app.route(\"/\")\ndef hello():\n    html = \"<h3>Hello, World!</h3>\"\n    return html\n\nif __name__ == \"__main__\":\n  app.run(host='0.0.0.0', port=80)\n```\n\n#### 4.2 建立 image\n\n```\ndocker build -t quickstart-image .\n```\n![](https://i.imgur.com/QzIpb2r.png)\n\n\n> gcloud auth 設定(只要設定一次就可以了)\n\n```\n./gcloud auth configure-docker\n```\n![](https://i.imgur.com/4vnE8VL.png)\n\n#### 4.3 tag image\n\n```\ndocker tag quickstart-image gcr.io/[PROJECT-ID]/quickstart-image:tag1\n```\n### 5. Push Image\n\n#### 5.1 push 前要安裝[憑證](https://cloud.google.com/container-registry/docs/advanced-authentication)\n![](https://i.imgur.com/U8eL3Hp.png)\n\n\n#### 5.2 建立 docker-credential-gcr\n```\nvi docker-credential-gcr\n```\n\n####  5.3 輸入以下憑證\n```\nVERSION=1.5.0\nOS=linux  # or \"darwin\" for OSX, \"windows\" for Windows.\nARCH=amd64  # or \"386\" for 32-bit OSs\n\ncurl -fsSL \"https://github.com/GoogleCloudPlatform/docker-credential-gcr/releases/download/v${VERSION}/docker-credential-gcr_${OS}_${ARCH}-${VERSION}.tar.gz\" \\\n  | tar xz --to-stdout ./docker-credential-gcr \\\n  > /usr/bin/docker-credential-gcr && chmod +x /usr/bin/docker-credential-gcr\n```\n\n####  5.4 設定憑證\n\n> 記得要回到目錄的最上層才可以設定\n\n```\n./gcloud/google-cloud-sdk/bin/gcloud  components install docker-credential-gcr\n```\n> 成功畫面\n\n![](https://i.imgur.com/TtZkdtE.png)\n\n#### 5.5 提升 docker-credential-gcr 文件權限 並執行 docker-credential-gcr設定\n```\nchmod 777 docker-credential-gcr\ndocker-credential-gcr configure-docker\n```\n#### 5.6 設定完成之後就可以 推送到 gcp 上面了\n\n```\ndocker push gcr.io/[PROJECT-ID]/quickstart-imag:tag1\n```\n![](https://i.imgur.com/NZnYOf0.png)\n\n![](https://i.imgur.com/SpO0EuV.png)\n\n### 6. Pull Image\n\n```\ndocker pull gcr.io/[PROJECT-ID]/quickstart-image:tag1\n```\n## 參考\n* [官方說明文件](https://cloud.google.com/container-registry/docs/)\n* [Authentication](https://cloud.google.com/container-registry/docs/advanced-authentication)","source":"_posts/GCP-Container-Registry.md","raw":"---\ntitle: GCP Container Registry\ndate: 2018-12-26 14:48:55\ncategories:\n- GCP Container Registry\ntags:\n- GCP Registry\n- GCP\n- Docker\n- Gcloud\n---\n\n## GCP Container Registry\n\n### 1. 確認帳號已經啟用付費功能\n### 2. [開啟API服務](https://console.cloud.google.com/flows/enableapi?apiid=containerregistry.googleapis.com&redirect=https://cloud.google.com/container-registry/docs/quickstart&_ga=2.224013522.-850793838.1545806748)\n\n![](https://i.imgur.com/jHv4PGH.png)\n\n\n### 3. 安裝 [Cloud SDK](https://cloud.google.com/sdk/docs/)\n\n#### 3.1 下載 SDK\n```\nmkdir gcloud\ncd gcloud\nwget https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-218.0.0-linux-x86_64.tar.gz\n```\n#### 3.2 解壓縮\n```\ngunzip google-cloud-sdk-218.0.0-linux-x86_64.tar.gz\ntar xvf google-cloud-sdk-218.0.0-linux-x86_64.tar\n```\n> 這時候就可以看到 google-cloud-sdk/ 這個資料夾\n![](https://i.imgur.com/Mh6PsOr.png)\n\n#### 3.3 執行指令\n\n```\ncd google-cloud-sdk/\n./install.sh\n```\n![](https://i.imgur.com/2iG0Dp3.png)\n\n#### 3.4 init SDK\n\n```\ncd bin\n./gcloud init\n```\n> 把網址貼到網頁上面 取得 verification code\n \n![](https://i.imgur.com/rQRHit0.png)\n\n![](https://i.imgur.com/zz1RyRD.png)\n\n### 4. Build image\n\n#### 4.1.1 建立 Dockerfile\n```\nmkdir gcpimagetest\ncd gcpimagetest/\nvi Dockerfile\n```\n#### 4.1.2 將官方的範例貼上去\n```\n# The Dockerfile defines the image's environment\n# Import Python runtime and set up working directory\nFROM python:2.7-alpine\nWORKDIR /app\nADD . /app\n\n# Install any necessary dependencies\nRUN pip install -r ./requirements.txt\n\n# Open port 80 for serving the webpage\nEXPOSE 80\n\n# Run app.py when the container launches\nCMD [\"python\", \"app.py\"]\n```\n\n#### 4.1.3 建立 requirements.txt\n\n```\n# This file defines the image's dependencies\nFlask\n```\n\n\n#### 4.1.4 建立 app.py\n```\n# The Docker image contains the following code\nfrom flask import Flask\nimport os\nimport socket\n\napp = Flask(__name__)\n\n@app.route(\"/\")\ndef hello():\n    html = \"<h3>Hello, World!</h3>\"\n    return html\n\nif __name__ == \"__main__\":\n  app.run(host='0.0.0.0', port=80)\n```\n\n#### 4.2 建立 image\n\n```\ndocker build -t quickstart-image .\n```\n![](https://i.imgur.com/QzIpb2r.png)\n\n\n> gcloud auth 設定(只要設定一次就可以了)\n\n```\n./gcloud auth configure-docker\n```\n![](https://i.imgur.com/4vnE8VL.png)\n\n#### 4.3 tag image\n\n```\ndocker tag quickstart-image gcr.io/[PROJECT-ID]/quickstart-image:tag1\n```\n### 5. Push Image\n\n#### 5.1 push 前要安裝[憑證](https://cloud.google.com/container-registry/docs/advanced-authentication)\n![](https://i.imgur.com/U8eL3Hp.png)\n\n\n#### 5.2 建立 docker-credential-gcr\n```\nvi docker-credential-gcr\n```\n\n####  5.3 輸入以下憑證\n```\nVERSION=1.5.0\nOS=linux  # or \"darwin\" for OSX, \"windows\" for Windows.\nARCH=amd64  # or \"386\" for 32-bit OSs\n\ncurl -fsSL \"https://github.com/GoogleCloudPlatform/docker-credential-gcr/releases/download/v${VERSION}/docker-credential-gcr_${OS}_${ARCH}-${VERSION}.tar.gz\" \\\n  | tar xz --to-stdout ./docker-credential-gcr \\\n  > /usr/bin/docker-credential-gcr && chmod +x /usr/bin/docker-credential-gcr\n```\n\n####  5.4 設定憑證\n\n> 記得要回到目錄的最上層才可以設定\n\n```\n./gcloud/google-cloud-sdk/bin/gcloud  components install docker-credential-gcr\n```\n> 成功畫面\n\n![](https://i.imgur.com/TtZkdtE.png)\n\n#### 5.5 提升 docker-credential-gcr 文件權限 並執行 docker-credential-gcr設定\n```\nchmod 777 docker-credential-gcr\ndocker-credential-gcr configure-docker\n```\n#### 5.6 設定完成之後就可以 推送到 gcp 上面了\n\n```\ndocker push gcr.io/[PROJECT-ID]/quickstart-imag:tag1\n```\n![](https://i.imgur.com/NZnYOf0.png)\n\n![](https://i.imgur.com/SpO0EuV.png)\n\n### 6. Pull Image\n\n```\ndocker pull gcr.io/[PROJECT-ID]/quickstart-image:tag1\n```\n## 參考\n* [官方說明文件](https://cloud.google.com/container-registry/docs/)\n* [Authentication](https://cloud.google.com/container-registry/docs/advanced-authentication)","slug":"GCP-Container-Registry","published":1,"updated":"2019-06-03T01:52:24.689Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xu6000y1q22y7i3ik5w","content":"<h2 id=\"GCP-Container-Registry\"><a href=\"#GCP-Container-Registry\" class=\"headerlink\" title=\"GCP Container Registry\"></a>GCP Container Registry</h2><h3 id=\"1-確認帳號已經啟用付費功能\"><a href=\"#1-確認帳號已經啟用付費功能\" class=\"headerlink\" title=\"1. 確認帳號已經啟用付費功能\"></a>1. 確認帳號已經啟用付費功能</h3><h3 id=\"2-開啟API服務\"><a href=\"#2-開啟API服務\" class=\"headerlink\" title=\"2. 開啟API服務\"></a>2. <a href=\"https://console.cloud.google.com/flows/enableapi?apiid=containerregistry.googleapis.com&redirect=https://cloud.google.com/container-registry/docs/quickstart&_ga=2.224013522.-850793838.1545806748\" target=\"_blank\" rel=\"noopener\">開啟API服務</a></h3><p><img src=\"https://i.imgur.com/jHv4PGH.png\" alt></p>\n<h3 id=\"3-安裝-Cloud-SDK\"><a href=\"#3-安裝-Cloud-SDK\" class=\"headerlink\" title=\"3. 安裝 Cloud SDK\"></a>3. 安裝 <a href=\"https://cloud.google.com/sdk/docs/\" target=\"_blank\" rel=\"noopener\">Cloud SDK</a></h3><h4 id=\"3-1-下載-SDK\"><a href=\"#3-1-下載-SDK\" class=\"headerlink\" title=\"3.1 下載 SDK\"></a>3.1 下載 SDK</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir gcloud</span><br><span class=\"line\">cd gcloud</span><br><span class=\"line\">wget https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-218.0.0-linux-x86_64.tar.gz</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-2-解壓縮\"><a href=\"#3-2-解壓縮\" class=\"headerlink\" title=\"3.2 解壓縮\"></a>3.2 解壓縮</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gunzip google-cloud-sdk-218.0.0-linux-x86_64.tar.gz</span><br><span class=\"line\">tar xvf google-cloud-sdk-218.0.0-linux-x86_64.tar</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>這時候就可以看到 google-cloud-sdk/ 這個資料夾<br><img src=\"https://i.imgur.com/Mh6PsOr.png\" alt></p>\n</blockquote>\n<h4 id=\"3-3-執行指令\"><a href=\"#3-3-執行指令\" class=\"headerlink\" title=\"3.3 執行指令\"></a>3.3 執行指令</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd google-cloud-sdk/</span><br><span class=\"line\">./install.sh</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/2iG0Dp3.png\" alt></p>\n<h4 id=\"3-4-init-SDK\"><a href=\"#3-4-init-SDK\" class=\"headerlink\" title=\"3.4 init SDK\"></a>3.4 init SDK</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd bin</span><br><span class=\"line\">./gcloud init</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>把網址貼到網頁上面 取得 verification code</p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/rQRHit0.png\" alt></p>\n<p><img src=\"https://i.imgur.com/zz1RyRD.png\" alt></p>\n<h3 id=\"4-Build-image\"><a href=\"#4-Build-image\" class=\"headerlink\" title=\"4. Build image\"></a>4. Build image</h3><h4 id=\"4-1-1-建立-Dockerfile\"><a href=\"#4-1-1-建立-Dockerfile\" class=\"headerlink\" title=\"4.1.1 建立 Dockerfile\"></a>4.1.1 建立 Dockerfile</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir gcpimagetest</span><br><span class=\"line\">cd gcpimagetest/</span><br><span class=\"line\">vi Dockerfile</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-1-2-將官方的範例貼上去\"><a href=\"#4-1-2-將官方的範例貼上去\" class=\"headerlink\" title=\"4.1.2 將官方的範例貼上去\"></a>4.1.2 將官方的範例貼上去</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># The Dockerfile defines the image&apos;s environment</span><br><span class=\"line\"># Import Python runtime and set up working directory</span><br><span class=\"line\">FROM python:2.7-alpine</span><br><span class=\"line\">WORKDIR /app</span><br><span class=\"line\">ADD . /app</span><br><span class=\"line\"></span><br><span class=\"line\"># Install any necessary dependencies</span><br><span class=\"line\">RUN pip install -r ./requirements.txt</span><br><span class=\"line\"></span><br><span class=\"line\"># Open port 80 for serving the webpage</span><br><span class=\"line\">EXPOSE 80</span><br><span class=\"line\"></span><br><span class=\"line\"># Run app.py when the container launches</span><br><span class=\"line\">CMD [&quot;python&quot;, &quot;app.py&quot;]</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-1-3-建立-requirements-txt\"><a href=\"#4-1-3-建立-requirements-txt\" class=\"headerlink\" title=\"4.1.3 建立 requirements.txt\"></a>4.1.3 建立 requirements.txt</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># This file defines the image&apos;s dependencies</span><br><span class=\"line\">Flask</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-1-4-建立-app-py\"><a href=\"#4-1-4-建立-app-py\" class=\"headerlink\" title=\"4.1.4 建立 app.py\"></a>4.1.4 建立 app.py</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># The Docker image contains the following code</span><br><span class=\"line\">from flask import Flask</span><br><span class=\"line\">import os</span><br><span class=\"line\">import socket</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(&quot;/&quot;)</span><br><span class=\"line\">def hello():</span><br><span class=\"line\">    html = &quot;&lt;h3&gt;Hello, World!&lt;/h3&gt;&quot;</span><br><span class=\"line\">    return html</span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &quot;__main__&quot;:</span><br><span class=\"line\">  app.run(host=&apos;0.0.0.0&apos;, port=80)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-2-建立-image\"><a href=\"#4-2-建立-image\" class=\"headerlink\" title=\"4.2 建立 image\"></a>4.2 建立 image</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker build -t quickstart-image .</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/QzIpb2r.png\" alt></p>\n<blockquote>\n<p>gcloud auth 設定(只要設定一次就可以了)</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./gcloud auth configure-docker</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/4vnE8VL.png\" alt></p>\n<h4 id=\"4-3-tag-image\"><a href=\"#4-3-tag-image\" class=\"headerlink\" title=\"4.3 tag image\"></a>4.3 tag image</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker tag quickstart-image gcr.io/[PROJECT-ID]/quickstart-image:tag1</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-Push-Image\"><a href=\"#5-Push-Image\" class=\"headerlink\" title=\"5. Push Image\"></a>5. Push Image</h3><h4 id=\"5-1-push-前要安裝憑證\"><a href=\"#5-1-push-前要安裝憑證\" class=\"headerlink\" title=\"5.1 push 前要安裝憑證\"></a>5.1 push 前要安裝<a href=\"https://cloud.google.com/container-registry/docs/advanced-authentication\" target=\"_blank\" rel=\"noopener\">憑證</a></h4><p><img src=\"https://i.imgur.com/U8eL3Hp.png\" alt></p>\n<h4 id=\"5-2-建立-docker-credential-gcr\"><a href=\"#5-2-建立-docker-credential-gcr\" class=\"headerlink\" title=\"5.2 建立 docker-credential-gcr\"></a>5.2 建立 docker-credential-gcr</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi docker-credential-gcr</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5-3-輸入以下憑證\"><a href=\"#5-3-輸入以下憑證\" class=\"headerlink\" title=\"5.3 輸入以下憑證\"></a>5.3 輸入以下憑證</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">VERSION=1.5.0</span><br><span class=\"line\">OS=linux  # or &quot;darwin&quot; for OSX, &quot;windows&quot; for Windows.</span><br><span class=\"line\">ARCH=amd64  # or &quot;386&quot; for 32-bit OSs</span><br><span class=\"line\"></span><br><span class=\"line\">curl -fsSL &quot;https://github.com/GoogleCloudPlatform/docker-credential-gcr/releases/download/v$&#123;VERSION&#125;/docker-credential-gcr_$&#123;OS&#125;_$&#123;ARCH&#125;-$&#123;VERSION&#125;.tar.gz&quot; \\</span><br><span class=\"line\">  | tar xz --to-stdout ./docker-credential-gcr \\</span><br><span class=\"line\">  &gt; /usr/bin/docker-credential-gcr &amp;&amp; chmod +x /usr/bin/docker-credential-gcr</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5-4-設定憑證\"><a href=\"#5-4-設定憑證\" class=\"headerlink\" title=\"5.4 設定憑證\"></a>5.4 設定憑證</h4><blockquote>\n<p>記得要回到目錄的最上層才可以設定</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./gcloud/google-cloud-sdk/bin/gcloud  components install docker-credential-gcr</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>成功畫面</p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/TtZkdtE.png\" alt></p>\n<h4 id=\"5-5-提升-docker-credential-gcr-文件權限-並執行-docker-credential-gcr設定\"><a href=\"#5-5-提升-docker-credential-gcr-文件權限-並執行-docker-credential-gcr設定\" class=\"headerlink\" title=\"5.5 提升 docker-credential-gcr 文件權限 並執行 docker-credential-gcr設定\"></a>5.5 提升 docker-credential-gcr 文件權限 並執行 docker-credential-gcr設定</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod 777 docker-credential-gcr</span><br><span class=\"line\">docker-credential-gcr configure-docker</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5-6-設定完成之後就可以-推送到-gcp-上面了\"><a href=\"#5-6-設定完成之後就可以-推送到-gcp-上面了\" class=\"headerlink\" title=\"5.6 設定完成之後就可以 推送到 gcp 上面了\"></a>5.6 設定完成之後就可以 推送到 gcp 上面了</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker push gcr.io/[PROJECT-ID]/quickstart-imag:tag1</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/NZnYOf0.png\" alt></p>\n<p><img src=\"https://i.imgur.com/SpO0EuV.png\" alt></p>\n<h3 id=\"6-Pull-Image\"><a href=\"#6-Pull-Image\" class=\"headerlink\" title=\"6. Pull Image\"></a>6. Pull Image</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull gcr.io/[PROJECT-ID]/quickstart-image:tag1</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h2><ul>\n<li><a href=\"https://cloud.google.com/container-registry/docs/\" target=\"_blank\" rel=\"noopener\">官方說明文件</a></li>\n<li><a href=\"https://cloud.google.com/container-registry/docs/advanced-authentication\" target=\"_blank\" rel=\"noopener\">Authentication</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"GCP-Container-Registry\"><a href=\"#GCP-Container-Registry\" class=\"headerlink\" title=\"GCP Container Registry\"></a>GCP Container Registry</h2><h3 id=\"1-確認帳號已經啟用付費功能\"><a href=\"#1-確認帳號已經啟用付費功能\" class=\"headerlink\" title=\"1. 確認帳號已經啟用付費功能\"></a>1. 確認帳號已經啟用付費功能</h3><h3 id=\"2-開啟API服務\"><a href=\"#2-開啟API服務\" class=\"headerlink\" title=\"2. 開啟API服務\"></a>2. <a href=\"https://console.cloud.google.com/flows/enableapi?apiid=containerregistry.googleapis.com&redirect=https://cloud.google.com/container-registry/docs/quickstart&_ga=2.224013522.-850793838.1545806748\" target=\"_blank\" rel=\"noopener\">開啟API服務</a></h3><p><img src=\"https://i.imgur.com/jHv4PGH.png\" alt></p>\n<h3 id=\"3-安裝-Cloud-SDK\"><a href=\"#3-安裝-Cloud-SDK\" class=\"headerlink\" title=\"3. 安裝 Cloud SDK\"></a>3. 安裝 <a href=\"https://cloud.google.com/sdk/docs/\" target=\"_blank\" rel=\"noopener\">Cloud SDK</a></h3><h4 id=\"3-1-下載-SDK\"><a href=\"#3-1-下載-SDK\" class=\"headerlink\" title=\"3.1 下載 SDK\"></a>3.1 下載 SDK</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir gcloud</span><br><span class=\"line\">cd gcloud</span><br><span class=\"line\">wget https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-218.0.0-linux-x86_64.tar.gz</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-2-解壓縮\"><a href=\"#3-2-解壓縮\" class=\"headerlink\" title=\"3.2 解壓縮\"></a>3.2 解壓縮</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gunzip google-cloud-sdk-218.0.0-linux-x86_64.tar.gz</span><br><span class=\"line\">tar xvf google-cloud-sdk-218.0.0-linux-x86_64.tar</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>這時候就可以看到 google-cloud-sdk/ 這個資料夾<br><img src=\"https://i.imgur.com/Mh6PsOr.png\" alt></p>\n</blockquote>\n<h4 id=\"3-3-執行指令\"><a href=\"#3-3-執行指令\" class=\"headerlink\" title=\"3.3 執行指令\"></a>3.3 執行指令</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd google-cloud-sdk/</span><br><span class=\"line\">./install.sh</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/2iG0Dp3.png\" alt></p>\n<h4 id=\"3-4-init-SDK\"><a href=\"#3-4-init-SDK\" class=\"headerlink\" title=\"3.4 init SDK\"></a>3.4 init SDK</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd bin</span><br><span class=\"line\">./gcloud init</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>把網址貼到網頁上面 取得 verification code</p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/rQRHit0.png\" alt></p>\n<p><img src=\"https://i.imgur.com/zz1RyRD.png\" alt></p>\n<h3 id=\"4-Build-image\"><a href=\"#4-Build-image\" class=\"headerlink\" title=\"4. Build image\"></a>4. Build image</h3><h4 id=\"4-1-1-建立-Dockerfile\"><a href=\"#4-1-1-建立-Dockerfile\" class=\"headerlink\" title=\"4.1.1 建立 Dockerfile\"></a>4.1.1 建立 Dockerfile</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir gcpimagetest</span><br><span class=\"line\">cd gcpimagetest/</span><br><span class=\"line\">vi Dockerfile</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-1-2-將官方的範例貼上去\"><a href=\"#4-1-2-將官方的範例貼上去\" class=\"headerlink\" title=\"4.1.2 將官方的範例貼上去\"></a>4.1.2 將官方的範例貼上去</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># The Dockerfile defines the image&apos;s environment</span><br><span class=\"line\"># Import Python runtime and set up working directory</span><br><span class=\"line\">FROM python:2.7-alpine</span><br><span class=\"line\">WORKDIR /app</span><br><span class=\"line\">ADD . /app</span><br><span class=\"line\"></span><br><span class=\"line\"># Install any necessary dependencies</span><br><span class=\"line\">RUN pip install -r ./requirements.txt</span><br><span class=\"line\"></span><br><span class=\"line\"># Open port 80 for serving the webpage</span><br><span class=\"line\">EXPOSE 80</span><br><span class=\"line\"></span><br><span class=\"line\"># Run app.py when the container launches</span><br><span class=\"line\">CMD [&quot;python&quot;, &quot;app.py&quot;]</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-1-3-建立-requirements-txt\"><a href=\"#4-1-3-建立-requirements-txt\" class=\"headerlink\" title=\"4.1.3 建立 requirements.txt\"></a>4.1.3 建立 requirements.txt</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># This file defines the image&apos;s dependencies</span><br><span class=\"line\">Flask</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-1-4-建立-app-py\"><a href=\"#4-1-4-建立-app-py\" class=\"headerlink\" title=\"4.1.4 建立 app.py\"></a>4.1.4 建立 app.py</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># The Docker image contains the following code</span><br><span class=\"line\">from flask import Flask</span><br><span class=\"line\">import os</span><br><span class=\"line\">import socket</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\">@app.route(&quot;/&quot;)</span><br><span class=\"line\">def hello():</span><br><span class=\"line\">    html = &quot;&lt;h3&gt;Hello, World!&lt;/h3&gt;&quot;</span><br><span class=\"line\">    return html</span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &quot;__main__&quot;:</span><br><span class=\"line\">  app.run(host=&apos;0.0.0.0&apos;, port=80)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-2-建立-image\"><a href=\"#4-2-建立-image\" class=\"headerlink\" title=\"4.2 建立 image\"></a>4.2 建立 image</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker build -t quickstart-image .</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/QzIpb2r.png\" alt></p>\n<blockquote>\n<p>gcloud auth 設定(只要設定一次就可以了)</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./gcloud auth configure-docker</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/4vnE8VL.png\" alt></p>\n<h4 id=\"4-3-tag-image\"><a href=\"#4-3-tag-image\" class=\"headerlink\" title=\"4.3 tag image\"></a>4.3 tag image</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker tag quickstart-image gcr.io/[PROJECT-ID]/quickstart-image:tag1</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-Push-Image\"><a href=\"#5-Push-Image\" class=\"headerlink\" title=\"5. Push Image\"></a>5. Push Image</h3><h4 id=\"5-1-push-前要安裝憑證\"><a href=\"#5-1-push-前要安裝憑證\" class=\"headerlink\" title=\"5.1 push 前要安裝憑證\"></a>5.1 push 前要安裝<a href=\"https://cloud.google.com/container-registry/docs/advanced-authentication\" target=\"_blank\" rel=\"noopener\">憑證</a></h4><p><img src=\"https://i.imgur.com/U8eL3Hp.png\" alt></p>\n<h4 id=\"5-2-建立-docker-credential-gcr\"><a href=\"#5-2-建立-docker-credential-gcr\" class=\"headerlink\" title=\"5.2 建立 docker-credential-gcr\"></a>5.2 建立 docker-credential-gcr</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi docker-credential-gcr</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5-3-輸入以下憑證\"><a href=\"#5-3-輸入以下憑證\" class=\"headerlink\" title=\"5.3 輸入以下憑證\"></a>5.3 輸入以下憑證</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">VERSION=1.5.0</span><br><span class=\"line\">OS=linux  # or &quot;darwin&quot; for OSX, &quot;windows&quot; for Windows.</span><br><span class=\"line\">ARCH=amd64  # or &quot;386&quot; for 32-bit OSs</span><br><span class=\"line\"></span><br><span class=\"line\">curl -fsSL &quot;https://github.com/GoogleCloudPlatform/docker-credential-gcr/releases/download/v$&#123;VERSION&#125;/docker-credential-gcr_$&#123;OS&#125;_$&#123;ARCH&#125;-$&#123;VERSION&#125;.tar.gz&quot; \\</span><br><span class=\"line\">  | tar xz --to-stdout ./docker-credential-gcr \\</span><br><span class=\"line\">  &gt; /usr/bin/docker-credential-gcr &amp;&amp; chmod +x /usr/bin/docker-credential-gcr</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5-4-設定憑證\"><a href=\"#5-4-設定憑證\" class=\"headerlink\" title=\"5.4 設定憑證\"></a>5.4 設定憑證</h4><blockquote>\n<p>記得要回到目錄的最上層才可以設定</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./gcloud/google-cloud-sdk/bin/gcloud  components install docker-credential-gcr</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>成功畫面</p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/TtZkdtE.png\" alt></p>\n<h4 id=\"5-5-提升-docker-credential-gcr-文件權限-並執行-docker-credential-gcr設定\"><a href=\"#5-5-提升-docker-credential-gcr-文件權限-並執行-docker-credential-gcr設定\" class=\"headerlink\" title=\"5.5 提升 docker-credential-gcr 文件權限 並執行 docker-credential-gcr設定\"></a>5.5 提升 docker-credential-gcr 文件權限 並執行 docker-credential-gcr設定</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod 777 docker-credential-gcr</span><br><span class=\"line\">docker-credential-gcr configure-docker</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5-6-設定完成之後就可以-推送到-gcp-上面了\"><a href=\"#5-6-設定完成之後就可以-推送到-gcp-上面了\" class=\"headerlink\" title=\"5.6 設定完成之後就可以 推送到 gcp 上面了\"></a>5.6 設定完成之後就可以 推送到 gcp 上面了</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker push gcr.io/[PROJECT-ID]/quickstart-imag:tag1</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/NZnYOf0.png\" alt></p>\n<p><img src=\"https://i.imgur.com/SpO0EuV.png\" alt></p>\n<h3 id=\"6-Pull-Image\"><a href=\"#6-Pull-Image\" class=\"headerlink\" title=\"6. Pull Image\"></a>6. Pull Image</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull gcr.io/[PROJECT-ID]/quickstart-image:tag1</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h2><ul>\n<li><a href=\"https://cloud.google.com/container-registry/docs/\" target=\"_blank\" rel=\"noopener\">官方說明文件</a></li>\n<li><a href=\"https://cloud.google.com/container-registry/docs/advanced-authentication\" target=\"_blank\" rel=\"noopener\">Authentication</a></li>\n</ul>\n"},{"title":"GRPC C# Quickstart","date":"2018-12-11T06:15:11.000Z","_content":"\n# GRPC Quickstart\n\n## Clone GRPC\n\n```bash\ngit clone -b v1.17.0 https://github.com/grpc/grpc\n\n```\n\n![Clone GRPC](https://i.imgur.com/F5MAgGK.png)\n\n## Build\n\n```bash\ncd D:\\GRPC\\grpc\\examples\\csharp\\Helloworld\ndotnet build Greeter.sln\n\n```\n\n![Build](https://i.imgur.com/p9eDKj6.png)\n\n### Run a gRPC application\n\n> Server\n\n```bash\ncd D:\\GRPC\\grpc\\examples\\csharp\\Helloworld\\GreeterServer>\n dotnet run -f netcoreapp2.1\n\n```\n\n![Server](https://i.imgur.com/snarP0h.png)\n\n> Client\n\n```bash\ncd D:\\GRPC\\grpc\\examples\\csharp\\Helloworld\\GreeterClient\ndotnet run -f netcoreapp2.1\n```\n\n![Client](https://i.imgur.com/xQDQpZC.png)\n\n## 參考\n\n* [C# Quickstart](https://grpc.io/docs/quickstart/csharp.html)\n* [gRPC 官方文檔中文版 V1.0](https://doc.oschina.net/grpc?t=60132)\n* [https://github.com/grpc/grpc](https://github.com/grpc/grpc)","source":"_posts/GRPC-C-Quickstart.md","raw":"---\ntitle: 'GRPC C# Quickstart'\ndate: 2018-12-11 14:15:11\ncategories:\n- GRPC\ntags:\n- GRPC\n---\n\n# GRPC Quickstart\n\n## Clone GRPC\n\n```bash\ngit clone -b v1.17.0 https://github.com/grpc/grpc\n\n```\n\n![Clone GRPC](https://i.imgur.com/F5MAgGK.png)\n\n## Build\n\n```bash\ncd D:\\GRPC\\grpc\\examples\\csharp\\Helloworld\ndotnet build Greeter.sln\n\n```\n\n![Build](https://i.imgur.com/p9eDKj6.png)\n\n### Run a gRPC application\n\n> Server\n\n```bash\ncd D:\\GRPC\\grpc\\examples\\csharp\\Helloworld\\GreeterServer>\n dotnet run -f netcoreapp2.1\n\n```\n\n![Server](https://i.imgur.com/snarP0h.png)\n\n> Client\n\n```bash\ncd D:\\GRPC\\grpc\\examples\\csharp\\Helloworld\\GreeterClient\ndotnet run -f netcoreapp2.1\n```\n\n![Client](https://i.imgur.com/xQDQpZC.png)\n\n## 參考\n\n* [C# Quickstart](https://grpc.io/docs/quickstart/csharp.html)\n* [gRPC 官方文檔中文版 V1.0](https://doc.oschina.net/grpc?t=60132)\n* [https://github.com/grpc/grpc](https://github.com/grpc/grpc)","slug":"GRPC-C-Quickstart","published":1,"updated":"2019-06-03T01:52:24.689Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xu6000z1q22vw7kf7v9","content":"<h1 id=\"GRPC-Quickstart\"><a href=\"#GRPC-Quickstart\" class=\"headerlink\" title=\"GRPC Quickstart\"></a>GRPC Quickstart</h1><h2 id=\"Clone-GRPC\"><a href=\"#Clone-GRPC\" class=\"headerlink\" title=\"Clone GRPC\"></a>Clone GRPC</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> -b v1.17.0 https://github.com/grpc/grpc</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/F5MAgGK.png\" alt=\"Clone GRPC\"></p>\n<h2 id=\"Build\"><a href=\"#Build\" class=\"headerlink\" title=\"Build\"></a>Build</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> D:\\GRPC\\grpc\\examples\\csharp\\Helloworld</span><br><span class=\"line\">dotnet build Greeter.sln</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/p9eDKj6.png\" alt=\"Build\"></p>\n<h3 id=\"Run-a-gRPC-application\"><a href=\"#Run-a-gRPC-application\" class=\"headerlink\" title=\"Run a gRPC application\"></a>Run a gRPC application</h3><blockquote>\n<p>Server</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> D:\\GRPC\\grpc\\examples\\csharp\\Helloworld\\GreeterServer&gt;</span><br><span class=\"line\"> dotnet run -f netcoreapp2.1</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/snarP0h.png\" alt=\"Server\"></p>\n<blockquote>\n<p>Client</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> D:\\GRPC\\grpc\\examples\\csharp\\Helloworld\\GreeterClient</span><br><span class=\"line\">dotnet run -f netcoreapp2.1</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/xQDQpZC.png\" alt=\"Client\"></p>\n<h2 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h2><ul>\n<li><a href=\"https://grpc.io/docs/quickstart/csharp.html\" target=\"_blank\" rel=\"noopener\">C# Quickstart</a></li>\n<li><a href=\"https://doc.oschina.net/grpc?t=60132\" target=\"_blank\" rel=\"noopener\">gRPC 官方文檔中文版 V1.0</a></li>\n<li><a href=\"https://github.com/grpc/grpc\" target=\"_blank\" rel=\"noopener\">https://github.com/grpc/grpc</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"GRPC-Quickstart\"><a href=\"#GRPC-Quickstart\" class=\"headerlink\" title=\"GRPC Quickstart\"></a>GRPC Quickstart</h1><h2 id=\"Clone-GRPC\"><a href=\"#Clone-GRPC\" class=\"headerlink\" title=\"Clone GRPC\"></a>Clone GRPC</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> -b v1.17.0 https://github.com/grpc/grpc</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/F5MAgGK.png\" alt=\"Clone GRPC\"></p>\n<h2 id=\"Build\"><a href=\"#Build\" class=\"headerlink\" title=\"Build\"></a>Build</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> D:\\GRPC\\grpc\\examples\\csharp\\Helloworld</span><br><span class=\"line\">dotnet build Greeter.sln</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/p9eDKj6.png\" alt=\"Build\"></p>\n<h3 id=\"Run-a-gRPC-application\"><a href=\"#Run-a-gRPC-application\" class=\"headerlink\" title=\"Run a gRPC application\"></a>Run a gRPC application</h3><blockquote>\n<p>Server</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> D:\\GRPC\\grpc\\examples\\csharp\\Helloworld\\GreeterServer&gt;</span><br><span class=\"line\"> dotnet run -f netcoreapp2.1</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/snarP0h.png\" alt=\"Server\"></p>\n<blockquote>\n<p>Client</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> D:\\GRPC\\grpc\\examples\\csharp\\Helloworld\\GreeterClient</span><br><span class=\"line\">dotnet run -f netcoreapp2.1</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/xQDQpZC.png\" alt=\"Client\"></p>\n<h2 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h2><ul>\n<li><a href=\"https://grpc.io/docs/quickstart/csharp.html\" target=\"_blank\" rel=\"noopener\">C# Quickstart</a></li>\n<li><a href=\"https://doc.oschina.net/grpc?t=60132\" target=\"_blank\" rel=\"noopener\">gRPC 官方文檔中文版 V1.0</a></li>\n<li><a href=\"https://github.com/grpc/grpc\" target=\"_blank\" rel=\"noopener\">https://github.com/grpc/grpc</a></li>\n</ul>\n"},{"title":"Gitea","date":"2018-12-25T03:28:29.000Z","_content":"# Gitea\n\n## Docker run\n\n### 1. 建立儲存庫資料夾\n\n```bash\nsudo mkdir -p /var/lib/gitea\n```\n\n### 2. Docker run\n\n```bash\n\ndocker run -d --name=gitea -p 10022:22 -p 10080:3000 -v /var/lib/gitea:/data gitea/gitea:latest\n```\n\n### 3. 預覽 Yourhost:10080\n\n![預覽](https://i.imgur.com/OmcRKBY.png)\n\n### 4.進入安裝\n\n![進入安裝](https://i.imgur.com/DznoR4g.png)\n\n## 設定 Gitea\n\n### 資料庫\n\n>可以選擇多種資料庫類型\n\n![資料庫](https://i.imgur.com/tEwQvrd.png)\n\n### 一般設定\n\n> SSH 伺服器域名 可以設定主機的Domain\n> Gitea 基本 URL 可以設定主機的Domain 或者IP\n \n![一般設定](https://i.imgur.com/ZwBVomv.png)\n\n### 可選設定 >  管理員帳號設定\n\n> 設定管理員帳號\n\n![設定管理員帳號](https://i.imgur.com/ZvkuMfN.png)\n\n### 完成之後就可以看到 git 的畫面了\n\n![完成之後就可以看到](https://i.imgur.com/2xu0ZI2.png)\n\n## 參考\n\n* [Gitea](https://docs.gitea.io/zh-tw/)\n* [Gitea Docker](https://docs.gitea.io/zh-tw/install-with-docker/)","source":"_posts/Gitea.md","raw":"---\ntitle: Gitea\ndate: 2018-12-25 11:28:29\ncategories:\n- Gitea\ntags:\n- Gitea\n- Git\n---\n# Gitea\n\n## Docker run\n\n### 1. 建立儲存庫資料夾\n\n```bash\nsudo mkdir -p /var/lib/gitea\n```\n\n### 2. Docker run\n\n```bash\n\ndocker run -d --name=gitea -p 10022:22 -p 10080:3000 -v /var/lib/gitea:/data gitea/gitea:latest\n```\n\n### 3. 預覽 Yourhost:10080\n\n![預覽](https://i.imgur.com/OmcRKBY.png)\n\n### 4.進入安裝\n\n![進入安裝](https://i.imgur.com/DznoR4g.png)\n\n## 設定 Gitea\n\n### 資料庫\n\n>可以選擇多種資料庫類型\n\n![資料庫](https://i.imgur.com/tEwQvrd.png)\n\n### 一般設定\n\n> SSH 伺服器域名 可以設定主機的Domain\n> Gitea 基本 URL 可以設定主機的Domain 或者IP\n \n![一般設定](https://i.imgur.com/ZwBVomv.png)\n\n### 可選設定 >  管理員帳號設定\n\n> 設定管理員帳號\n\n![設定管理員帳號](https://i.imgur.com/ZvkuMfN.png)\n\n### 完成之後就可以看到 git 的畫面了\n\n![完成之後就可以看到](https://i.imgur.com/2xu0ZI2.png)\n\n## 參考\n\n* [Gitea](https://docs.gitea.io/zh-tw/)\n* [Gitea Docker](https://docs.gitea.io/zh-tw/install-with-docker/)","slug":"Gitea","published":1,"updated":"2019-06-03T01:52:24.690Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xu800131q22cv1knkok","content":"<h1 id=\"Gitea\"><a href=\"#Gitea\" class=\"headerlink\" title=\"Gitea\"></a>Gitea</h1><h2 id=\"Docker-run\"><a href=\"#Docker-run\" class=\"headerlink\" title=\"Docker run\"></a>Docker run</h2><h3 id=\"1-建立儲存庫資料夾\"><a href=\"#1-建立儲存庫資料夾\" class=\"headerlink\" title=\"1. 建立儲存庫資料夾\"></a>1. 建立儲存庫資料夾</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir -p /var/lib/gitea</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-Docker-run\"><a href=\"#2-Docker-run\" class=\"headerlink\" title=\"2. Docker run\"></a>2. Docker run</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">docker run -d --name=gitea -p 10022:22 -p 10080:3000 -v /var/lib/gitea:/data gitea/gitea:latest</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-預覽-Yourhost-10080\"><a href=\"#3-預覽-Yourhost-10080\" class=\"headerlink\" title=\"3. 預覽 Yourhost:10080\"></a>3. 預覽 Yourhost:10080</h3><p><img src=\"https://i.imgur.com/OmcRKBY.png\" alt=\"預覽\"></p>\n<h3 id=\"4-進入安裝\"><a href=\"#4-進入安裝\" class=\"headerlink\" title=\"4.進入安裝\"></a>4.進入安裝</h3><p><img src=\"https://i.imgur.com/DznoR4g.png\" alt=\"進入安裝\"></p>\n<h2 id=\"設定-Gitea\"><a href=\"#設定-Gitea\" class=\"headerlink\" title=\"設定 Gitea\"></a>設定 Gitea</h2><h3 id=\"資料庫\"><a href=\"#資料庫\" class=\"headerlink\" title=\"資料庫\"></a>資料庫</h3><blockquote>\n<p>可以選擇多種資料庫類型</p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/tEwQvrd.png\" alt=\"資料庫\"></p>\n<h3 id=\"一般設定\"><a href=\"#一般設定\" class=\"headerlink\" title=\"一般設定\"></a>一般設定</h3><blockquote>\n<p>SSH 伺服器域名 可以設定主機的Domain<br>Gitea 基本 URL 可以設定主機的Domain 或者IP</p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/ZwBVomv.png\" alt=\"一般設定\"></p>\n<h3 id=\"可選設定-gt-管理員帳號設定\"><a href=\"#可選設定-gt-管理員帳號設定\" class=\"headerlink\" title=\"可選設定 &gt;  管理員帳號設定\"></a>可選設定 &gt;  管理員帳號設定</h3><blockquote>\n<p>設定管理員帳號</p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/ZvkuMfN.png\" alt=\"設定管理員帳號\"></p>\n<h3 id=\"完成之後就可以看到-git-的畫面了\"><a href=\"#完成之後就可以看到-git-的畫面了\" class=\"headerlink\" title=\"完成之後就可以看到 git 的畫面了\"></a>完成之後就可以看到 git 的畫面了</h3><p><img src=\"https://i.imgur.com/2xu0ZI2.png\" alt=\"完成之後就可以看到\"></p>\n<h2 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h2><ul>\n<li><a href=\"https://docs.gitea.io/zh-tw/\" target=\"_blank\" rel=\"noopener\">Gitea</a></li>\n<li><a href=\"https://docs.gitea.io/zh-tw/install-with-docker/\" target=\"_blank\" rel=\"noopener\">Gitea Docker</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Gitea\"><a href=\"#Gitea\" class=\"headerlink\" title=\"Gitea\"></a>Gitea</h1><h2 id=\"Docker-run\"><a href=\"#Docker-run\" class=\"headerlink\" title=\"Docker run\"></a>Docker run</h2><h3 id=\"1-建立儲存庫資料夾\"><a href=\"#1-建立儲存庫資料夾\" class=\"headerlink\" title=\"1. 建立儲存庫資料夾\"></a>1. 建立儲存庫資料夾</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir -p /var/lib/gitea</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-Docker-run\"><a href=\"#2-Docker-run\" class=\"headerlink\" title=\"2. Docker run\"></a>2. Docker run</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">docker run -d --name=gitea -p 10022:22 -p 10080:3000 -v /var/lib/gitea:/data gitea/gitea:latest</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-預覽-Yourhost-10080\"><a href=\"#3-預覽-Yourhost-10080\" class=\"headerlink\" title=\"3. 預覽 Yourhost:10080\"></a>3. 預覽 Yourhost:10080</h3><p><img src=\"https://i.imgur.com/OmcRKBY.png\" alt=\"預覽\"></p>\n<h3 id=\"4-進入安裝\"><a href=\"#4-進入安裝\" class=\"headerlink\" title=\"4.進入安裝\"></a>4.進入安裝</h3><p><img src=\"https://i.imgur.com/DznoR4g.png\" alt=\"進入安裝\"></p>\n<h2 id=\"設定-Gitea\"><a href=\"#設定-Gitea\" class=\"headerlink\" title=\"設定 Gitea\"></a>設定 Gitea</h2><h3 id=\"資料庫\"><a href=\"#資料庫\" class=\"headerlink\" title=\"資料庫\"></a>資料庫</h3><blockquote>\n<p>可以選擇多種資料庫類型</p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/tEwQvrd.png\" alt=\"資料庫\"></p>\n<h3 id=\"一般設定\"><a href=\"#一般設定\" class=\"headerlink\" title=\"一般設定\"></a>一般設定</h3><blockquote>\n<p>SSH 伺服器域名 可以設定主機的Domain<br>Gitea 基本 URL 可以設定主機的Domain 或者IP</p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/ZwBVomv.png\" alt=\"一般設定\"></p>\n<h3 id=\"可選設定-gt-管理員帳號設定\"><a href=\"#可選設定-gt-管理員帳號設定\" class=\"headerlink\" title=\"可選設定 &gt;  管理員帳號設定\"></a>可選設定 &gt;  管理員帳號設定</h3><blockquote>\n<p>設定管理員帳號</p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/ZvkuMfN.png\" alt=\"設定管理員帳號\"></p>\n<h3 id=\"完成之後就可以看到-git-的畫面了\"><a href=\"#完成之後就可以看到-git-的畫面了\" class=\"headerlink\" title=\"完成之後就可以看到 git 的畫面了\"></a>完成之後就可以看到 git 的畫面了</h3><p><img src=\"https://i.imgur.com/2xu0ZI2.png\" alt=\"完成之後就可以看到\"></p>\n<h2 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h2><ul>\n<li><a href=\"https://docs.gitea.io/zh-tw/\" target=\"_blank\" rel=\"noopener\">Gitea</a></li>\n<li><a href=\"https://docs.gitea.io/zh-tw/install-with-docker/\" target=\"_blank\" rel=\"noopener\">Gitea Docker</a></li>\n</ul>\n"},{"title":"Gitlab server on Docker","date":"2019-05-24T05:55:55.000Z","_content":"\n# Gitlab server on Docker\n\n```bash\nsudo docker run --detach \\\n  --hostname gitlab.example.com \\\n  --publish 443:443 --publish 80:80 --publish 22:22 \\\n  --name gitlab \\\n  --restart always \\\n  --volume /srv/gitlab/config:/etc/gitlab \\\n  --volume /srv/gitlab/logs:/var/log/gitlab \\\n  --volume /srv/gitlab/data:/var/opt/gitlab \\\n  gitlab/gitlab-ce:latest\n\n```\n\n# 參考\n* [GitLab Docker](https://docs.gitlab.com/omnibus/docker/)","source":"_posts/Gitlab-server-on-Docker.md","raw":"---\ntitle: Gitlab server on Docker\ndate: 2019-05-24 13:55:55\ncategories:\n- Gitlab\ntags:\n- Gitlab\n- Docker\n---\n\n# Gitlab server on Docker\n\n```bash\nsudo docker run --detach \\\n  --hostname gitlab.example.com \\\n  --publish 443:443 --publish 80:80 --publish 22:22 \\\n  --name gitlab \\\n  --restart always \\\n  --volume /srv/gitlab/config:/etc/gitlab \\\n  --volume /srv/gitlab/logs:/var/log/gitlab \\\n  --volume /srv/gitlab/data:/var/opt/gitlab \\\n  gitlab/gitlab-ce:latest\n\n```\n\n# 參考\n* [GitLab Docker](https://docs.gitlab.com/omnibus/docker/)","slug":"Gitlab-server-on-Docker","published":1,"updated":"2019-06-03T01:52:24.690Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xu900141q22rl4jtc2z","content":"<h1 id=\"Gitlab-server-on-Docker\"><a href=\"#Gitlab-server-on-Docker\" class=\"headerlink\" title=\"Gitlab server on Docker\"></a>Gitlab server on Docker</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker run --detach \\</span><br><span class=\"line\">  --hostname gitlab.example.com \\</span><br><span class=\"line\">  --publish 443:443 --publish 80:80 --publish 22:22 \\</span><br><span class=\"line\">  --name gitlab \\</span><br><span class=\"line\">  --restart always \\</span><br><span class=\"line\">  --volume /srv/gitlab/config:/etc/gitlab \\</span><br><span class=\"line\">  --volume /srv/gitlab/logs:/var/<span class=\"built_in\">log</span>/gitlab \\</span><br><span class=\"line\">  --volume /srv/gitlab/data:/var/opt/gitlab \\</span><br><span class=\"line\">  gitlab/gitlab-ce:latest</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://docs.gitlab.com/omnibus/docker/\" target=\"_blank\" rel=\"noopener\">GitLab Docker</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Gitlab-server-on-Docker\"><a href=\"#Gitlab-server-on-Docker\" class=\"headerlink\" title=\"Gitlab server on Docker\"></a>Gitlab server on Docker</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker run --detach \\</span><br><span class=\"line\">  --hostname gitlab.example.com \\</span><br><span class=\"line\">  --publish 443:443 --publish 80:80 --publish 22:22 \\</span><br><span class=\"line\">  --name gitlab \\</span><br><span class=\"line\">  --restart always \\</span><br><span class=\"line\">  --volume /srv/gitlab/config:/etc/gitlab \\</span><br><span class=\"line\">  --volume /srv/gitlab/logs:/var/<span class=\"built_in\">log</span>/gitlab \\</span><br><span class=\"line\">  --volume /srv/gitlab/data:/var/opt/gitlab \\</span><br><span class=\"line\">  gitlab/gitlab-ce:latest</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://docs.gitlab.com/omnibus/docker/\" target=\"_blank\" rel=\"noopener\">GitLab Docker</a></li>\n</ul>\n"},{"title":"GO lang Hello World","date":"2018-10-17T09:27:08.000Z","_content":"# GO lang Hello World !\n\n## 安裝 GO\n\n### 1. 下載\n\n<https://golang.org/>\n\n![下載](https://i.imgur.com/nqkLVtr.png)\n\n### 2. 選擇自己的作業系統\n\n![選擇自己的作業系統](https://i.imgur.com/L4Xbr7h.png)\n\n### 3. 安裝\n\n![安裝](https://i.imgur.com/L9HsVaY.png)\n\n![安裝](https://i.imgur.com/oRDbix1.png)\n\n### 4. 測試GO 是否有安裝成功\n\n![測試GO](https://i.imgur.com/n0W4ziL.png)\n\n## Visual Studio Code 開發\n\n### 安裝套件\n\n![安裝套件](https://i.imgur.com/qxy8dCo.png)\n\n### Hello World\n\n![Hello](https://i.imgur.com/TrwsY6c.png)\n\n```bash\npackage main\nimport \"fmt\"\nfunc main() {\nfmt.Println(\"Hello, 世界\")\n}\n```\n\n## GO WebApi\n\n### 簡單的 router 範例\n\n![router](https://i.imgur.com/KlzrTTI.png)\n\n![router](https://i.imgur.com/7xnUwXu.png)\n\n\n```bash\npackage main\nimport (\n\"fmt\"\n\"log\"\n\"net/http\"\n\"github.com/gorilla/mux\"\n)\n\nfunc main() {\nrouter := mux.NewRouter().StrictSlash(true)\nrouter.HandleFunc(\"/\", Index)\nrouter.HandleFunc(\"/news\", News)\nrouter.HandleFunc(\"/news/{DetailID}\", Detail)\nlog.Fatal(http.ListenAndServe(\":8080\", router))\n}\n\nfunc Index(w http.ResponseWriter, r *http.Request) {\nfmt.Fprintln(w, \"Home!\")\n}\n\nfunc News(w http.ResponseWriter, r *http.Request) {\nfmt.Fprintln(w, \"最新消息 Master\")\n}\n\nfunc Detail(w http.ResponseWriter, r *http.Request) {\nvars := mux.Vars(r)\nDetailID := vars[\"DetailID\"]\nfmt.Fprintln(w, \"最新消息 Detail ID:\", DetailID)\n}\n\n```\n\n## 參考網址\n\n* [官方網站](https://golang.org/)\n* [GO WEB API](https://tutorialedge.net/golang/creating-restful-api-with-golang/)\n* [7個GO WEB API框架](https://nordicapis.com/7-frameworks-to-build-a-rest-api-in-go/)\n* [微服務 GO](https://nordicapis.com/writing-microservices-in-go/)\n* [用GO構建 Restful API](https://blog.csdn.net/xingwangc2014/article/details/51623157)\n* [Golang 建構簡單WEB 框架](https://zhuanlan.zhihu.com/p/27604688)","source":"_posts/Go-lang-學習.md","raw":"---\ntitle: GO lang Hello World\ndate: 2018-10-17 17:27:08\ncategories:\n- Go\ntags: \n- Go\n- Visual Studio Code\n---\n# GO lang Hello World !\n\n## 安裝 GO\n\n### 1. 下載\n\n<https://golang.org/>\n\n![下載](https://i.imgur.com/nqkLVtr.png)\n\n### 2. 選擇自己的作業系統\n\n![選擇自己的作業系統](https://i.imgur.com/L4Xbr7h.png)\n\n### 3. 安裝\n\n![安裝](https://i.imgur.com/L9HsVaY.png)\n\n![安裝](https://i.imgur.com/oRDbix1.png)\n\n### 4. 測試GO 是否有安裝成功\n\n![測試GO](https://i.imgur.com/n0W4ziL.png)\n\n## Visual Studio Code 開發\n\n### 安裝套件\n\n![安裝套件](https://i.imgur.com/qxy8dCo.png)\n\n### Hello World\n\n![Hello](https://i.imgur.com/TrwsY6c.png)\n\n```bash\npackage main\nimport \"fmt\"\nfunc main() {\nfmt.Println(\"Hello, 世界\")\n}\n```\n\n## GO WebApi\n\n### 簡單的 router 範例\n\n![router](https://i.imgur.com/KlzrTTI.png)\n\n![router](https://i.imgur.com/7xnUwXu.png)\n\n\n```bash\npackage main\nimport (\n\"fmt\"\n\"log\"\n\"net/http\"\n\"github.com/gorilla/mux\"\n)\n\nfunc main() {\nrouter := mux.NewRouter().StrictSlash(true)\nrouter.HandleFunc(\"/\", Index)\nrouter.HandleFunc(\"/news\", News)\nrouter.HandleFunc(\"/news/{DetailID}\", Detail)\nlog.Fatal(http.ListenAndServe(\":8080\", router))\n}\n\nfunc Index(w http.ResponseWriter, r *http.Request) {\nfmt.Fprintln(w, \"Home!\")\n}\n\nfunc News(w http.ResponseWriter, r *http.Request) {\nfmt.Fprintln(w, \"最新消息 Master\")\n}\n\nfunc Detail(w http.ResponseWriter, r *http.Request) {\nvars := mux.Vars(r)\nDetailID := vars[\"DetailID\"]\nfmt.Fprintln(w, \"最新消息 Detail ID:\", DetailID)\n}\n\n```\n\n## 參考網址\n\n* [官方網站](https://golang.org/)\n* [GO WEB API](https://tutorialedge.net/golang/creating-restful-api-with-golang/)\n* [7個GO WEB API框架](https://nordicapis.com/7-frameworks-to-build-a-rest-api-in-go/)\n* [微服務 GO](https://nordicapis.com/writing-microservices-in-go/)\n* [用GO構建 Restful API](https://blog.csdn.net/xingwangc2014/article/details/51623157)\n* [Golang 建構簡單WEB 框架](https://zhuanlan.zhihu.com/p/27604688)","slug":"Go-lang-學習","published":1,"updated":"2019-06-03T01:52:24.691Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xua00181q22hfhietic","content":"<h1 id=\"GO-lang-Hello-World\"><a href=\"#GO-lang-Hello-World\" class=\"headerlink\" title=\"GO lang Hello World !\"></a>GO lang Hello World !</h1><h2 id=\"安裝-GO\"><a href=\"#安裝-GO\" class=\"headerlink\" title=\"安裝 GO\"></a>安裝 GO</h2><h3 id=\"1-下載\"><a href=\"#1-下載\" class=\"headerlink\" title=\"1. 下載\"></a>1. 下載</h3><p><a href=\"https://golang.org/\" target=\"_blank\" rel=\"noopener\">https://golang.org/</a></p>\n<p><img src=\"https://i.imgur.com/nqkLVtr.png\" alt=\"下載\"></p>\n<h3 id=\"2-選擇自己的作業系統\"><a href=\"#2-選擇自己的作業系統\" class=\"headerlink\" title=\"2. 選擇自己的作業系統\"></a>2. 選擇自己的作業系統</h3><p><img src=\"https://i.imgur.com/L4Xbr7h.png\" alt=\"選擇自己的作業系統\"></p>\n<h3 id=\"3-安裝\"><a href=\"#3-安裝\" class=\"headerlink\" title=\"3. 安裝\"></a>3. 安裝</h3><p><img src=\"https://i.imgur.com/L9HsVaY.png\" alt=\"安裝\"></p>\n<p><img src=\"https://i.imgur.com/oRDbix1.png\" alt=\"安裝\"></p>\n<h3 id=\"4-測試GO-是否有安裝成功\"><a href=\"#4-測試GO-是否有安裝成功\" class=\"headerlink\" title=\"4. 測試GO 是否有安裝成功\"></a>4. 測試GO 是否有安裝成功</h3><p><img src=\"https://i.imgur.com/n0W4ziL.png\" alt=\"測試GO\"></p>\n<h2 id=\"Visual-Studio-Code-開發\"><a href=\"#Visual-Studio-Code-開發\" class=\"headerlink\" title=\"Visual Studio Code 開發\"></a>Visual Studio Code 開發</h2><h3 id=\"安裝套件\"><a href=\"#安裝套件\" class=\"headerlink\" title=\"安裝套件\"></a>安裝套件</h3><p><img src=\"https://i.imgur.com/qxy8dCo.png\" alt=\"安裝套件\"></p>\n<h3 id=\"Hello-World\"><a href=\"#Hello-World\" class=\"headerlink\" title=\"Hello World\"></a>Hello World</h3><p><img src=\"https://i.imgur.com/TrwsY6c.png\" alt=\"Hello\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package main</span><br><span class=\"line\">import <span class=\"string\">\"fmt\"</span></span><br><span class=\"line\">func <span class=\"function\"><span class=\"title\">main</span></span>() &#123;</span><br><span class=\"line\">fmt.Println(<span class=\"string\">\"Hello, 世界\"</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"GO-WebApi\"><a href=\"#GO-WebApi\" class=\"headerlink\" title=\"GO WebApi\"></a>GO WebApi</h2><h3 id=\"簡單的-router-範例\"><a href=\"#簡單的-router-範例\" class=\"headerlink\" title=\"簡單的 router 範例\"></a>簡單的 router 範例</h3><p><img src=\"https://i.imgur.com/KlzrTTI.png\" alt=\"router\"></p>\n<p><img src=\"https://i.imgur.com/7xnUwXu.png\" alt=\"router\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package main</span><br><span class=\"line\">import (</span><br><span class=\"line\"><span class=\"string\">\"fmt\"</span></span><br><span class=\"line\"><span class=\"string\">\"log\"</span></span><br><span class=\"line\"><span class=\"string\">\"net/http\"</span></span><br><span class=\"line\"><span class=\"string\">\"github.com/gorilla/mux\"</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">func <span class=\"function\"><span class=\"title\">main</span></span>() &#123;</span><br><span class=\"line\">router := mux.NewRouter().StrictSlash(<span class=\"literal\">true</span>)</span><br><span class=\"line\">router.HandleFunc(<span class=\"string\">\"/\"</span>, Index)</span><br><span class=\"line\">router.HandleFunc(<span class=\"string\">\"/news\"</span>, News)</span><br><span class=\"line\">router.HandleFunc(<span class=\"string\">\"/news/&#123;DetailID&#125;\"</span>, Detail)</span><br><span class=\"line\">log.Fatal(http.ListenAndServe(<span class=\"string\">\":8080\"</span>, router))</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func Index(w http.ResponseWriter, r *http.Request) &#123;</span><br><span class=\"line\">fmt.Fprintln(w, <span class=\"string\">\"Home!\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func News(w http.ResponseWriter, r *http.Request) &#123;</span><br><span class=\"line\">fmt.Fprintln(w, <span class=\"string\">\"最新消息 Master\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func Detail(w http.ResponseWriter, r *http.Request) &#123;</span><br><span class=\"line\">vars := mux.Vars(r)</span><br><span class=\"line\">DetailID := vars[<span class=\"string\">\"DetailID\"</span>]</span><br><span class=\"line\">fmt.Fprintln(w, <span class=\"string\">\"最新消息 Detail ID:\"</span>, DetailID)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"參考網址\"><a href=\"#參考網址\" class=\"headerlink\" title=\"參考網址\"></a>參考網址</h2><ul>\n<li><a href=\"https://golang.org/\" target=\"_blank\" rel=\"noopener\">官方網站</a></li>\n<li><a href=\"https://tutorialedge.net/golang/creating-restful-api-with-golang/\" target=\"_blank\" rel=\"noopener\">GO WEB API</a></li>\n<li><a href=\"https://nordicapis.com/7-frameworks-to-build-a-rest-api-in-go/\" target=\"_blank\" rel=\"noopener\">7個GO WEB API框架</a></li>\n<li><a href=\"https://nordicapis.com/writing-microservices-in-go/\" target=\"_blank\" rel=\"noopener\">微服務 GO</a></li>\n<li><a href=\"https://blog.csdn.net/xingwangc2014/article/details/51623157\" target=\"_blank\" rel=\"noopener\">用GO構建 Restful API</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/27604688\" target=\"_blank\" rel=\"noopener\">Golang 建構簡單WEB 框架</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"GO-lang-Hello-World\"><a href=\"#GO-lang-Hello-World\" class=\"headerlink\" title=\"GO lang Hello World !\"></a>GO lang Hello World !</h1><h2 id=\"安裝-GO\"><a href=\"#安裝-GO\" class=\"headerlink\" title=\"安裝 GO\"></a>安裝 GO</h2><h3 id=\"1-下載\"><a href=\"#1-下載\" class=\"headerlink\" title=\"1. 下載\"></a>1. 下載</h3><p><a href=\"https://golang.org/\" target=\"_blank\" rel=\"noopener\">https://golang.org/</a></p>\n<p><img src=\"https://i.imgur.com/nqkLVtr.png\" alt=\"下載\"></p>\n<h3 id=\"2-選擇自己的作業系統\"><a href=\"#2-選擇自己的作業系統\" class=\"headerlink\" title=\"2. 選擇自己的作業系統\"></a>2. 選擇自己的作業系統</h3><p><img src=\"https://i.imgur.com/L4Xbr7h.png\" alt=\"選擇自己的作業系統\"></p>\n<h3 id=\"3-安裝\"><a href=\"#3-安裝\" class=\"headerlink\" title=\"3. 安裝\"></a>3. 安裝</h3><p><img src=\"https://i.imgur.com/L9HsVaY.png\" alt=\"安裝\"></p>\n<p><img src=\"https://i.imgur.com/oRDbix1.png\" alt=\"安裝\"></p>\n<h3 id=\"4-測試GO-是否有安裝成功\"><a href=\"#4-測試GO-是否有安裝成功\" class=\"headerlink\" title=\"4. 測試GO 是否有安裝成功\"></a>4. 測試GO 是否有安裝成功</h3><p><img src=\"https://i.imgur.com/n0W4ziL.png\" alt=\"測試GO\"></p>\n<h2 id=\"Visual-Studio-Code-開發\"><a href=\"#Visual-Studio-Code-開發\" class=\"headerlink\" title=\"Visual Studio Code 開發\"></a>Visual Studio Code 開發</h2><h3 id=\"安裝套件\"><a href=\"#安裝套件\" class=\"headerlink\" title=\"安裝套件\"></a>安裝套件</h3><p><img src=\"https://i.imgur.com/qxy8dCo.png\" alt=\"安裝套件\"></p>\n<h3 id=\"Hello-World\"><a href=\"#Hello-World\" class=\"headerlink\" title=\"Hello World\"></a>Hello World</h3><p><img src=\"https://i.imgur.com/TrwsY6c.png\" alt=\"Hello\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package main</span><br><span class=\"line\">import <span class=\"string\">\"fmt\"</span></span><br><span class=\"line\">func <span class=\"function\"><span class=\"title\">main</span></span>() &#123;</span><br><span class=\"line\">fmt.Println(<span class=\"string\">\"Hello, 世界\"</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"GO-WebApi\"><a href=\"#GO-WebApi\" class=\"headerlink\" title=\"GO WebApi\"></a>GO WebApi</h2><h3 id=\"簡單的-router-範例\"><a href=\"#簡單的-router-範例\" class=\"headerlink\" title=\"簡單的 router 範例\"></a>簡單的 router 範例</h3><p><img src=\"https://i.imgur.com/KlzrTTI.png\" alt=\"router\"></p>\n<p><img src=\"https://i.imgur.com/7xnUwXu.png\" alt=\"router\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package main</span><br><span class=\"line\">import (</span><br><span class=\"line\"><span class=\"string\">\"fmt\"</span></span><br><span class=\"line\"><span class=\"string\">\"log\"</span></span><br><span class=\"line\"><span class=\"string\">\"net/http\"</span></span><br><span class=\"line\"><span class=\"string\">\"github.com/gorilla/mux\"</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">func <span class=\"function\"><span class=\"title\">main</span></span>() &#123;</span><br><span class=\"line\">router := mux.NewRouter().StrictSlash(<span class=\"literal\">true</span>)</span><br><span class=\"line\">router.HandleFunc(<span class=\"string\">\"/\"</span>, Index)</span><br><span class=\"line\">router.HandleFunc(<span class=\"string\">\"/news\"</span>, News)</span><br><span class=\"line\">router.HandleFunc(<span class=\"string\">\"/news/&#123;DetailID&#125;\"</span>, Detail)</span><br><span class=\"line\">log.Fatal(http.ListenAndServe(<span class=\"string\">\":8080\"</span>, router))</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func Index(w http.ResponseWriter, r *http.Request) &#123;</span><br><span class=\"line\">fmt.Fprintln(w, <span class=\"string\">\"Home!\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func News(w http.ResponseWriter, r *http.Request) &#123;</span><br><span class=\"line\">fmt.Fprintln(w, <span class=\"string\">\"最新消息 Master\"</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">func Detail(w http.ResponseWriter, r *http.Request) &#123;</span><br><span class=\"line\">vars := mux.Vars(r)</span><br><span class=\"line\">DetailID := vars[<span class=\"string\">\"DetailID\"</span>]</span><br><span class=\"line\">fmt.Fprintln(w, <span class=\"string\">\"最新消息 Detail ID:\"</span>, DetailID)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"參考網址\"><a href=\"#參考網址\" class=\"headerlink\" title=\"參考網址\"></a>參考網址</h2><ul>\n<li><a href=\"https://golang.org/\" target=\"_blank\" rel=\"noopener\">官方網站</a></li>\n<li><a href=\"https://tutorialedge.net/golang/creating-restful-api-with-golang/\" target=\"_blank\" rel=\"noopener\">GO WEB API</a></li>\n<li><a href=\"https://nordicapis.com/7-frameworks-to-build-a-rest-api-in-go/\" target=\"_blank\" rel=\"noopener\">7個GO WEB API框架</a></li>\n<li><a href=\"https://nordicapis.com/writing-microservices-in-go/\" target=\"_blank\" rel=\"noopener\">微服務 GO</a></li>\n<li><a href=\"https://blog.csdn.net/xingwangc2014/article/details/51623157\" target=\"_blank\" rel=\"noopener\">用GO構建 Restful API</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/27604688\" target=\"_blank\" rel=\"noopener\">Golang 建構簡單WEB 框架</a></li>\n</ul>\n"},{"title":"Gogs Git webhook","date":"2018-11-28T05:46:39.000Z","_content":"\n# Git Commit 後通知Jenkins 建置\n\n### 點選倉庫設定\n\n![](https://i.imgur.com/6bT5cqK.png)\n\n### 管理 Web 鉤子\n\n![ Web 鉤子](https://i.imgur.com/BnxMzq9.png)\n\n### 添加鉤子\n\n![添加鉤子](https://i.imgur.com/HcebZ16.png)\n\n### 選 Gogs\n\n![選 Gogs](https://i.imgur.com/eZUBZL0.png)\n\n### 推送地址 & 密鑰本文(自行定義)\n\n![推送地址 & 密鑰本文(自行定義)](https://i.imgur.com/HOVOc4Z.png)\n\n```bash\nhttp://Jenkins位置/gogs-webhook/?job=專案名稱\n\n```\n\n### Jenkins 記得安裝  Gogs Webhook Plugin\n\n![Jenkins](https://i.imgur.com/YFMyGCe.png)\n\n### 專案記得設定剛才的密鑰本文\n\n![設定](https://i.imgur.com/Y5UFomw.png)","source":"_posts/Gogs-Git-webhook.md","raw":"---\ntitle: Gogs Git webhook\ndate: 2018-11-28 13:46:39\ncategories:\n- Gogs\ntags:\n- Gogs\n- webhook\n- Git\n- Jenkins\n---\n\n# Git Commit 後通知Jenkins 建置\n\n### 點選倉庫設定\n\n![](https://i.imgur.com/6bT5cqK.png)\n\n### 管理 Web 鉤子\n\n![ Web 鉤子](https://i.imgur.com/BnxMzq9.png)\n\n### 添加鉤子\n\n![添加鉤子](https://i.imgur.com/HcebZ16.png)\n\n### 選 Gogs\n\n![選 Gogs](https://i.imgur.com/eZUBZL0.png)\n\n### 推送地址 & 密鑰本文(自行定義)\n\n![推送地址 & 密鑰本文(自行定義)](https://i.imgur.com/HOVOc4Z.png)\n\n```bash\nhttp://Jenkins位置/gogs-webhook/?job=專案名稱\n\n```\n\n### Jenkins 記得安裝  Gogs Webhook Plugin\n\n![Jenkins](https://i.imgur.com/YFMyGCe.png)\n\n### 專案記得設定剛才的密鑰本文\n\n![設定](https://i.imgur.com/Y5UFomw.png)","slug":"Gogs-Git-webhook","published":1,"updated":"2019-03-09T09:33:53.322Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xub001a1q2243d7qhwb","content":"<h1 id=\"Git-Commit-後通知Jenkins-建置\"><a href=\"#Git-Commit-後通知Jenkins-建置\" class=\"headerlink\" title=\"Git Commit 後通知Jenkins 建置\"></a>Git Commit 後通知Jenkins 建置</h1><h3 id=\"點選倉庫設定\"><a href=\"#點選倉庫設定\" class=\"headerlink\" title=\"點選倉庫設定\"></a>點選倉庫設定</h3><p><img src=\"https://i.imgur.com/6bT5cqK.png\" alt></p>\n<h3 id=\"管理-Web-鉤子\"><a href=\"#管理-Web-鉤子\" class=\"headerlink\" title=\"管理 Web 鉤子\"></a>管理 Web 鉤子</h3><p><img src=\"https://i.imgur.com/BnxMzq9.png\" alt=\" Web 鉤子\"></p>\n<h3 id=\"添加鉤子\"><a href=\"#添加鉤子\" class=\"headerlink\" title=\"添加鉤子\"></a>添加鉤子</h3><p><img src=\"https://i.imgur.com/HcebZ16.png\" alt=\"添加鉤子\"></p>\n<h3 id=\"選-Gogs\"><a href=\"#選-Gogs\" class=\"headerlink\" title=\"選 Gogs\"></a>選 Gogs</h3><p><img src=\"https://i.imgur.com/eZUBZL0.png\" alt=\"選 Gogs\"></p>\n<h3 id=\"推送地址-amp-密鑰本文-自行定義\"><a href=\"#推送地址-amp-密鑰本文-自行定義\" class=\"headerlink\" title=\"推送地址 &amp; 密鑰本文(自行定義)\"></a>推送地址 &amp; 密鑰本文(自行定義)</h3><p><img src=\"https://i.imgur.com/HOVOc4Z.png\" alt=\"推送地址 &amp; 密鑰本文(自行定義)\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://Jenkins位置/gogs-webhook/?job=專案名稱</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Jenkins-記得安裝-Gogs-Webhook-Plugin\"><a href=\"#Jenkins-記得安裝-Gogs-Webhook-Plugin\" class=\"headerlink\" title=\"Jenkins 記得安裝  Gogs Webhook Plugin\"></a>Jenkins 記得安裝  Gogs Webhook Plugin</h3><p><img src=\"https://i.imgur.com/YFMyGCe.png\" alt=\"Jenkins\"></p>\n<h3 id=\"專案記得設定剛才的密鑰本文\"><a href=\"#專案記得設定剛才的密鑰本文\" class=\"headerlink\" title=\"專案記得設定剛才的密鑰本文\"></a>專案記得設定剛才的密鑰本文</h3><p><img src=\"https://i.imgur.com/Y5UFomw.png\" alt=\"設定\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Git-Commit-後通知Jenkins-建置\"><a href=\"#Git-Commit-後通知Jenkins-建置\" class=\"headerlink\" title=\"Git Commit 後通知Jenkins 建置\"></a>Git Commit 後通知Jenkins 建置</h1><h3 id=\"點選倉庫設定\"><a href=\"#點選倉庫設定\" class=\"headerlink\" title=\"點選倉庫設定\"></a>點選倉庫設定</h3><p><img src=\"https://i.imgur.com/6bT5cqK.png\" alt></p>\n<h3 id=\"管理-Web-鉤子\"><a href=\"#管理-Web-鉤子\" class=\"headerlink\" title=\"管理 Web 鉤子\"></a>管理 Web 鉤子</h3><p><img src=\"https://i.imgur.com/BnxMzq9.png\" alt=\" Web 鉤子\"></p>\n<h3 id=\"添加鉤子\"><a href=\"#添加鉤子\" class=\"headerlink\" title=\"添加鉤子\"></a>添加鉤子</h3><p><img src=\"https://i.imgur.com/HcebZ16.png\" alt=\"添加鉤子\"></p>\n<h3 id=\"選-Gogs\"><a href=\"#選-Gogs\" class=\"headerlink\" title=\"選 Gogs\"></a>選 Gogs</h3><p><img src=\"https://i.imgur.com/eZUBZL0.png\" alt=\"選 Gogs\"></p>\n<h3 id=\"推送地址-amp-密鑰本文-自行定義\"><a href=\"#推送地址-amp-密鑰本文-自行定義\" class=\"headerlink\" title=\"推送地址 &amp; 密鑰本文(自行定義)\"></a>推送地址 &amp; 密鑰本文(自行定義)</h3><p><img src=\"https://i.imgur.com/HOVOc4Z.png\" alt=\"推送地址 &amp; 密鑰本文(自行定義)\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://Jenkins位置/gogs-webhook/?job=專案名稱</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Jenkins-記得安裝-Gogs-Webhook-Plugin\"><a href=\"#Jenkins-記得安裝-Gogs-Webhook-Plugin\" class=\"headerlink\" title=\"Jenkins 記得安裝  Gogs Webhook Plugin\"></a>Jenkins 記得安裝  Gogs Webhook Plugin</h3><p><img src=\"https://i.imgur.com/YFMyGCe.png\" alt=\"Jenkins\"></p>\n<h3 id=\"專案記得設定剛才的密鑰本文\"><a href=\"#專案記得設定剛才的密鑰本文\" class=\"headerlink\" title=\"專案記得設定剛才的密鑰本文\"></a>專案記得設定剛才的密鑰本文</h3><p><img src=\"https://i.imgur.com/Y5UFomw.png\" alt=\"設定\"></p>\n"},{"title":"Google Cloud Pub/Sub: Node.js Client","date":"2019-06-10T07:12:30.000Z","_content":"\n## Google Cloud Pub/Sub: Node.js Client\n\n## 1. 啟用 [API 服務](https://console.developers.google.com/apis/library/pubsub.googleapis.com?q=pub&id=e5839763-4006-424c-89ae-49057442b67a&project=green-cell-242807)\n\n![API 服務](https://i.imgur.com/qGZefyd.png)\n\n## 2. [建立服務帳戶金鑰](https://console.cloud.google.com/apis/credentials/)\n\n![建立服務帳戶金鑰](https://i.imgur.com/nyJzv1P.png)\n\n![建立服務帳戶金鑰](https://i.imgur.com/H39UREY.png)\n\n## 3. [啟用驗證](https://cloud.google.com/docs/authentication/getting-started#auth-cloud-implicit-nodejs)\n\n> 將下載的檔案放到專案中並指定路徑\n\n```bash\nexport GOOGLE_APPLICATION_CREDENTIALS=\"[PATH]\"\n```\n\n## 4. install Package\n\n```bash\nnpm install @google-cloud/pubsub\n```\n\n## 5. Create Topic\n\n```javascript\n// Imports the Google Cloud client library\nconst { PubSub } = require('@google-cloud/pubsub');\n\nasync function quickstart(\n  projectId = 'your-project-id', // Your Google Cloud Platform project ID\n  topicName = 'my-topic' // Name for the new topic to create\n) {\n  // Instantiates a client\n  const pubsub = new PubSub({ projectId });\n\n  // Creates the new topic\n  const [topic] = await pubsub.createTopic(topicName);\n  console.log(`Topic ${topic.name} created.`);\n}\nquickstart();\n```\n\n## 6. Create Subscription\n\n```javascript\nasync function createSubscription(topicName, subscriptionName) {\n  // [START pubsub_create_pull_subscription]\n  // Imports the Google Cloud client library\n  const { PubSub } = require('@google-cloud/pubsub');\n\n  // Creates a client\n  const pubsub = new PubSub();\n\n  /**\n   * TODO(developer): Uncomment the following lines to run the sample.\n   */\n  // const topicName = 'my-topic';\n  // const subscriptionName = 'my-sub';\n\n  // Creates a new subscription\n  await pubsub.topic(topicName).createSubscription(subscriptionName);\n  console.log(`Subscription ${subscriptionName} created.`);\n\n  // [END pubsub_create_pull_subscription]\n}\ncreateSubscription('my-topic', 'my-topic-Subscription');\n```\n\n## 7. Push Message\n\n```javascript\nasync function publishMessage(topicName, data) {\n  // [START pubsub_publish]\n  // [START pubsub_quickstart_publisher]\n  // Imports the Google Cloud client library\n  const { PubSub } = require('@google-cloud/pubsub');\n\n  // Creates a client\n  const pubsub = new PubSub();\n\n  /**\n   * TODO(developer): Uncomment the following lines to run the sample.\n   */\n  // const topicName = 'my-topic';\n  // const data = JSON.stringify({ foo: 'bar' });\n\n  // Publishes the message as a string, e.g. \"Hello, world!\" or JSON.stringify(someObject)\n  const dataBuffer = Buffer.from(data);\n\n  const messageId = await pubsub.topic(topicName).publish(dataBuffer);\n  console.log(`Message ${messageId} published.`);\n\n  // [END pubsub_publish]\n  // [END pubsub_quickstart_publisher]\n}\npublishMessage('my-topic', 'TestData');\n```\n\n## 8. Pull Message\n\n```javascript\nfunction listenForMessages(subscriptionName, timeout) {\n  // [START pubsub_subscriber_async_pull]\n  // [START pubsub_quickstart_subscriber]\n  // Imports the Google Cloud client library\n  const { PubSub } = require('@google-cloud/pubsub');\n\n  // Creates a client\n  const pubsub = new PubSub();\n\n  /**\n   * TODO(developer): Uncomment the following lines to run the sample.\n   */\n  // const subscriptionName = 'my-sub';\n  // const timeout = 60;\n\n  // References an existing subscription\n  const subscription = pubsub.subscription(subscriptionName);\n\n  // Create an event handler to handle messages\n  let messageCount = 0;\n  const messageHandler = message => {\n    console.log(`Received message ${message.id}:`);\n    console.log(`\\tData: ${message.data}`);\n    console.log(`\\tAttributes: ${message.attributes}`);\n    messageCount += 1;\n\n    // \"Ack\" (acknowledge receipt of) the message\n    message.ack();\n  };\n\n  // Listen for new messages until timeout is hit\n  subscription.on(`message`, messageHandler);\n\n  setTimeout(() => {\n    subscription.removeListener('message', messageHandler);\n    console.log(`${messageCount} message(s) received.`);\n  }, timeout * 1000);\n  // [END pubsub_subscriber_async_pull]\n  // [END pubsub_quickstart_subscriber]\n}\nlistenForMessages('my-topic-Subscription', 3);\n```\n\n> [範例](https://github.com/ste5022424/GcpPubSub)\n\n## Reference\n\n- [nodejs-pubsub](https://github.com/googleapis/nodejs-pubsub)\n- [將 Cloud Pub/Sub 與 Node.js 搭配使用](https://cloud.google.com/nodejs/getting-started/using-pub-sub?hl=zh-tw)\n- [Google Cloud Pub/Sub: Node.js Client](https://www.npmjs.com/package/@google-cloud/pubsub)\n","source":"_posts/Google-Cloud-Pub-Sub-Node-js-Client.md","raw":"---\ntitle: 'Google Cloud Pub/Sub: Node.js Client'\ndate: 2019-06-10 15:12:30\ncategories:\n  - GCP Pub/Sub\ntags:\n  - GCP Pub/Sub\n  - Node.js\n---\n\n## Google Cloud Pub/Sub: Node.js Client\n\n## 1. 啟用 [API 服務](https://console.developers.google.com/apis/library/pubsub.googleapis.com?q=pub&id=e5839763-4006-424c-89ae-49057442b67a&project=green-cell-242807)\n\n![API 服務](https://i.imgur.com/qGZefyd.png)\n\n## 2. [建立服務帳戶金鑰](https://console.cloud.google.com/apis/credentials/)\n\n![建立服務帳戶金鑰](https://i.imgur.com/nyJzv1P.png)\n\n![建立服務帳戶金鑰](https://i.imgur.com/H39UREY.png)\n\n## 3. [啟用驗證](https://cloud.google.com/docs/authentication/getting-started#auth-cloud-implicit-nodejs)\n\n> 將下載的檔案放到專案中並指定路徑\n\n```bash\nexport GOOGLE_APPLICATION_CREDENTIALS=\"[PATH]\"\n```\n\n## 4. install Package\n\n```bash\nnpm install @google-cloud/pubsub\n```\n\n## 5. Create Topic\n\n```javascript\n// Imports the Google Cloud client library\nconst { PubSub } = require('@google-cloud/pubsub');\n\nasync function quickstart(\n  projectId = 'your-project-id', // Your Google Cloud Platform project ID\n  topicName = 'my-topic' // Name for the new topic to create\n) {\n  // Instantiates a client\n  const pubsub = new PubSub({ projectId });\n\n  // Creates the new topic\n  const [topic] = await pubsub.createTopic(topicName);\n  console.log(`Topic ${topic.name} created.`);\n}\nquickstart();\n```\n\n## 6. Create Subscription\n\n```javascript\nasync function createSubscription(topicName, subscriptionName) {\n  // [START pubsub_create_pull_subscription]\n  // Imports the Google Cloud client library\n  const { PubSub } = require('@google-cloud/pubsub');\n\n  // Creates a client\n  const pubsub = new PubSub();\n\n  /**\n   * TODO(developer): Uncomment the following lines to run the sample.\n   */\n  // const topicName = 'my-topic';\n  // const subscriptionName = 'my-sub';\n\n  // Creates a new subscription\n  await pubsub.topic(topicName).createSubscription(subscriptionName);\n  console.log(`Subscription ${subscriptionName} created.`);\n\n  // [END pubsub_create_pull_subscription]\n}\ncreateSubscription('my-topic', 'my-topic-Subscription');\n```\n\n## 7. Push Message\n\n```javascript\nasync function publishMessage(topicName, data) {\n  // [START pubsub_publish]\n  // [START pubsub_quickstart_publisher]\n  // Imports the Google Cloud client library\n  const { PubSub } = require('@google-cloud/pubsub');\n\n  // Creates a client\n  const pubsub = new PubSub();\n\n  /**\n   * TODO(developer): Uncomment the following lines to run the sample.\n   */\n  // const topicName = 'my-topic';\n  // const data = JSON.stringify({ foo: 'bar' });\n\n  // Publishes the message as a string, e.g. \"Hello, world!\" or JSON.stringify(someObject)\n  const dataBuffer = Buffer.from(data);\n\n  const messageId = await pubsub.topic(topicName).publish(dataBuffer);\n  console.log(`Message ${messageId} published.`);\n\n  // [END pubsub_publish]\n  // [END pubsub_quickstart_publisher]\n}\npublishMessage('my-topic', 'TestData');\n```\n\n## 8. Pull Message\n\n```javascript\nfunction listenForMessages(subscriptionName, timeout) {\n  // [START pubsub_subscriber_async_pull]\n  // [START pubsub_quickstart_subscriber]\n  // Imports the Google Cloud client library\n  const { PubSub } = require('@google-cloud/pubsub');\n\n  // Creates a client\n  const pubsub = new PubSub();\n\n  /**\n   * TODO(developer): Uncomment the following lines to run the sample.\n   */\n  // const subscriptionName = 'my-sub';\n  // const timeout = 60;\n\n  // References an existing subscription\n  const subscription = pubsub.subscription(subscriptionName);\n\n  // Create an event handler to handle messages\n  let messageCount = 0;\n  const messageHandler = message => {\n    console.log(`Received message ${message.id}:`);\n    console.log(`\\tData: ${message.data}`);\n    console.log(`\\tAttributes: ${message.attributes}`);\n    messageCount += 1;\n\n    // \"Ack\" (acknowledge receipt of) the message\n    message.ack();\n  };\n\n  // Listen for new messages until timeout is hit\n  subscription.on(`message`, messageHandler);\n\n  setTimeout(() => {\n    subscription.removeListener('message', messageHandler);\n    console.log(`${messageCount} message(s) received.`);\n  }, timeout * 1000);\n  // [END pubsub_subscriber_async_pull]\n  // [END pubsub_quickstart_subscriber]\n}\nlistenForMessages('my-topic-Subscription', 3);\n```\n\n> [範例](https://github.com/ste5022424/GcpPubSub)\n\n## Reference\n\n- [nodejs-pubsub](https://github.com/googleapis/nodejs-pubsub)\n- [將 Cloud Pub/Sub 與 Node.js 搭配使用](https://cloud.google.com/nodejs/getting-started/using-pub-sub?hl=zh-tw)\n- [Google Cloud Pub/Sub: Node.js Client](https://www.npmjs.com/package/@google-cloud/pubsub)\n","slug":"Google-Cloud-Pub-Sub-Node-js-Client","published":1,"updated":"2019-06-17T10:32:50.777Z","_id":"cjx077xud001f1q22cidj6n9h","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"Google-Cloud-Pub-Sub-Node-js-Client\"><a href=\"#Google-Cloud-Pub-Sub-Node-js-Client\" class=\"headerlink\" title=\"Google Cloud Pub/Sub: Node.js Client\"></a>Google Cloud Pub/Sub: Node.js Client</h2><h2 id=\"1-啟用-API-服務\"><a href=\"#1-啟用-API-服務\" class=\"headerlink\" title=\"1. 啟用 API 服務\"></a>1. 啟用 <a href=\"https://console.developers.google.com/apis/library/pubsub.googleapis.com?q=pub&id=e5839763-4006-424c-89ae-49057442b67a&project=green-cell-242807\" target=\"_blank\" rel=\"noopener\">API 服務</a></h2><p><img src=\"https://i.imgur.com/qGZefyd.png\" alt=\"API 服務\"></p>\n<h2 id=\"2-建立服務帳戶金鑰\"><a href=\"#2-建立服務帳戶金鑰\" class=\"headerlink\" title=\"2. 建立服務帳戶金鑰\"></a>2. <a href=\"https://console.cloud.google.com/apis/credentials/\" target=\"_blank\" rel=\"noopener\">建立服務帳戶金鑰</a></h2><p><img src=\"https://i.imgur.com/nyJzv1P.png\" alt=\"建立服務帳戶金鑰\"></p>\n<p><img src=\"https://i.imgur.com/H39UREY.png\" alt=\"建立服務帳戶金鑰\"></p>\n<h2 id=\"3-啟用驗證\"><a href=\"#3-啟用驗證\" class=\"headerlink\" title=\"3. 啟用驗證\"></a>3. <a href=\"https://cloud.google.com/docs/authentication/getting-started#auth-cloud-implicit-nodejs\" target=\"_blank\" rel=\"noopener\">啟用驗證</a></h2><blockquote>\n<p>將下載的檔案放到專案中並指定路徑</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> GOOGLE_APPLICATION_CREDENTIALS=<span class=\"string\">\"[PATH]\"</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-install-Package\"><a href=\"#4-install-Package\" class=\"headerlink\" title=\"4. install Package\"></a>4. install Package</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install @google-cloud/pubsub</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-Create-Topic\"><a href=\"#5-Create-Topic\" class=\"headerlink\" title=\"5. Create Topic\"></a>5. Create Topic</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Imports the Google Cloud client library</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; PubSub &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">'@google-cloud/pubsub'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">quickstart</span>(<span class=\"params\"></span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">  projectId = <span class=\"string\">'your-project-id'</span>, <span class=\"regexp\">//</span> Your Google Cloud Platform project ID</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">  topicName = <span class=\"string\">'my-topic'</span> <span class=\"regexp\">//</span> Name for the new topic to create</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// Instantiates a client</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> pubsub = <span class=\"keyword\">new</span> PubSub(&#123; projectId &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Creates the new topic</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> [topic] = <span class=\"keyword\">await</span> pubsub.createTopic(topicName);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">`Topic <span class=\"subst\">$&#123;topic.name&#125;</span> created.`</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">quickstart();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-Create-Subscription\"><a href=\"#6-Create-Subscription\" class=\"headerlink\" title=\"6. Create Subscription\"></a>6. Create Subscription</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createSubscription</span>(<span class=\"params\">topicName, subscriptionName</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// [START pubsub_create_pull_subscription]</span></span><br><span class=\"line\">  <span class=\"comment\">// Imports the Google Cloud client library</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; PubSub &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">'@google-cloud/pubsub'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Creates a client</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> pubsub = <span class=\"keyword\">new</span> PubSub();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * TODO(developer): Uncomment the following lines to run the sample.</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"comment\">// const topicName = 'my-topic';</span></span><br><span class=\"line\">  <span class=\"comment\">// const subscriptionName = 'my-sub';</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Creates a new subscription</span></span><br><span class=\"line\">  <span class=\"keyword\">await</span> pubsub.topic(topicName).createSubscription(subscriptionName);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">`Subscription <span class=\"subst\">$&#123;subscriptionName&#125;</span> created.`</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// [END pubsub_create_pull_subscription]</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">createSubscription(<span class=\"string\">'my-topic'</span>, <span class=\"string\">'my-topic-Subscription'</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-Push-Message\"><a href=\"#7-Push-Message\" class=\"headerlink\" title=\"7. Push Message\"></a>7. Push Message</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">publishMessage</span>(<span class=\"params\">topicName, data</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// [START pubsub_publish]</span></span><br><span class=\"line\">  <span class=\"comment\">// [START pubsub_quickstart_publisher]</span></span><br><span class=\"line\">  <span class=\"comment\">// Imports the Google Cloud client library</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; PubSub &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">'@google-cloud/pubsub'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Creates a client</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> pubsub = <span class=\"keyword\">new</span> PubSub();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * TODO(developer): Uncomment the following lines to run the sample.</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"comment\">// const topicName = 'my-topic';</span></span><br><span class=\"line\">  <span class=\"comment\">// const data = JSON.stringify(&#123; foo: 'bar' &#125;);</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Publishes the message as a string, e.g. \"Hello, world!\" or JSON.stringify(someObject)</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> dataBuffer = Buffer.from(data);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> messageId = <span class=\"keyword\">await</span> pubsub.topic(topicName).publish(dataBuffer);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">`Message <span class=\"subst\">$&#123;messageId&#125;</span> published.`</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// [END pubsub_publish]</span></span><br><span class=\"line\">  <span class=\"comment\">// [END pubsub_quickstart_publisher]</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">publishMessage(<span class=\"string\">'my-topic'</span>, <span class=\"string\">'TestData'</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"8-Pull-Message\"><a href=\"#8-Pull-Message\" class=\"headerlink\" title=\"8. Pull Message\"></a>8. Pull Message</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">listenForMessages</span>(<span class=\"params\">subscriptionName, timeout</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// [START pubsub_subscriber_async_pull]</span></span><br><span class=\"line\">  <span class=\"comment\">// [START pubsub_quickstart_subscriber]</span></span><br><span class=\"line\">  <span class=\"comment\">// Imports the Google Cloud client library</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; PubSub &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">'@google-cloud/pubsub'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Creates a client</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> pubsub = <span class=\"keyword\">new</span> PubSub();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * TODO(developer): Uncomment the following lines to run the sample.</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"comment\">// const subscriptionName = 'my-sub';</span></span><br><span class=\"line\">  <span class=\"comment\">// const timeout = 60;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// References an existing subscription</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> subscription = pubsub.subscription(subscriptionName);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Create an event handler to handle messages</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> messageCount = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> messageHandler = <span class=\"function\"><span class=\"params\">message</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">`Received message <span class=\"subst\">$&#123;message.id&#125;</span>:`</span>);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">`\\tData: <span class=\"subst\">$&#123;message.data&#125;</span>`</span>);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">`\\tAttributes: <span class=\"subst\">$&#123;message.attributes&#125;</span>`</span>);</span><br><span class=\"line\">    messageCount += <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// \"Ack\" (acknowledge receipt of) the message</span></span><br><span class=\"line\">    message.ack();</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Listen for new messages until timeout is hit</span></span><br><span class=\"line\">  subscription.on(<span class=\"string\">`message`</span>, messageHandler);</span><br><span class=\"line\"></span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    subscription.removeListener(<span class=\"string\">'message'</span>, messageHandler);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">`<span class=\"subst\">$&#123;messageCount&#125;</span> message(s) received.`</span>);</span><br><span class=\"line\">  &#125;, timeout * <span class=\"number\">1000</span>);</span><br><span class=\"line\">  <span class=\"comment\">// [END pubsub_subscriber_async_pull]</span></span><br><span class=\"line\">  <span class=\"comment\">// [END pubsub_quickstart_subscriber]</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">listenForMessages(<span class=\"string\">'my-topic-Subscription'</span>, <span class=\"number\">3</span>);</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><a href=\"https://github.com/ste5022424/GcpPubSub\" target=\"_blank\" rel=\"noopener\">範例</a></p>\n</blockquote>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><ul>\n<li><a href=\"https://github.com/googleapis/nodejs-pubsub\" target=\"_blank\" rel=\"noopener\">nodejs-pubsub</a></li>\n<li><a href=\"https://cloud.google.com/nodejs/getting-started/using-pub-sub?hl=zh-tw\" target=\"_blank\" rel=\"noopener\">將 Cloud Pub/Sub 與 Node.js 搭配使用</a></li>\n<li><a href=\"https://www.npmjs.com/package/@google-cloud/pubsub\" target=\"_blank\" rel=\"noopener\">Google Cloud Pub/Sub: Node.js Client</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Google-Cloud-Pub-Sub-Node-js-Client\"><a href=\"#Google-Cloud-Pub-Sub-Node-js-Client\" class=\"headerlink\" title=\"Google Cloud Pub/Sub: Node.js Client\"></a>Google Cloud Pub/Sub: Node.js Client</h2><h2 id=\"1-啟用-API-服務\"><a href=\"#1-啟用-API-服務\" class=\"headerlink\" title=\"1. 啟用 API 服務\"></a>1. 啟用 <a href=\"https://console.developers.google.com/apis/library/pubsub.googleapis.com?q=pub&id=e5839763-4006-424c-89ae-49057442b67a&project=green-cell-242807\" target=\"_blank\" rel=\"noopener\">API 服務</a></h2><p><img src=\"https://i.imgur.com/qGZefyd.png\" alt=\"API 服務\"></p>\n<h2 id=\"2-建立服務帳戶金鑰\"><a href=\"#2-建立服務帳戶金鑰\" class=\"headerlink\" title=\"2. 建立服務帳戶金鑰\"></a>2. <a href=\"https://console.cloud.google.com/apis/credentials/\" target=\"_blank\" rel=\"noopener\">建立服務帳戶金鑰</a></h2><p><img src=\"https://i.imgur.com/nyJzv1P.png\" alt=\"建立服務帳戶金鑰\"></p>\n<p><img src=\"https://i.imgur.com/H39UREY.png\" alt=\"建立服務帳戶金鑰\"></p>\n<h2 id=\"3-啟用驗證\"><a href=\"#3-啟用驗證\" class=\"headerlink\" title=\"3. 啟用驗證\"></a>3. <a href=\"https://cloud.google.com/docs/authentication/getting-started#auth-cloud-implicit-nodejs\" target=\"_blank\" rel=\"noopener\">啟用驗證</a></h2><blockquote>\n<p>將下載的檔案放到專案中並指定路徑</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> GOOGLE_APPLICATION_CREDENTIALS=<span class=\"string\">\"[PATH]\"</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-install-Package\"><a href=\"#4-install-Package\" class=\"headerlink\" title=\"4. install Package\"></a>4. install Package</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install @google-cloud/pubsub</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-Create-Topic\"><a href=\"#5-Create-Topic\" class=\"headerlink\" title=\"5. Create Topic\"></a>5. Create Topic</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Imports the Google Cloud client library</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; PubSub &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">'@google-cloud/pubsub'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">quickstart</span>(<span class=\"params\"></span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">  projectId = <span class=\"string\">'your-project-id'</span>, <span class=\"regexp\">//</span> Your Google Cloud Platform project ID</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">  topicName = <span class=\"string\">'my-topic'</span> <span class=\"regexp\">//</span> Name for the new topic to create</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// Instantiates a client</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> pubsub = <span class=\"keyword\">new</span> PubSub(&#123; projectId &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Creates the new topic</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> [topic] = <span class=\"keyword\">await</span> pubsub.createTopic(topicName);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">`Topic <span class=\"subst\">$&#123;topic.name&#125;</span> created.`</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">quickstart();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-Create-Subscription\"><a href=\"#6-Create-Subscription\" class=\"headerlink\" title=\"6. Create Subscription\"></a>6. Create Subscription</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createSubscription</span>(<span class=\"params\">topicName, subscriptionName</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// [START pubsub_create_pull_subscription]</span></span><br><span class=\"line\">  <span class=\"comment\">// Imports the Google Cloud client library</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; PubSub &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">'@google-cloud/pubsub'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Creates a client</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> pubsub = <span class=\"keyword\">new</span> PubSub();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * TODO(developer): Uncomment the following lines to run the sample.</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"comment\">// const topicName = 'my-topic';</span></span><br><span class=\"line\">  <span class=\"comment\">// const subscriptionName = 'my-sub';</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Creates a new subscription</span></span><br><span class=\"line\">  <span class=\"keyword\">await</span> pubsub.topic(topicName).createSubscription(subscriptionName);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">`Subscription <span class=\"subst\">$&#123;subscriptionName&#125;</span> created.`</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// [END pubsub_create_pull_subscription]</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">createSubscription(<span class=\"string\">'my-topic'</span>, <span class=\"string\">'my-topic-Subscription'</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-Push-Message\"><a href=\"#7-Push-Message\" class=\"headerlink\" title=\"7. Push Message\"></a>7. Push Message</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">publishMessage</span>(<span class=\"params\">topicName, data</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// [START pubsub_publish]</span></span><br><span class=\"line\">  <span class=\"comment\">// [START pubsub_quickstart_publisher]</span></span><br><span class=\"line\">  <span class=\"comment\">// Imports the Google Cloud client library</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; PubSub &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">'@google-cloud/pubsub'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Creates a client</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> pubsub = <span class=\"keyword\">new</span> PubSub();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * TODO(developer): Uncomment the following lines to run the sample.</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"comment\">// const topicName = 'my-topic';</span></span><br><span class=\"line\">  <span class=\"comment\">// const data = JSON.stringify(&#123; foo: 'bar' &#125;);</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Publishes the message as a string, e.g. \"Hello, world!\" or JSON.stringify(someObject)</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> dataBuffer = Buffer.from(data);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> messageId = <span class=\"keyword\">await</span> pubsub.topic(topicName).publish(dataBuffer);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">`Message <span class=\"subst\">$&#123;messageId&#125;</span> published.`</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// [END pubsub_publish]</span></span><br><span class=\"line\">  <span class=\"comment\">// [END pubsub_quickstart_publisher]</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">publishMessage(<span class=\"string\">'my-topic'</span>, <span class=\"string\">'TestData'</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"8-Pull-Message\"><a href=\"#8-Pull-Message\" class=\"headerlink\" title=\"8. Pull Message\"></a>8. Pull Message</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">listenForMessages</span>(<span class=\"params\">subscriptionName, timeout</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// [START pubsub_subscriber_async_pull]</span></span><br><span class=\"line\">  <span class=\"comment\">// [START pubsub_quickstart_subscriber]</span></span><br><span class=\"line\">  <span class=\"comment\">// Imports the Google Cloud client library</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; PubSub &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">'@google-cloud/pubsub'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Creates a client</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> pubsub = <span class=\"keyword\">new</span> PubSub();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * TODO(developer): Uncomment the following lines to run the sample.</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"comment\">// const subscriptionName = 'my-sub';</span></span><br><span class=\"line\">  <span class=\"comment\">// const timeout = 60;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// References an existing subscription</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> subscription = pubsub.subscription(subscriptionName);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Create an event handler to handle messages</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> messageCount = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> messageHandler = <span class=\"function\"><span class=\"params\">message</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">`Received message <span class=\"subst\">$&#123;message.id&#125;</span>:`</span>);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">`\\tData: <span class=\"subst\">$&#123;message.data&#125;</span>`</span>);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">`\\tAttributes: <span class=\"subst\">$&#123;message.attributes&#125;</span>`</span>);</span><br><span class=\"line\">    messageCount += <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// \"Ack\" (acknowledge receipt of) the message</span></span><br><span class=\"line\">    message.ack();</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Listen for new messages until timeout is hit</span></span><br><span class=\"line\">  subscription.on(<span class=\"string\">`message`</span>, messageHandler);</span><br><span class=\"line\"></span><br><span class=\"line\">  setTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">    subscription.removeListener(<span class=\"string\">'message'</span>, messageHandler);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">`<span class=\"subst\">$&#123;messageCount&#125;</span> message(s) received.`</span>);</span><br><span class=\"line\">  &#125;, timeout * <span class=\"number\">1000</span>);</span><br><span class=\"line\">  <span class=\"comment\">// [END pubsub_subscriber_async_pull]</span></span><br><span class=\"line\">  <span class=\"comment\">// [END pubsub_quickstart_subscriber]</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">listenForMessages(<span class=\"string\">'my-topic-Subscription'</span>, <span class=\"number\">3</span>);</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><a href=\"https://github.com/ste5022424/GcpPubSub\" target=\"_blank\" rel=\"noopener\">範例</a></p>\n</blockquote>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><ul>\n<li><a href=\"https://github.com/googleapis/nodejs-pubsub\" target=\"_blank\" rel=\"noopener\">nodejs-pubsub</a></li>\n<li><a href=\"https://cloud.google.com/nodejs/getting-started/using-pub-sub?hl=zh-tw\" target=\"_blank\" rel=\"noopener\">將 Cloud Pub/Sub 與 Node.js 搭配使用</a></li>\n<li><a href=\"https://www.npmjs.com/package/@google-cloud/pubsub\" target=\"_blank\" rel=\"noopener\">Google Cloud Pub/Sub: Node.js Client</a></li>\n</ul>\n"},{"title":"Google Cloud Pub/Sub: Qwik Start - Command Line","date":"2019-06-10T07:31:21.000Z","_content":"\n## Google Cloud Pub/Sub: Qwik Start - Command Line\n\n### Set Project ID 設定 Project ID\n\n```bash\ngcloud config set project qwiklabs-gcp-5c43d7b7f27776fe\n```\n\n## Topics\n\n### Create Pub/Sub Topics 建立主題\n\n```bash\ngcloud pubsub topics create myTopic\ngcloud pubsub topics create Test1\ngcloud pubsub topics create Test2\n```\n\n### Delete Topics 刪除主題\n\n```bash=\ngcloud pubsub topics delete Test1\n```\n\n## Subscriptions\n\n### Create Subscriptions 建立訂閱\n\n```bash\ngcloud pubsub subscriptions create --topic myTopic mySubscription\n```\n\n### Delete Subscription 刪除主題\n\n```bash\ngcloud pubsub subscriptions delete mySubscription\n```\n\n### Autoack\n\n```bash\ngcloud pubsub subscriptions pull mySubscription --auto-ack\n```\n\n## Publish\n\n### Publish message 加入 Message 至 Topic\n\n```bash\ngcloud pubsub topics publish myTopic --message \"Hello\"\n```\n\n## Pull\n\n### Pull Message\n\n```bash=\ngcloud pubsub subscriptions pull mySubscription --auto-ack --limit=3\n```\n\n> --limit=3 取得前三個\n\n## Reference\n\n* [Google Cloud Pub/Sub: Qwik Start - Command Line](https://google.qwiklabs.com/focuses/925?catalog_rank=%7B%22rank%22%3A5%2C%22num_filters%22%3A0%2C%22has_search%22%3Atrue%7D&parent=catalog&search_id=2711958)\n* [將 Cloud Pub/Sub 與 Node.js 搭配使用](https://cloud.google.com/nodejs/getting-started/using-pub-sub?hl=zh-tw)\n* [nodejs-pubsub](https://github.com/googleapis/nodejs-pubsub)\n","source":"_posts/Google-Cloud-Pub-Sub-Qwik-Start-Command-Line.md","raw":"---\ntitle: 'Google Cloud Pub/Sub: Qwik Start - Command Line'\ndate: 2019-06-10 15:31:21\ncategories:\n- GCP Pub/Sub\ntags:\n- GCP Pub/Sub\n---\n\n## Google Cloud Pub/Sub: Qwik Start - Command Line\n\n### Set Project ID 設定 Project ID\n\n```bash\ngcloud config set project qwiklabs-gcp-5c43d7b7f27776fe\n```\n\n## Topics\n\n### Create Pub/Sub Topics 建立主題\n\n```bash\ngcloud pubsub topics create myTopic\ngcloud pubsub topics create Test1\ngcloud pubsub topics create Test2\n```\n\n### Delete Topics 刪除主題\n\n```bash=\ngcloud pubsub topics delete Test1\n```\n\n## Subscriptions\n\n### Create Subscriptions 建立訂閱\n\n```bash\ngcloud pubsub subscriptions create --topic myTopic mySubscription\n```\n\n### Delete Subscription 刪除主題\n\n```bash\ngcloud pubsub subscriptions delete mySubscription\n```\n\n### Autoack\n\n```bash\ngcloud pubsub subscriptions pull mySubscription --auto-ack\n```\n\n## Publish\n\n### Publish message 加入 Message 至 Topic\n\n```bash\ngcloud pubsub topics publish myTopic --message \"Hello\"\n```\n\n## Pull\n\n### Pull Message\n\n```bash=\ngcloud pubsub subscriptions pull mySubscription --auto-ack --limit=3\n```\n\n> --limit=3 取得前三個\n\n## Reference\n\n* [Google Cloud Pub/Sub: Qwik Start - Command Line](https://google.qwiklabs.com/focuses/925?catalog_rank=%7B%22rank%22%3A5%2C%22num_filters%22%3A0%2C%22has_search%22%3Atrue%7D&parent=catalog&search_id=2711958)\n* [將 Cloud Pub/Sub 與 Node.js 搭配使用](https://cloud.google.com/nodejs/getting-started/using-pub-sub?hl=zh-tw)\n* [nodejs-pubsub](https://github.com/googleapis/nodejs-pubsub)\n","slug":"Google-Cloud-Pub-Sub-Qwik-Start-Command-Line","published":1,"updated":"2019-06-10T07:34:40.246Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xue001h1q227a6icgkc","content":"<h2 id=\"Google-Cloud-Pub-Sub-Qwik-Start-Command-Line\"><a href=\"#Google-Cloud-Pub-Sub-Qwik-Start-Command-Line\" class=\"headerlink\" title=\"Google Cloud Pub/Sub: Qwik Start - Command Line\"></a>Google Cloud Pub/Sub: Qwik Start - Command Line</h2><h3 id=\"Set-Project-ID-設定-Project-ID\"><a href=\"#Set-Project-ID-設定-Project-ID\" class=\"headerlink\" title=\"Set Project ID 設定 Project ID\"></a>Set Project ID 設定 Project ID</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gcloud config <span class=\"built_in\">set</span> project qwiklabs-gcp-5c43d7b7f27776fe</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Topics\"><a href=\"#Topics\" class=\"headerlink\" title=\"Topics\"></a>Topics</h2><h3 id=\"Create-Pub-Sub-Topics-建立主題\"><a href=\"#Create-Pub-Sub-Topics-建立主題\" class=\"headerlink\" title=\"Create Pub/Sub Topics 建立主題\"></a>Create Pub/Sub Topics 建立主題</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gcloud pubsub topics create myTopic</span><br><span class=\"line\">gcloud pubsub topics create Test1</span><br><span class=\"line\">gcloud pubsub topics create Test2</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Delete-Topics-刪除主題\"><a href=\"#Delete-Topics-刪除主題\" class=\"headerlink\" title=\"Delete Topics 刪除主題\"></a>Delete Topics 刪除主題</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gcloud pubsub topics delete Test1</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Subscriptions\"><a href=\"#Subscriptions\" class=\"headerlink\" title=\"Subscriptions\"></a>Subscriptions</h2><h3 id=\"Create-Subscriptions-建立訂閱\"><a href=\"#Create-Subscriptions-建立訂閱\" class=\"headerlink\" title=\"Create Subscriptions 建立訂閱\"></a>Create Subscriptions 建立訂閱</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gcloud pubsub subscriptions create --topic myTopic mySubscription</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Delete-Subscription-刪除主題\"><a href=\"#Delete-Subscription-刪除主題\" class=\"headerlink\" title=\"Delete Subscription 刪除主題\"></a>Delete Subscription 刪除主題</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gcloud pubsub subscriptions delete mySubscription</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Autoack\"><a href=\"#Autoack\" class=\"headerlink\" title=\"Autoack\"></a>Autoack</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gcloud pubsub subscriptions pull mySubscription --auto-ack</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Publish\"><a href=\"#Publish\" class=\"headerlink\" title=\"Publish\"></a>Publish</h2><h3 id=\"Publish-message-加入-Message-至-Topic\"><a href=\"#Publish-message-加入-Message-至-Topic\" class=\"headerlink\" title=\"Publish message 加入 Message 至 Topic\"></a>Publish message 加入 Message 至 Topic</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gcloud pubsub topics publish myTopic --message <span class=\"string\">\"Hello\"</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Pull\"><a href=\"#Pull\" class=\"headerlink\" title=\"Pull\"></a>Pull</h2><h3 id=\"Pull-Message\"><a href=\"#Pull-Message\" class=\"headerlink\" title=\"Pull Message\"></a>Pull Message</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gcloud pubsub subscriptions pull mySubscription --auto-ack --<span class=\"built_in\">limit</span>=3</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>–limit=3 取得前三個</p>\n</blockquote>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><ul>\n<li><a href=\"https://google.qwiklabs.com/focuses/925?catalog_rank=%7B%22rank%22%3A5%2C%22num_filters%22%3A0%2C%22has_search%22%3Atrue%7D&parent=catalog&search_id=2711958\" target=\"_blank\" rel=\"noopener\">Google Cloud Pub/Sub: Qwik Start - Command Line</a></li>\n<li><a href=\"https://cloud.google.com/nodejs/getting-started/using-pub-sub?hl=zh-tw\" target=\"_blank\" rel=\"noopener\">將 Cloud Pub/Sub 與 Node.js 搭配使用</a></li>\n<li><a href=\"https://github.com/googleapis/nodejs-pubsub\" target=\"_blank\" rel=\"noopener\">nodejs-pubsub</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Google-Cloud-Pub-Sub-Qwik-Start-Command-Line\"><a href=\"#Google-Cloud-Pub-Sub-Qwik-Start-Command-Line\" class=\"headerlink\" title=\"Google Cloud Pub/Sub: Qwik Start - Command Line\"></a>Google Cloud Pub/Sub: Qwik Start - Command Line</h2><h3 id=\"Set-Project-ID-設定-Project-ID\"><a href=\"#Set-Project-ID-設定-Project-ID\" class=\"headerlink\" title=\"Set Project ID 設定 Project ID\"></a>Set Project ID 設定 Project ID</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gcloud config <span class=\"built_in\">set</span> project qwiklabs-gcp-5c43d7b7f27776fe</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Topics\"><a href=\"#Topics\" class=\"headerlink\" title=\"Topics\"></a>Topics</h2><h3 id=\"Create-Pub-Sub-Topics-建立主題\"><a href=\"#Create-Pub-Sub-Topics-建立主題\" class=\"headerlink\" title=\"Create Pub/Sub Topics 建立主題\"></a>Create Pub/Sub Topics 建立主題</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gcloud pubsub topics create myTopic</span><br><span class=\"line\">gcloud pubsub topics create Test1</span><br><span class=\"line\">gcloud pubsub topics create Test2</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Delete-Topics-刪除主題\"><a href=\"#Delete-Topics-刪除主題\" class=\"headerlink\" title=\"Delete Topics 刪除主題\"></a>Delete Topics 刪除主題</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gcloud pubsub topics delete Test1</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Subscriptions\"><a href=\"#Subscriptions\" class=\"headerlink\" title=\"Subscriptions\"></a>Subscriptions</h2><h3 id=\"Create-Subscriptions-建立訂閱\"><a href=\"#Create-Subscriptions-建立訂閱\" class=\"headerlink\" title=\"Create Subscriptions 建立訂閱\"></a>Create Subscriptions 建立訂閱</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gcloud pubsub subscriptions create --topic myTopic mySubscription</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Delete-Subscription-刪除主題\"><a href=\"#Delete-Subscription-刪除主題\" class=\"headerlink\" title=\"Delete Subscription 刪除主題\"></a>Delete Subscription 刪除主題</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gcloud pubsub subscriptions delete mySubscription</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Autoack\"><a href=\"#Autoack\" class=\"headerlink\" title=\"Autoack\"></a>Autoack</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gcloud pubsub subscriptions pull mySubscription --auto-ack</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Publish\"><a href=\"#Publish\" class=\"headerlink\" title=\"Publish\"></a>Publish</h2><h3 id=\"Publish-message-加入-Message-至-Topic\"><a href=\"#Publish-message-加入-Message-至-Topic\" class=\"headerlink\" title=\"Publish message 加入 Message 至 Topic\"></a>Publish message 加入 Message 至 Topic</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gcloud pubsub topics publish myTopic --message <span class=\"string\">\"Hello\"</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Pull\"><a href=\"#Pull\" class=\"headerlink\" title=\"Pull\"></a>Pull</h2><h3 id=\"Pull-Message\"><a href=\"#Pull-Message\" class=\"headerlink\" title=\"Pull Message\"></a>Pull Message</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gcloud pubsub subscriptions pull mySubscription --auto-ack --<span class=\"built_in\">limit</span>=3</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>–limit=3 取得前三個</p>\n</blockquote>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><ul>\n<li><a href=\"https://google.qwiklabs.com/focuses/925?catalog_rank=%7B%22rank%22%3A5%2C%22num_filters%22%3A0%2C%22has_search%22%3Atrue%7D&parent=catalog&search_id=2711958\" target=\"_blank\" rel=\"noopener\">Google Cloud Pub/Sub: Qwik Start - Command Line</a></li>\n<li><a href=\"https://cloud.google.com/nodejs/getting-started/using-pub-sub?hl=zh-tw\" target=\"_blank\" rel=\"noopener\">將 Cloud Pub/Sub 與 Node.js 搭配使用</a></li>\n<li><a href=\"https://github.com/googleapis/nodejs-pubsub\" target=\"_blank\" rel=\"noopener\">nodejs-pubsub</a></li>\n</ul>\n"},{"title":"Google OAuth","date":"2019-06-05T08:06:18.000Z","_content":"\n## Google OAuth\n\n### 1. 建立一組 [Goole APIS Clinet ID](https://console.developers.google.com)\n\n#### 1.1 憑證 > 建立憑證\n\n![建立憑證](./2019-06-05-16-41-51.png)\n\n#### 1.2 OAuth 用戶端 ID\n\n![用戶端 ID](./2019-06-05-16-43-42.png)\n\n#### 1.3 設定 來源網址 ＆ 重新導向 URL\n\n![重新導向 URL](./2019-06-05-16-53-17.png)\n\n> 因為 Goole 會驗證來源網址，所以網址必須是要公開的，為了方便測試這邊使用 [Surge](https://ste5022424.github.io/2018/11/02/surge/)建立一個對外的 Domain\n\n#### 1.4 建立新增成功，取得用戶端 ID，\n\n![取得用戶端](./2019-06-05-16-58-18.png)\n\n### 2. 新增一個 index.html，貼上官方的範例，並將 ID 貼到範例提供的 meta 上面\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" />\n    <script src=\"https://apis.google.com/js/platform.js\" async defer></script>\n    <meta\n      name=\"google-signin-client_id\"\n      content=\"YourClinetID.apps.googleusercontent.com\"\n    />\n    <title>Document</title>\n  </head>\n\n  <body>\n    <div\n      id=\"login\"\n      class=\"g-signin2\"\n      data-onsuccess=\"onSignIn\"\n      data-theme=\"dark\"\n    ></div>\n    <p id=\"ID\"></p>\n    <p id=\"Full\"></p>\n    <p id=\"Given\"></p>\n    <p id=\"Family\"></p>\n    <img id=\"Image\" />\n    <p id=\"Email\"></p>\n    <a id=\"logout\" href=\"#\" onclick=\"signOut()\">Logout</a>\n  </body>\n\n  <script>\n    document.getElementById('logout').style.display = 'none';\n    function onSignIn(googleUser) {\n      document.getElementById('login').style.display = 'none';\n      document.getElementById('logout').style.display = 'inline';\n      // Useful data for your client-side scripts:\n      var profile = googleUser.getBasicProfile();\n      document.getElementById('ID').innerHTML = 'ID:' + profile.getId();\n      document.getElementById('Full').innerHTML = 'Full:' + profile.getEmail();\n      document.getElementById('Given').innerHTML =\n        'Given:' + profile.getGivenName();\n      document.getElementById('Family').innerHTML =\n        'Family:' + profile.getFamilyName();\n      document.getElementById('Image').src = profile.getImageUrl();\n      document.getElementById('Email').innerHTML =\n        'Email:' + profile.getEmail();\n\n      var id_token = googleUser.getAuthResponse().id_token;\n      console.log('ID Token: ' + id_token);\n    }\n\n    function signOut() {\n      var auth2 = gapi.auth2.getAuthInstance();\n      auth2.signOut().then(function() {\n        console.log('User signed out.');\n        location.reload();\n      });\n    }\n  </script>\n</html>\n\n```\n\n#### 2.1 [http://myoauth.surge.sh/](http://myoauth.surge.sh/#)\n\n![page](./2019-06-05-17-04-27.png)\n\n![login](./2019-06-05-17-08-51.png)\n\n![data](./2019-06-05-17-10-13.png)\n\n## 參考\n\n- [ntegrating Google Sign-In into your web app](https://developers.google.com/identity/sign-in/web/sign-in)\n- [Authenticate with a backend server](https://developers.google.com/identity/sign-in/web/backend-auth)\n","source":"_posts/Google-OAuth.md","raw":"---\ntitle: Google OAuth\ndate: 2019-06-05 16:06:18\ncategories:\n  - Google OAuth\ntags:\n  - Google OAuth\n---\n\n## Google OAuth\n\n### 1. 建立一組 [Goole APIS Clinet ID](https://console.developers.google.com)\n\n#### 1.1 憑證 > 建立憑證\n\n![建立憑證](./2019-06-05-16-41-51.png)\n\n#### 1.2 OAuth 用戶端 ID\n\n![用戶端 ID](./2019-06-05-16-43-42.png)\n\n#### 1.3 設定 來源網址 ＆ 重新導向 URL\n\n![重新導向 URL](./2019-06-05-16-53-17.png)\n\n> 因為 Goole 會驗證來源網址，所以網址必須是要公開的，為了方便測試這邊使用 [Surge](https://ste5022424.github.io/2018/11/02/surge/)建立一個對外的 Domain\n\n#### 1.4 建立新增成功，取得用戶端 ID，\n\n![取得用戶端](./2019-06-05-16-58-18.png)\n\n### 2. 新增一個 index.html，貼上官方的範例，並將 ID 貼到範例提供的 meta 上面\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\" />\n    <script src=\"https://apis.google.com/js/platform.js\" async defer></script>\n    <meta\n      name=\"google-signin-client_id\"\n      content=\"YourClinetID.apps.googleusercontent.com\"\n    />\n    <title>Document</title>\n  </head>\n\n  <body>\n    <div\n      id=\"login\"\n      class=\"g-signin2\"\n      data-onsuccess=\"onSignIn\"\n      data-theme=\"dark\"\n    ></div>\n    <p id=\"ID\"></p>\n    <p id=\"Full\"></p>\n    <p id=\"Given\"></p>\n    <p id=\"Family\"></p>\n    <img id=\"Image\" />\n    <p id=\"Email\"></p>\n    <a id=\"logout\" href=\"#\" onclick=\"signOut()\">Logout</a>\n  </body>\n\n  <script>\n    document.getElementById('logout').style.display = 'none';\n    function onSignIn(googleUser) {\n      document.getElementById('login').style.display = 'none';\n      document.getElementById('logout').style.display = 'inline';\n      // Useful data for your client-side scripts:\n      var profile = googleUser.getBasicProfile();\n      document.getElementById('ID').innerHTML = 'ID:' + profile.getId();\n      document.getElementById('Full').innerHTML = 'Full:' + profile.getEmail();\n      document.getElementById('Given').innerHTML =\n        'Given:' + profile.getGivenName();\n      document.getElementById('Family').innerHTML =\n        'Family:' + profile.getFamilyName();\n      document.getElementById('Image').src = profile.getImageUrl();\n      document.getElementById('Email').innerHTML =\n        'Email:' + profile.getEmail();\n\n      var id_token = googleUser.getAuthResponse().id_token;\n      console.log('ID Token: ' + id_token);\n    }\n\n    function signOut() {\n      var auth2 = gapi.auth2.getAuthInstance();\n      auth2.signOut().then(function() {\n        console.log('User signed out.');\n        location.reload();\n      });\n    }\n  </script>\n</html>\n\n```\n\n#### 2.1 [http://myoauth.surge.sh/](http://myoauth.surge.sh/#)\n\n![page](./2019-06-05-17-04-27.png)\n\n![login](./2019-06-05-17-08-51.png)\n\n![data](./2019-06-05-17-10-13.png)\n\n## 參考\n\n- [ntegrating Google Sign-In into your web app](https://developers.google.com/identity/sign-in/web/sign-in)\n- [Authenticate with a backend server](https://developers.google.com/identity/sign-in/web/backend-auth)\n","slug":"Google-OAuth","published":1,"updated":"2019-06-06T08:00:52.176Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xuf001m1q229e38f0nf","content":"<h2 id=\"Google-OAuth\"><a href=\"#Google-OAuth\" class=\"headerlink\" title=\"Google OAuth\"></a>Google OAuth</h2><h3 id=\"1-建立一組-Goole-APIS-Clinet-ID\"><a href=\"#1-建立一組-Goole-APIS-Clinet-ID\" class=\"headerlink\" title=\"1. 建立一組 Goole APIS Clinet ID\"></a>1. 建立一組 <a href=\"https://console.developers.google.com\" target=\"_blank\" rel=\"noopener\">Goole APIS Clinet ID</a></h3><h4 id=\"1-1-憑證-gt-建立憑證\"><a href=\"#1-1-憑證-gt-建立憑證\" class=\"headerlink\" title=\"1.1 憑證 &gt; 建立憑證\"></a>1.1 憑證 &gt; 建立憑證</h4><p><img src=\"./2019-06-05-16-41-51.png\" alt=\"建立憑證\"></p>\n<h4 id=\"1-2-OAuth-用戶端-ID\"><a href=\"#1-2-OAuth-用戶端-ID\" class=\"headerlink\" title=\"1.2 OAuth 用戶端 ID\"></a>1.2 OAuth 用戶端 ID</h4><p><img src=\"./2019-06-05-16-43-42.png\" alt=\"用戶端 ID\"></p>\n<h4 id=\"1-3-設定-來源網址-＆-重新導向-URL\"><a href=\"#1-3-設定-來源網址-＆-重新導向-URL\" class=\"headerlink\" title=\"1.3 設定 來源網址 ＆ 重新導向 URL\"></a>1.3 設定 來源網址 ＆ 重新導向 URL</h4><p><img src=\"./2019-06-05-16-53-17.png\" alt=\"重新導向 URL\"></p>\n<blockquote>\n<p>因為 Goole 會驗證來源網址，所以網址必須是要公開的，為了方便測試這邊使用 <a href=\"https://ste5022424.github.io/2018/11/02/surge/\">Surge</a>建立一個對外的 Domain</p>\n</blockquote>\n<h4 id=\"1-4-建立新增成功，取得用戶端-ID，\"><a href=\"#1-4-建立新增成功，取得用戶端-ID，\" class=\"headerlink\" title=\"1.4 建立新增成功，取得用戶端 ID，\"></a>1.4 建立新增成功，取得用戶端 ID，</h4><p><img src=\"./2019-06-05-16-58-18.png\" alt=\"取得用戶端\"></p>\n<h3 id=\"2-新增一個-index-html，貼上官方的範例，並將-ID-貼到範例提供的-meta-上面\"><a href=\"#2-新增一個-index-html，貼上官方的範例，並將-ID-貼到範例提供的-meta-上面\" class=\"headerlink\" title=\"2. 新增一個 index.html，貼上官方的範例，並將 ID 貼到範例提供的 meta 上面\"></a>2. 新增一個 index.html，貼上官方的範例，並將 ID 貼到範例提供的 meta 上面</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://apis.google.com/js/platform.js\"</span> <span class=\"attr\">async</span> <span class=\"attr\">defer</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">name</span>=<span class=\"string\">\"google-signin-client_id\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">content</span>=<span class=\"string\">\"YourClinetID.apps.googleusercontent.com\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">id</span>=<span class=\"string\">\"login\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">class</span>=<span class=\"string\">\"g-signin2\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">data-onsuccess</span>=<span class=\"string\">\"onSignIn\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">data-theme</span>=<span class=\"string\">\"dark\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">id</span>=<span class=\"string\">\"ID\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Full\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Given\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Family\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Image\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Email\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logout\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"signOut()\"</span>&gt;</span>Logout<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'logout'</span>).style.display = <span class=\"string\">'none'</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">onSignIn</span>(<span class=\"params\">googleUser</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'login'</span>).style.display = <span class=\"string\">'none'</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'logout'</span>).style.display = <span class=\"string\">'inline'</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">// Useful data for your client-side scripts:</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">var</span> profile = googleUser.getBasicProfile();</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'ID'</span>).innerHTML = <span class=\"string\">'ID:'</span> + profile.getId();</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'Full'</span>).innerHTML = <span class=\"string\">'Full:'</span> + profile.getEmail();</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'Given'</span>).innerHTML =</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"string\">'Given:'</span> + profile.getGivenName();</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'Family'</span>).innerHTML =</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"string\">'Family:'</span> + profile.getFamilyName();</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'Image'</span>).src = profile.getImageUrl();</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'Email'</span>).innerHTML =</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"string\">'Email:'</span> + profile.getEmail();</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">var</span> id_token = googleUser.getAuthResponse().id_token;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'ID Token: '</span> + id_token);</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">signOut</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">var</span> auth2 = gapi.auth2.getAuthInstance();</span></span><br><span class=\"line\"><span class=\"javascript\">      auth2.signOut().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'User signed out.'</span>);</span></span><br><span class=\"line\">        location.reload();</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-1-http-myoauth-surge-sh\"><a href=\"#2-1-http-myoauth-surge-sh\" class=\"headerlink\" title=\"2.1 http://myoauth.surge.sh/\"></a>2.1 <a href=\"http://myoauth.surge.sh/#\" target=\"_blank\" rel=\"noopener\">http://myoauth.surge.sh/</a></h4><p><img src=\"./2019-06-05-17-04-27.png\" alt=\"page\"></p>\n<p><img src=\"./2019-06-05-17-08-51.png\" alt=\"login\"></p>\n<p><img src=\"./2019-06-05-17-10-13.png\" alt=\"data\"></p>\n<h2 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h2><ul>\n<li><a href=\"https://developers.google.com/identity/sign-in/web/sign-in\" target=\"_blank\" rel=\"noopener\">ntegrating Google Sign-In into your web app</a></li>\n<li><a href=\"https://developers.google.com/identity/sign-in/web/backend-auth\" target=\"_blank\" rel=\"noopener\">Authenticate with a backend server</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Google-OAuth\"><a href=\"#Google-OAuth\" class=\"headerlink\" title=\"Google OAuth\"></a>Google OAuth</h2><h3 id=\"1-建立一組-Goole-APIS-Clinet-ID\"><a href=\"#1-建立一組-Goole-APIS-Clinet-ID\" class=\"headerlink\" title=\"1. 建立一組 Goole APIS Clinet ID\"></a>1. 建立一組 <a href=\"https://console.developers.google.com\" target=\"_blank\" rel=\"noopener\">Goole APIS Clinet ID</a></h3><h4 id=\"1-1-憑證-gt-建立憑證\"><a href=\"#1-1-憑證-gt-建立憑證\" class=\"headerlink\" title=\"1.1 憑證 &gt; 建立憑證\"></a>1.1 憑證 &gt; 建立憑證</h4><p><img src=\"./2019-06-05-16-41-51.png\" alt=\"建立憑證\"></p>\n<h4 id=\"1-2-OAuth-用戶端-ID\"><a href=\"#1-2-OAuth-用戶端-ID\" class=\"headerlink\" title=\"1.2 OAuth 用戶端 ID\"></a>1.2 OAuth 用戶端 ID</h4><p><img src=\"./2019-06-05-16-43-42.png\" alt=\"用戶端 ID\"></p>\n<h4 id=\"1-3-設定-來源網址-＆-重新導向-URL\"><a href=\"#1-3-設定-來源網址-＆-重新導向-URL\" class=\"headerlink\" title=\"1.3 設定 來源網址 ＆ 重新導向 URL\"></a>1.3 設定 來源網址 ＆ 重新導向 URL</h4><p><img src=\"./2019-06-05-16-53-17.png\" alt=\"重新導向 URL\"></p>\n<blockquote>\n<p>因為 Goole 會驗證來源網址，所以網址必須是要公開的，為了方便測試這邊使用 <a href=\"https://ste5022424.github.io/2018/11/02/surge/\">Surge</a>建立一個對外的 Domain</p>\n</blockquote>\n<h4 id=\"1-4-建立新增成功，取得用戶端-ID，\"><a href=\"#1-4-建立新增成功，取得用戶端-ID，\" class=\"headerlink\" title=\"1.4 建立新增成功，取得用戶端 ID，\"></a>1.4 建立新增成功，取得用戶端 ID，</h4><p><img src=\"./2019-06-05-16-58-18.png\" alt=\"取得用戶端\"></p>\n<h3 id=\"2-新增一個-index-html，貼上官方的範例，並將-ID-貼到範例提供的-meta-上面\"><a href=\"#2-新增一個-index-html，貼上官方的範例，並將-ID-貼到範例提供的-meta-上面\" class=\"headerlink\" title=\"2. 新增一個 index.html，貼上官方的範例，並將 ID 貼到範例提供的 meta 上面\"></a>2. 新增一個 index.html，貼上官方的範例，並將 ID 貼到範例提供的 meta 上面</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://apis.google.com/js/platform.js\"</span> <span class=\"attr\">async</span> <span class=\"attr\">defer</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">name</span>=<span class=\"string\">\"google-signin-client_id\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">content</span>=<span class=\"string\">\"YourClinetID.apps.googleusercontent.com\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">id</span>=<span class=\"string\">\"login\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">class</span>=<span class=\"string\">\"g-signin2\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">data-onsuccess</span>=<span class=\"string\">\"onSignIn\"</span></span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">data-theme</span>=<span class=\"string\">\"dark\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">id</span>=<span class=\"string\">\"ID\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Full\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Given\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Family\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Image\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">id</span>=<span class=\"string\">\"Email\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">id</span>=<span class=\"string\">\"logout\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"signOut()\"</span>&gt;</span>Logout<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'logout'</span>).style.display = <span class=\"string\">'none'</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">onSignIn</span>(<span class=\"params\">googleUser</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'login'</span>).style.display = <span class=\"string\">'none'</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'logout'</span>).style.display = <span class=\"string\">'inline'</span>;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"comment\">// Useful data for your client-side scripts:</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">var</span> profile = googleUser.getBasicProfile();</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'ID'</span>).innerHTML = <span class=\"string\">'ID:'</span> + profile.getId();</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'Full'</span>).innerHTML = <span class=\"string\">'Full:'</span> + profile.getEmail();</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'Given'</span>).innerHTML =</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"string\">'Given:'</span> + profile.getGivenName();</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'Family'</span>).innerHTML =</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"string\">'Family:'</span> + profile.getFamilyName();</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'Image'</span>).src = profile.getImageUrl();</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'Email'</span>).innerHTML =</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"string\">'Email:'</span> + profile.getEmail();</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">var</span> id_token = googleUser.getAuthResponse().id_token;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">console</span>.log(<span class=\"string\">'ID Token: '</span> + id_token);</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">signOut</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">var</span> auth2 = gapi.auth2.getAuthInstance();</span></span><br><span class=\"line\"><span class=\"javascript\">      auth2.signOut().then(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'User signed out.'</span>);</span></span><br><span class=\"line\">        location.reload();</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-1-http-myoauth-surge-sh\"><a href=\"#2-1-http-myoauth-surge-sh\" class=\"headerlink\" title=\"2.1 http://myoauth.surge.sh/\"></a>2.1 <a href=\"http://myoauth.surge.sh/#\" target=\"_blank\" rel=\"noopener\">http://myoauth.surge.sh/</a></h4><p><img src=\"./2019-06-05-17-04-27.png\" alt=\"page\"></p>\n<p><img src=\"./2019-06-05-17-08-51.png\" alt=\"login\"></p>\n<p><img src=\"./2019-06-05-17-10-13.png\" alt=\"data\"></p>\n<h2 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h2><ul>\n<li><a href=\"https://developers.google.com/identity/sign-in/web/sign-in\" target=\"_blank\" rel=\"noopener\">ntegrating Google Sign-In into your web app</a></li>\n<li><a href=\"https://developers.google.com/identity/sign-in/web/backend-auth\" target=\"_blank\" rel=\"noopener\">Authenticate with a backend server</a></li>\n</ul>\n"},{"title":"Grafana 監控","date":"2019-02-25T03:50:40.000Z","_content":"\n# Grafana 監控\n\n## [influxdb](https://hub.docker.com/_/influxdb/)\n\n### 1. Docker Run\n\n```bash\ndocker run -d -p 8083:8083 -p 8086:8086 -e INFLUXDB_ADMIN_ENABLED=true --name influxdb --restart=always -v influxdb:/var/lib/influxdb influxdb:1.1\n```\n\n![docker run](https://i.imgur.com/0oLjQzH.png)\n\n### 2. 進入 influxdb (http://YourHost:8083)\n\n![進入 influxdb](https://i.imgur.com/CkP0t3G.png)\n\n### 3. 建立一個  grafana 資料庫\n\n```bash\nCREATE DATABASE \"grafana\"\n```\n\n![建立一個  grafana 資料庫](https://i.imgur.com/yCIRXMp.png)\n\n### 4. 檢查是否建立成功\n\n```bash\nSHOW DATABASES\n```\n\n![檢查是否建立成功](https://i.imgur.com/nN52eAs.png)\n\n## [grafana](https://hub.docker.com/r/grafana/grafana/)\n\n### 1. Docker run\n\n```bash\ndocker run -d -p 3000:3000 --link influxdb:influxdb --restart=always --name grafana grafana/grafana:4.6.2\n```\n\n![Docker run ](https://i.imgur.com/J7M3e8q.png)\n\n### 2. 登入grafana <http://YourHost:3000)>\n\n> 帳號跟密碼預設是 admin\n\n![帳號跟密碼預設是 admin](https://i.imgur.com/zv65arG.png)\n\n![帳號跟密碼預設是 admin](https://i.imgur.com/MFEJxKj.png)\n\n### 3. Add data source\n\n[!Add data source](https://i.imgur.com/4GvRimh.png)\n\n![Add data source](https://i.imgur.com/SDNjczQ.png)\n\n#### 3.1 Name\n\n> Name 輸入 grafana\n\n#### 3.2 HTTP settings\n\n> URL輸入 <http://influxdb:8086> (influxdb為你的 containerau名稱)\n\n#### 3.3 InfluxDB Details\n\n> Database 輸入gragana\n\n#### 設定完就可以看到 Grafana 與 InfluxDB 已經連結成功\n\n![設定完就可以看到](https://i.imgur.com/HzHakcG.png)\n\n## Telegraf\n\n### [telegraf官網](https://www.influxdata.com/time-series-platform/telegraf/)\n\n![telegraf官網](https://i.imgur.com/nlJIjUU.png)\n\n### 1. [下載](https://dl.influxdata.com/telegraf/releases/telegraf-1.9.4_windows_amd64.zip)\n\n### 2. 設定 [telegraf.conf](https://github.com/influxdata/telegraf)\n\n![設定](https://i.imgur.com/VlY1Cf2.png)\n\n#### 2.1. Input Plugins 使用 [win_perf_counters](https://github.com/influxdata/telegraf/tree/master/plugins/inputs/win_perf_counters) 這個套件(官方預設套件)\n\n![win_perf_counters](https://i.imgur.com/tTqZVrg.png)\n\n#### 2.2  設定 Output influxdb\n\n![設定](https://i.imgur.com/AtxDOGt.png)\n\n### 3. 啟動服務\n\n```bash\nD:\ncd D:\\telegraf\\\ntelegraf.exe -config D:\\telegraf\\telegraf.conf --service install\nnet start telegraf\n\n```\n\n![啟動服務](https://i.imgur.com/FXW0ePJ.png)\n\n### 4. grafana 新增一個 dashborad\n\n![新增一個](https://i.imgur.com/KiTs1PU.png)\n\n![新增一個](https://i.imgur.com/d8Uy0zk.png)\n\n#### 4.1 輸入 1902\n\n> [1902 dashboards](https://grafana.com/dashboards/1902)\n\n![1902 dashboards](https://i.imgur.com/6hjOm25.png)\n\n![1902 dashboards](https://i.imgur.com/V9M6Xic.png)\n\n#### 4.2 選擇 grafana db\n\n![選擇 grafana db](https://i.imgur.com/6yReJH8.png)\n\n#### 4.3 進入 grafana 就可以看到系統的資訊\n\n![grafana](https://i.imgur.com/qOxQh4n.png)\n\n# 參考\n\n* [influxdb docker hub](https://hub.docker.com/_/influxdb/)\n* [Grafana docker hub](https://hub.docker.com/r/grafana/grafana/)\n* [telegraf官網](https://www.influxdata.com/time-series-platform/telegraf/)\n* [telegraf git](https://github.com/influxdata/telegraf)\n* [telegraf Input Plugins - win_perf_counters](https://github.com/influxdata/telegraf/tree/master/plugins/inputs/win_perf_counters)","source":"_posts/Grafana 監控.md","raw":"---\ntitle: 'Grafana 監控'\ndate: 2019-02-25 11:50:40\ncategories: \n- Grafana\ntags: \n- Grafana\n- Docker\n- InfluxDb\n- telegraf\n---\n\n# Grafana 監控\n\n## [influxdb](https://hub.docker.com/_/influxdb/)\n\n### 1. Docker Run\n\n```bash\ndocker run -d -p 8083:8083 -p 8086:8086 -e INFLUXDB_ADMIN_ENABLED=true --name influxdb --restart=always -v influxdb:/var/lib/influxdb influxdb:1.1\n```\n\n![docker run](https://i.imgur.com/0oLjQzH.png)\n\n### 2. 進入 influxdb (http://YourHost:8083)\n\n![進入 influxdb](https://i.imgur.com/CkP0t3G.png)\n\n### 3. 建立一個  grafana 資料庫\n\n```bash\nCREATE DATABASE \"grafana\"\n```\n\n![建立一個  grafana 資料庫](https://i.imgur.com/yCIRXMp.png)\n\n### 4. 檢查是否建立成功\n\n```bash\nSHOW DATABASES\n```\n\n![檢查是否建立成功](https://i.imgur.com/nN52eAs.png)\n\n## [grafana](https://hub.docker.com/r/grafana/grafana/)\n\n### 1. Docker run\n\n```bash\ndocker run -d -p 3000:3000 --link influxdb:influxdb --restart=always --name grafana grafana/grafana:4.6.2\n```\n\n![Docker run ](https://i.imgur.com/J7M3e8q.png)\n\n### 2. 登入grafana <http://YourHost:3000)>\n\n> 帳號跟密碼預設是 admin\n\n![帳號跟密碼預設是 admin](https://i.imgur.com/zv65arG.png)\n\n![帳號跟密碼預設是 admin](https://i.imgur.com/MFEJxKj.png)\n\n### 3. Add data source\n\n[!Add data source](https://i.imgur.com/4GvRimh.png)\n\n![Add data source](https://i.imgur.com/SDNjczQ.png)\n\n#### 3.1 Name\n\n> Name 輸入 grafana\n\n#### 3.2 HTTP settings\n\n> URL輸入 <http://influxdb:8086> (influxdb為你的 containerau名稱)\n\n#### 3.3 InfluxDB Details\n\n> Database 輸入gragana\n\n#### 設定完就可以看到 Grafana 與 InfluxDB 已經連結成功\n\n![設定完就可以看到](https://i.imgur.com/HzHakcG.png)\n\n## Telegraf\n\n### [telegraf官網](https://www.influxdata.com/time-series-platform/telegraf/)\n\n![telegraf官網](https://i.imgur.com/nlJIjUU.png)\n\n### 1. [下載](https://dl.influxdata.com/telegraf/releases/telegraf-1.9.4_windows_amd64.zip)\n\n### 2. 設定 [telegraf.conf](https://github.com/influxdata/telegraf)\n\n![設定](https://i.imgur.com/VlY1Cf2.png)\n\n#### 2.1. Input Plugins 使用 [win_perf_counters](https://github.com/influxdata/telegraf/tree/master/plugins/inputs/win_perf_counters) 這個套件(官方預設套件)\n\n![win_perf_counters](https://i.imgur.com/tTqZVrg.png)\n\n#### 2.2  設定 Output influxdb\n\n![設定](https://i.imgur.com/AtxDOGt.png)\n\n### 3. 啟動服務\n\n```bash\nD:\ncd D:\\telegraf\\\ntelegraf.exe -config D:\\telegraf\\telegraf.conf --service install\nnet start telegraf\n\n```\n\n![啟動服務](https://i.imgur.com/FXW0ePJ.png)\n\n### 4. grafana 新增一個 dashborad\n\n![新增一個](https://i.imgur.com/KiTs1PU.png)\n\n![新增一個](https://i.imgur.com/d8Uy0zk.png)\n\n#### 4.1 輸入 1902\n\n> [1902 dashboards](https://grafana.com/dashboards/1902)\n\n![1902 dashboards](https://i.imgur.com/6hjOm25.png)\n\n![1902 dashboards](https://i.imgur.com/V9M6Xic.png)\n\n#### 4.2 選擇 grafana db\n\n![選擇 grafana db](https://i.imgur.com/6yReJH8.png)\n\n#### 4.3 進入 grafana 就可以看到系統的資訊\n\n![grafana](https://i.imgur.com/qOxQh4n.png)\n\n# 參考\n\n* [influxdb docker hub](https://hub.docker.com/_/influxdb/)\n* [Grafana docker hub](https://hub.docker.com/r/grafana/grafana/)\n* [telegraf官網](https://www.influxdata.com/time-series-platform/telegraf/)\n* [telegraf git](https://github.com/influxdata/telegraf)\n* [telegraf Input Plugins - win_perf_counters](https://github.com/influxdata/telegraf/tree/master/plugins/inputs/win_perf_counters)","slug":"Grafana 監控","published":1,"updated":"2019-06-03T01:52:24.691Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xug001n1q2245dugo3e","content":"<h1 id=\"Grafana-監控\"><a href=\"#Grafana-監控\" class=\"headerlink\" title=\"Grafana 監控\"></a>Grafana 監控</h1><h2 id=\"influxdb\"><a href=\"#influxdb\" class=\"headerlink\" title=\"influxdb\"></a><a href=\"https://hub.docker.com/_/influxdb/\" target=\"_blank\" rel=\"noopener\">influxdb</a></h2><h3 id=\"1-Docker-Run\"><a href=\"#1-Docker-Run\" class=\"headerlink\" title=\"1. Docker Run\"></a>1. Docker Run</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d -p 8083:8083 -p 8086:8086 -e INFLUXDB_ADMIN_ENABLED=<span class=\"literal\">true</span> --name influxdb --restart=always -v influxdb:/var/lib/influxdb influxdb:1.1</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/0oLjQzH.png\" alt=\"docker run\"></p>\n<h3 id=\"2-進入-influxdb-http-YourHost-8083\"><a href=\"#2-進入-influxdb-http-YourHost-8083\" class=\"headerlink\" title=\"2. 進入 influxdb (http://YourHost:8083)\"></a>2. 進入 influxdb (<a href=\"http://YourHost:8083\" target=\"_blank\" rel=\"noopener\">http://YourHost:8083</a>)</h3><p><img src=\"https://i.imgur.com/CkP0t3G.png\" alt=\"進入 influxdb\"></p>\n<h3 id=\"3-建立一個-grafana-資料庫\"><a href=\"#3-建立一個-grafana-資料庫\" class=\"headerlink\" title=\"3. 建立一個  grafana 資料庫\"></a>3. 建立一個  grafana 資料庫</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE DATABASE <span class=\"string\">\"grafana\"</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/yCIRXMp.png\" alt=\"建立一個  grafana 資料庫\"></p>\n<h3 id=\"4-檢查是否建立成功\"><a href=\"#4-檢查是否建立成功\" class=\"headerlink\" title=\"4. 檢查是否建立成功\"></a>4. 檢查是否建立成功</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SHOW DATABASES</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/nN52eAs.png\" alt=\"檢查是否建立成功\"></p>\n<h2 id=\"grafana\"><a href=\"#grafana\" class=\"headerlink\" title=\"grafana\"></a><a href=\"https://hub.docker.com/r/grafana/grafana/\" target=\"_blank\" rel=\"noopener\">grafana</a></h2><h3 id=\"1-Docker-run\"><a href=\"#1-Docker-run\" class=\"headerlink\" title=\"1. Docker run\"></a>1. Docker run</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d -p 3000:3000 --link influxdb:influxdb --restart=always --name grafana grafana/grafana:4.6.2</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/J7M3e8q.png\" alt=\"Docker run \"></p>\n<h3 id=\"2-登入grafana-http-YourHost-3000\"><a href=\"#2-登入grafana-http-YourHost-3000\" class=\"headerlink\" title=\"2. 登入grafana http://YourHost:3000)\"></a>2. 登入grafana <a href=\"http://YourHost:3000)\" target=\"_blank\" rel=\"noopener\">http://YourHost:3000)</a></h3><blockquote>\n<p>帳號跟密碼預設是 admin</p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/zv65arG.png\" alt=\"帳號跟密碼預設是 admin\"></p>\n<p><img src=\"https://i.imgur.com/MFEJxKj.png\" alt=\"帳號跟密碼預設是 admin\"></p>\n<h3 id=\"3-Add-data-source\"><a href=\"#3-Add-data-source\" class=\"headerlink\" title=\"3. Add data source\"></a>3. Add data source</h3><p><a href=\"https://i.imgur.com/4GvRimh.png\" target=\"_blank\" rel=\"noopener\">!Add data source</a></p>\n<p><img src=\"https://i.imgur.com/SDNjczQ.png\" alt=\"Add data source\"></p>\n<h4 id=\"3-1-Name\"><a href=\"#3-1-Name\" class=\"headerlink\" title=\"3.1 Name\"></a>3.1 Name</h4><blockquote>\n<p>Name 輸入 grafana</p>\n</blockquote>\n<h4 id=\"3-2-HTTP-settings\"><a href=\"#3-2-HTTP-settings\" class=\"headerlink\" title=\"3.2 HTTP settings\"></a>3.2 HTTP settings</h4><blockquote>\n<p>URL輸入 <a href=\"http://influxdb:8086\" target=\"_blank\" rel=\"noopener\">http://influxdb:8086</a> (influxdb為你的 containerau名稱)</p>\n</blockquote>\n<h4 id=\"3-3-InfluxDB-Details\"><a href=\"#3-3-InfluxDB-Details\" class=\"headerlink\" title=\"3.3 InfluxDB Details\"></a>3.3 InfluxDB Details</h4><blockquote>\n<p>Database 輸入gragana</p>\n</blockquote>\n<h4 id=\"設定完就可以看到-Grafana-與-InfluxDB-已經連結成功\"><a href=\"#設定完就可以看到-Grafana-與-InfluxDB-已經連結成功\" class=\"headerlink\" title=\"設定完就可以看到 Grafana 與 InfluxDB 已經連結成功\"></a>設定完就可以看到 Grafana 與 InfluxDB 已經連結成功</h4><p><img src=\"https://i.imgur.com/HzHakcG.png\" alt=\"設定完就可以看到\"></p>\n<h2 id=\"Telegraf\"><a href=\"#Telegraf\" class=\"headerlink\" title=\"Telegraf\"></a>Telegraf</h2><h3 id=\"telegraf官網\"><a href=\"#telegraf官網\" class=\"headerlink\" title=\"telegraf官網\"></a><a href=\"https://www.influxdata.com/time-series-platform/telegraf/\" target=\"_blank\" rel=\"noopener\">telegraf官網</a></h3><p><img src=\"https://i.imgur.com/nlJIjUU.png\" alt=\"telegraf官網\"></p>\n<h3 id=\"1-下載\"><a href=\"#1-下載\" class=\"headerlink\" title=\"1. 下載\"></a>1. <a href=\"https://dl.influxdata.com/telegraf/releases/telegraf-1.9.4_windows_amd64.zip\" target=\"_blank\" rel=\"noopener\">下載</a></h3><h3 id=\"2-設定-telegraf-conf\"><a href=\"#2-設定-telegraf-conf\" class=\"headerlink\" title=\"2. 設定 telegraf.conf\"></a>2. 設定 <a href=\"https://github.com/influxdata/telegraf\" target=\"_blank\" rel=\"noopener\">telegraf.conf</a></h3><p><img src=\"https://i.imgur.com/VlY1Cf2.png\" alt=\"設定\"></p>\n<h4 id=\"2-1-Input-Plugins-使用-win-perf-counters-這個套件-官方預設套件\"><a href=\"#2-1-Input-Plugins-使用-win-perf-counters-這個套件-官方預設套件\" class=\"headerlink\" title=\"2.1. Input Plugins 使用 win_perf_counters 這個套件(官方預設套件)\"></a>2.1. Input Plugins 使用 <a href=\"https://github.com/influxdata/telegraf/tree/master/plugins/inputs/win_perf_counters\" target=\"_blank\" rel=\"noopener\">win_perf_counters</a> 這個套件(官方預設套件)</h4><p><img src=\"https://i.imgur.com/tTqZVrg.png\" alt=\"win_perf_counters\"></p>\n<h4 id=\"2-2-設定-Output-influxdb\"><a href=\"#2-2-設定-Output-influxdb\" class=\"headerlink\" title=\"2.2  設定 Output influxdb\"></a>2.2  設定 Output influxdb</h4><p><img src=\"https://i.imgur.com/AtxDOGt.png\" alt=\"設定\"></p>\n<h3 id=\"3-啟動服務\"><a href=\"#3-啟動服務\" class=\"headerlink\" title=\"3. 啟動服務\"></a>3. 啟動服務</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">D:</span><br><span class=\"line\"><span class=\"built_in\">cd</span> D:\\telegraf\\</span><br><span class=\"line\">telegraf.exe -config D:\\telegraf\\telegraf.conf --service install</span><br><span class=\"line\">net start telegraf</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/FXW0ePJ.png\" alt=\"啟動服務\"></p>\n<h3 id=\"4-grafana-新增一個-dashborad\"><a href=\"#4-grafana-新增一個-dashborad\" class=\"headerlink\" title=\"4. grafana 新增一個 dashborad\"></a>4. grafana 新增一個 dashborad</h3><p><img src=\"https://i.imgur.com/KiTs1PU.png\" alt=\"新增一個\"></p>\n<p><img src=\"https://i.imgur.com/d8Uy0zk.png\" alt=\"新增一個\"></p>\n<h4 id=\"4-1-輸入-1902\"><a href=\"#4-1-輸入-1902\" class=\"headerlink\" title=\"4.1 輸入 1902\"></a>4.1 輸入 1902</h4><blockquote>\n<p><a href=\"https://grafana.com/dashboards/1902\" target=\"_blank\" rel=\"noopener\">1902 dashboards</a></p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/6hjOm25.png\" alt=\"1902 dashboards\"></p>\n<p><img src=\"https://i.imgur.com/V9M6Xic.png\" alt=\"1902 dashboards\"></p>\n<h4 id=\"4-2-選擇-grafana-db\"><a href=\"#4-2-選擇-grafana-db\" class=\"headerlink\" title=\"4.2 選擇 grafana db\"></a>4.2 選擇 grafana db</h4><p><img src=\"https://i.imgur.com/6yReJH8.png\" alt=\"選擇 grafana db\"></p>\n<h4 id=\"4-3-進入-grafana-就可以看到系統的資訊\"><a href=\"#4-3-進入-grafana-就可以看到系統的資訊\" class=\"headerlink\" title=\"4.3 進入 grafana 就可以看到系統的資訊\"></a>4.3 進入 grafana 就可以看到系統的資訊</h4><p><img src=\"https://i.imgur.com/qOxQh4n.png\" alt=\"grafana\"></p>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://hub.docker.com/_/influxdb/\" target=\"_blank\" rel=\"noopener\">influxdb docker hub</a></li>\n<li><a href=\"https://hub.docker.com/r/grafana/grafana/\" target=\"_blank\" rel=\"noopener\">Grafana docker hub</a></li>\n<li><a href=\"https://www.influxdata.com/time-series-platform/telegraf/\" target=\"_blank\" rel=\"noopener\">telegraf官網</a></li>\n<li><a href=\"https://github.com/influxdata/telegraf\" target=\"_blank\" rel=\"noopener\">telegraf git</a></li>\n<li><a href=\"https://github.com/influxdata/telegraf/tree/master/plugins/inputs/win_perf_counters\" target=\"_blank\" rel=\"noopener\">telegraf Input Plugins - win_perf_counters</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Grafana-監控\"><a href=\"#Grafana-監控\" class=\"headerlink\" title=\"Grafana 監控\"></a>Grafana 監控</h1><h2 id=\"influxdb\"><a href=\"#influxdb\" class=\"headerlink\" title=\"influxdb\"></a><a href=\"https://hub.docker.com/_/influxdb/\" target=\"_blank\" rel=\"noopener\">influxdb</a></h2><h3 id=\"1-Docker-Run\"><a href=\"#1-Docker-Run\" class=\"headerlink\" title=\"1. Docker Run\"></a>1. Docker Run</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d -p 8083:8083 -p 8086:8086 -e INFLUXDB_ADMIN_ENABLED=<span class=\"literal\">true</span> --name influxdb --restart=always -v influxdb:/var/lib/influxdb influxdb:1.1</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/0oLjQzH.png\" alt=\"docker run\"></p>\n<h3 id=\"2-進入-influxdb-http-YourHost-8083\"><a href=\"#2-進入-influxdb-http-YourHost-8083\" class=\"headerlink\" title=\"2. 進入 influxdb (http://YourHost:8083)\"></a>2. 進入 influxdb (<a href=\"http://YourHost:8083\" target=\"_blank\" rel=\"noopener\">http://YourHost:8083</a>)</h3><p><img src=\"https://i.imgur.com/CkP0t3G.png\" alt=\"進入 influxdb\"></p>\n<h3 id=\"3-建立一個-grafana-資料庫\"><a href=\"#3-建立一個-grafana-資料庫\" class=\"headerlink\" title=\"3. 建立一個  grafana 資料庫\"></a>3. 建立一個  grafana 資料庫</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE DATABASE <span class=\"string\">\"grafana\"</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/yCIRXMp.png\" alt=\"建立一個  grafana 資料庫\"></p>\n<h3 id=\"4-檢查是否建立成功\"><a href=\"#4-檢查是否建立成功\" class=\"headerlink\" title=\"4. 檢查是否建立成功\"></a>4. 檢查是否建立成功</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SHOW DATABASES</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/nN52eAs.png\" alt=\"檢查是否建立成功\"></p>\n<h2 id=\"grafana\"><a href=\"#grafana\" class=\"headerlink\" title=\"grafana\"></a><a href=\"https://hub.docker.com/r/grafana/grafana/\" target=\"_blank\" rel=\"noopener\">grafana</a></h2><h3 id=\"1-Docker-run\"><a href=\"#1-Docker-run\" class=\"headerlink\" title=\"1. Docker run\"></a>1. Docker run</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d -p 3000:3000 --link influxdb:influxdb --restart=always --name grafana grafana/grafana:4.6.2</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/J7M3e8q.png\" alt=\"Docker run \"></p>\n<h3 id=\"2-登入grafana-http-YourHost-3000\"><a href=\"#2-登入grafana-http-YourHost-3000\" class=\"headerlink\" title=\"2. 登入grafana http://YourHost:3000)\"></a>2. 登入grafana <a href=\"http://YourHost:3000)\" target=\"_blank\" rel=\"noopener\">http://YourHost:3000)</a></h3><blockquote>\n<p>帳號跟密碼預設是 admin</p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/zv65arG.png\" alt=\"帳號跟密碼預設是 admin\"></p>\n<p><img src=\"https://i.imgur.com/MFEJxKj.png\" alt=\"帳號跟密碼預設是 admin\"></p>\n<h3 id=\"3-Add-data-source\"><a href=\"#3-Add-data-source\" class=\"headerlink\" title=\"3. Add data source\"></a>3. Add data source</h3><p><a href=\"https://i.imgur.com/4GvRimh.png\" target=\"_blank\" rel=\"noopener\">!Add data source</a></p>\n<p><img src=\"https://i.imgur.com/SDNjczQ.png\" alt=\"Add data source\"></p>\n<h4 id=\"3-1-Name\"><a href=\"#3-1-Name\" class=\"headerlink\" title=\"3.1 Name\"></a>3.1 Name</h4><blockquote>\n<p>Name 輸入 grafana</p>\n</blockquote>\n<h4 id=\"3-2-HTTP-settings\"><a href=\"#3-2-HTTP-settings\" class=\"headerlink\" title=\"3.2 HTTP settings\"></a>3.2 HTTP settings</h4><blockquote>\n<p>URL輸入 <a href=\"http://influxdb:8086\" target=\"_blank\" rel=\"noopener\">http://influxdb:8086</a> (influxdb為你的 containerau名稱)</p>\n</blockquote>\n<h4 id=\"3-3-InfluxDB-Details\"><a href=\"#3-3-InfluxDB-Details\" class=\"headerlink\" title=\"3.3 InfluxDB Details\"></a>3.3 InfluxDB Details</h4><blockquote>\n<p>Database 輸入gragana</p>\n</blockquote>\n<h4 id=\"設定完就可以看到-Grafana-與-InfluxDB-已經連結成功\"><a href=\"#設定完就可以看到-Grafana-與-InfluxDB-已經連結成功\" class=\"headerlink\" title=\"設定完就可以看到 Grafana 與 InfluxDB 已經連結成功\"></a>設定完就可以看到 Grafana 與 InfluxDB 已經連結成功</h4><p><img src=\"https://i.imgur.com/HzHakcG.png\" alt=\"設定完就可以看到\"></p>\n<h2 id=\"Telegraf\"><a href=\"#Telegraf\" class=\"headerlink\" title=\"Telegraf\"></a>Telegraf</h2><h3 id=\"telegraf官網\"><a href=\"#telegraf官網\" class=\"headerlink\" title=\"telegraf官網\"></a><a href=\"https://www.influxdata.com/time-series-platform/telegraf/\" target=\"_blank\" rel=\"noopener\">telegraf官網</a></h3><p><img src=\"https://i.imgur.com/nlJIjUU.png\" alt=\"telegraf官網\"></p>\n<h3 id=\"1-下載\"><a href=\"#1-下載\" class=\"headerlink\" title=\"1. 下載\"></a>1. <a href=\"https://dl.influxdata.com/telegraf/releases/telegraf-1.9.4_windows_amd64.zip\" target=\"_blank\" rel=\"noopener\">下載</a></h3><h3 id=\"2-設定-telegraf-conf\"><a href=\"#2-設定-telegraf-conf\" class=\"headerlink\" title=\"2. 設定 telegraf.conf\"></a>2. 設定 <a href=\"https://github.com/influxdata/telegraf\" target=\"_blank\" rel=\"noopener\">telegraf.conf</a></h3><p><img src=\"https://i.imgur.com/VlY1Cf2.png\" alt=\"設定\"></p>\n<h4 id=\"2-1-Input-Plugins-使用-win-perf-counters-這個套件-官方預設套件\"><a href=\"#2-1-Input-Plugins-使用-win-perf-counters-這個套件-官方預設套件\" class=\"headerlink\" title=\"2.1. Input Plugins 使用 win_perf_counters 這個套件(官方預設套件)\"></a>2.1. Input Plugins 使用 <a href=\"https://github.com/influxdata/telegraf/tree/master/plugins/inputs/win_perf_counters\" target=\"_blank\" rel=\"noopener\">win_perf_counters</a> 這個套件(官方預設套件)</h4><p><img src=\"https://i.imgur.com/tTqZVrg.png\" alt=\"win_perf_counters\"></p>\n<h4 id=\"2-2-設定-Output-influxdb\"><a href=\"#2-2-設定-Output-influxdb\" class=\"headerlink\" title=\"2.2  設定 Output influxdb\"></a>2.2  設定 Output influxdb</h4><p><img src=\"https://i.imgur.com/AtxDOGt.png\" alt=\"設定\"></p>\n<h3 id=\"3-啟動服務\"><a href=\"#3-啟動服務\" class=\"headerlink\" title=\"3. 啟動服務\"></a>3. 啟動服務</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">D:</span><br><span class=\"line\"><span class=\"built_in\">cd</span> D:\\telegraf\\</span><br><span class=\"line\">telegraf.exe -config D:\\telegraf\\telegraf.conf --service install</span><br><span class=\"line\">net start telegraf</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/FXW0ePJ.png\" alt=\"啟動服務\"></p>\n<h3 id=\"4-grafana-新增一個-dashborad\"><a href=\"#4-grafana-新增一個-dashborad\" class=\"headerlink\" title=\"4. grafana 新增一個 dashborad\"></a>4. grafana 新增一個 dashborad</h3><p><img src=\"https://i.imgur.com/KiTs1PU.png\" alt=\"新增一個\"></p>\n<p><img src=\"https://i.imgur.com/d8Uy0zk.png\" alt=\"新增一個\"></p>\n<h4 id=\"4-1-輸入-1902\"><a href=\"#4-1-輸入-1902\" class=\"headerlink\" title=\"4.1 輸入 1902\"></a>4.1 輸入 1902</h4><blockquote>\n<p><a href=\"https://grafana.com/dashboards/1902\" target=\"_blank\" rel=\"noopener\">1902 dashboards</a></p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/6hjOm25.png\" alt=\"1902 dashboards\"></p>\n<p><img src=\"https://i.imgur.com/V9M6Xic.png\" alt=\"1902 dashboards\"></p>\n<h4 id=\"4-2-選擇-grafana-db\"><a href=\"#4-2-選擇-grafana-db\" class=\"headerlink\" title=\"4.2 選擇 grafana db\"></a>4.2 選擇 grafana db</h4><p><img src=\"https://i.imgur.com/6yReJH8.png\" alt=\"選擇 grafana db\"></p>\n<h4 id=\"4-3-進入-grafana-就可以看到系統的資訊\"><a href=\"#4-3-進入-grafana-就可以看到系統的資訊\" class=\"headerlink\" title=\"4.3 進入 grafana 就可以看到系統的資訊\"></a>4.3 進入 grafana 就可以看到系統的資訊</h4><p><img src=\"https://i.imgur.com/qOxQh4n.png\" alt=\"grafana\"></p>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://hub.docker.com/_/influxdb/\" target=\"_blank\" rel=\"noopener\">influxdb docker hub</a></li>\n<li><a href=\"https://hub.docker.com/r/grafana/grafana/\" target=\"_blank\" rel=\"noopener\">Grafana docker hub</a></li>\n<li><a href=\"https://www.influxdata.com/time-series-platform/telegraf/\" target=\"_blank\" rel=\"noopener\">telegraf官網</a></li>\n<li><a href=\"https://github.com/influxdata/telegraf\" target=\"_blank\" rel=\"noopener\">telegraf git</a></li>\n<li><a href=\"https://github.com/influxdata/telegraf/tree/master/plugins/inputs/win_perf_counters\" target=\"_blank\" rel=\"noopener\">telegraf Input Plugins - win_perf_counters</a></li>\n</ul>\n"},{"title":"C# HttpWebRequest Expect:100-continue","date":"2019-03-20T12:31:18.000Z","_content":"\n# HttpWebRequest Expect:100-continue'\n\n> 使用 .net HttpWebRequest Post時，碰到第三方串接商API無回應，導致 Reseponse TimeOut，使用 Fiddler 攔了一下，發現Header多了一個 \"Expect:100-continue\"，原來第三方串接商API不支援，所以才會沒有回應導致Reseponse Timeout，把 Expect100Continue 設定成  false 就可以解決了\n\n```C#\nHttpWebRequest request = (HttpWebRequest)HttpWebRequest.Create(\"Url\");\nrequest.ServicePoint.Expect100Continue = false;\n```\n\n![Fiddler](https://i.imgur.com/v9iKHBX.png)\n\n# 參考\n\n* [How to disable the “Expect: 100 continue” header in HttpWebRequest for a single request?](https://stackoverflow.com/questions/14063327/how-to-disable-the-expect-100-continue-header-in-httpwebrequest-for-a-single)\n* [Expect:100-continue](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/100)\n[100 Continue\n](http://www.laruence.com/2011/01/20/1840.html)","source":"_posts/HttpWebRequestExpect100continue.md","raw":"---\ntitle: 'C# HttpWebRequest Expect:100-continue'\ndate: 2019-03-20 20:31:18\ncategories:\n- HttpWebRequest\ntags:\n- HttpWebRequest\n- C#\n- 筆記\n---\n\n# HttpWebRequest Expect:100-continue'\n\n> 使用 .net HttpWebRequest Post時，碰到第三方串接商API無回應，導致 Reseponse TimeOut，使用 Fiddler 攔了一下，發現Header多了一個 \"Expect:100-continue\"，原來第三方串接商API不支援，所以才會沒有回應導致Reseponse Timeout，把 Expect100Continue 設定成  false 就可以解決了\n\n```C#\nHttpWebRequest request = (HttpWebRequest)HttpWebRequest.Create(\"Url\");\nrequest.ServicePoint.Expect100Continue = false;\n```\n\n![Fiddler](https://i.imgur.com/v9iKHBX.png)\n\n# 參考\n\n* [How to disable the “Expect: 100 continue” header in HttpWebRequest for a single request?](https://stackoverflow.com/questions/14063327/how-to-disable-the-expect-100-continue-header-in-httpwebrequest-for-a-single)\n* [Expect:100-continue](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/100)\n[100 Continue\n](http://www.laruence.com/2011/01/20/1840.html)","slug":"HttpWebRequestExpect100continue","published":1,"updated":"2019-06-03T01:52:24.692Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xug001p1q2254qegxmj","content":"<h1 id=\"HttpWebRequest-Expect-100-continue’\"><a href=\"#HttpWebRequest-Expect-100-continue’\" class=\"headerlink\" title=\"HttpWebRequest Expect:100-continue’\"></a>HttpWebRequest Expect:100-continue’</h1><blockquote>\n<p>使用 .net HttpWebRequest Post時，碰到第三方串接商API無回應，導致 Reseponse TimeOut，使用 Fiddler 攔了一下，發現Header多了一個 “Expect:100-continue”，原來第三方串接商API不支援，所以才會沒有回應導致Reseponse Timeout，把 Expect100Continue 設定成  false 就可以解決了</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HttpWebRequest request = (HttpWebRequest)HttpWebRequest.Create(&quot;Url&quot;);</span><br><span class=\"line\">request.ServicePoint.Expect100Continue = false;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/v9iKHBX.png\" alt=\"Fiddler\"></p>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://stackoverflow.com/questions/14063327/how-to-disable-the-expect-100-continue-header-in-httpwebrequest-for-a-single\" target=\"_blank\" rel=\"noopener\">How to disable the “Expect: 100 continue” header in HttpWebRequest for a single request?</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/100\" target=\"_blank\" rel=\"noopener\">Expect:100-continue</a><br><a href=\"http://www.laruence.com/2011/01/20/1840.html\" target=\"_blank\" rel=\"noopener\">100 Continue\n</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"HttpWebRequest-Expect-100-continue’\"><a href=\"#HttpWebRequest-Expect-100-continue’\" class=\"headerlink\" title=\"HttpWebRequest Expect:100-continue’\"></a>HttpWebRequest Expect:100-continue’</h1><blockquote>\n<p>使用 .net HttpWebRequest Post時，碰到第三方串接商API無回應，導致 Reseponse TimeOut，使用 Fiddler 攔了一下，發現Header多了一個 “Expect:100-continue”，原來第三方串接商API不支援，所以才會沒有回應導致Reseponse Timeout，把 Expect100Continue 設定成  false 就可以解決了</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HttpWebRequest request = (HttpWebRequest)HttpWebRequest.Create(&quot;Url&quot;);</span><br><span class=\"line\">request.ServicePoint.Expect100Continue = false;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/v9iKHBX.png\" alt=\"Fiddler\"></p>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://stackoverflow.com/questions/14063327/how-to-disable-the-expect-100-continue-header-in-httpwebrequest-for-a-single\" target=\"_blank\" rel=\"noopener\">How to disable the “Expect: 100 continue” header in HttpWebRequest for a single request?</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/100\" target=\"_blank\" rel=\"noopener\">Expect:100-continue</a><br><a href=\"http://www.laruence.com/2011/01/20/1840.html\" target=\"_blank\" rel=\"noopener\">100 Continue\n</a></li>\n</ul>\n"},{"title":"Jenkins Build .Net Core With Pipeline","date":"2018-11-27T10:45:24.000Z","_content":"","source":"_posts/Jenkins-Build-Net-Core-With-Pipeline.md","raw":"---\ntitle: Jenkins Build .Net Core With Pipeline\ndate: 2018-11-27 18:45:24\ncategories: \n- Jenkins\ntags: \n- Jenkins\n---\n","slug":"Jenkins-Build-Net-Core-With-Pipeline","published":1,"updated":"2019-03-07T09:02:28.588Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xui001t1q22ch4fm8ri","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Jenkins Pipeline Blue Ocean","date":"2018-12-20T08:21:16.000Z","_content":"## Jenkins Pipeline Blue Ocean\n\n### 搜尋 Blue Ocean 並安裝\n![](https://i.imgur.com/epT45cZ.png)\n\n![](https://i.imgur.com/6R07Bsn.png)\n\n### 安裝完成後就可以看到 Open Blue Ocean\n![](https://i.imgur.com/IkPF79d.png)\n\n### Open Blue Ocean 點進去可以看到執行的狀態\n![](https://i.imgur.com/EaXr2Tz.png)\n\n### 勾勾點進去就可以可以看到圖形化的 Pipeline\n![](https://i.imgur.com/5DgoySv.png)\n\n![](https://i.imgur.com/Q5DHF0Q.png)\n\n## 參考\n\n* [Jenkins Pipeline Blue Ocean](https://jenkins.io/projects/blueocean/)\n* [[Day 27] Pipeline 專案 (下)](https://ithelp.ithome.com.tw/articles/10196252?sc=iThelpR)\n* [Create a Pipeline in Blue Ocean ](https://jenkins.io/doc/tutorials/create-a-pipeline-in-blue-ocean/)","source":"_posts/Jenkins-Pipeline-Blue-Ocean.md","raw":"---\ntitle: Jenkins Pipeline Blue Ocean\ndate: 2018-12-20 16:21:16\ncategories:\n- Jenkins\ntags:\n- Jenkins\n- Pipeline\n- Blue Ocean\n---\n## Jenkins Pipeline Blue Ocean\n\n### 搜尋 Blue Ocean 並安裝\n![](https://i.imgur.com/epT45cZ.png)\n\n![](https://i.imgur.com/6R07Bsn.png)\n\n### 安裝完成後就可以看到 Open Blue Ocean\n![](https://i.imgur.com/IkPF79d.png)\n\n### Open Blue Ocean 點進去可以看到執行的狀態\n![](https://i.imgur.com/EaXr2Tz.png)\n\n### 勾勾點進去就可以可以看到圖形化的 Pipeline\n![](https://i.imgur.com/5DgoySv.png)\n\n![](https://i.imgur.com/Q5DHF0Q.png)\n\n## 參考\n\n* [Jenkins Pipeline Blue Ocean](https://jenkins.io/projects/blueocean/)\n* [[Day 27] Pipeline 專案 (下)](https://ithelp.ithome.com.tw/articles/10196252?sc=iThelpR)\n* [Create a Pipeline in Blue Ocean ](https://jenkins.io/doc/tutorials/create-a-pipeline-in-blue-ocean/)","slug":"Jenkins-Pipeline-Blue-Ocean","published":1,"updated":"2019-06-03T01:52:24.692Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xuj001v1q22x57cyscx","content":"<h2 id=\"Jenkins-Pipeline-Blue-Ocean\"><a href=\"#Jenkins-Pipeline-Blue-Ocean\" class=\"headerlink\" title=\"Jenkins Pipeline Blue Ocean\"></a>Jenkins Pipeline Blue Ocean</h2><h3 id=\"搜尋-Blue-Ocean-並安裝\"><a href=\"#搜尋-Blue-Ocean-並安裝\" class=\"headerlink\" title=\"搜尋 Blue Ocean 並安裝\"></a>搜尋 Blue Ocean 並安裝</h3><p><img src=\"https://i.imgur.com/epT45cZ.png\" alt></p>\n<p><img src=\"https://i.imgur.com/6R07Bsn.png\" alt></p>\n<h3 id=\"安裝完成後就可以看到-Open-Blue-Ocean\"><a href=\"#安裝完成後就可以看到-Open-Blue-Ocean\" class=\"headerlink\" title=\"安裝完成後就可以看到 Open Blue Ocean\"></a>安裝完成後就可以看到 Open Blue Ocean</h3><p><img src=\"https://i.imgur.com/IkPF79d.png\" alt></p>\n<h3 id=\"Open-Blue-Ocean-點進去可以看到執行的狀態\"><a href=\"#Open-Blue-Ocean-點進去可以看到執行的狀態\" class=\"headerlink\" title=\"Open Blue Ocean 點進去可以看到執行的狀態\"></a>Open Blue Ocean 點進去可以看到執行的狀態</h3><p><img src=\"https://i.imgur.com/EaXr2Tz.png\" alt></p>\n<h3 id=\"勾勾點進去就可以可以看到圖形化的-Pipeline\"><a href=\"#勾勾點進去就可以可以看到圖形化的-Pipeline\" class=\"headerlink\" title=\"勾勾點進去就可以可以看到圖形化的 Pipeline\"></a>勾勾點進去就可以可以看到圖形化的 Pipeline</h3><p><img src=\"https://i.imgur.com/5DgoySv.png\" alt></p>\n<p><img src=\"https://i.imgur.com/Q5DHF0Q.png\" alt></p>\n<h2 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h2><ul>\n<li><a href=\"https://jenkins.io/projects/blueocean/\" target=\"_blank\" rel=\"noopener\">Jenkins Pipeline Blue Ocean</a></li>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10196252?sc=iThelpR\" target=\"_blank\" rel=\"noopener\">[Day 27] Pipeline 專案 (下)</a></li>\n<li><a href=\"https://jenkins.io/doc/tutorials/create-a-pipeline-in-blue-ocean/\" target=\"_blank\" rel=\"noopener\">Create a Pipeline in Blue Ocean </a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Jenkins-Pipeline-Blue-Ocean\"><a href=\"#Jenkins-Pipeline-Blue-Ocean\" class=\"headerlink\" title=\"Jenkins Pipeline Blue Ocean\"></a>Jenkins Pipeline Blue Ocean</h2><h3 id=\"搜尋-Blue-Ocean-並安裝\"><a href=\"#搜尋-Blue-Ocean-並安裝\" class=\"headerlink\" title=\"搜尋 Blue Ocean 並安裝\"></a>搜尋 Blue Ocean 並安裝</h3><p><img src=\"https://i.imgur.com/epT45cZ.png\" alt></p>\n<p><img src=\"https://i.imgur.com/6R07Bsn.png\" alt></p>\n<h3 id=\"安裝完成後就可以看到-Open-Blue-Ocean\"><a href=\"#安裝完成後就可以看到-Open-Blue-Ocean\" class=\"headerlink\" title=\"安裝完成後就可以看到 Open Blue Ocean\"></a>安裝完成後就可以看到 Open Blue Ocean</h3><p><img src=\"https://i.imgur.com/IkPF79d.png\" alt></p>\n<h3 id=\"Open-Blue-Ocean-點進去可以看到執行的狀態\"><a href=\"#Open-Blue-Ocean-點進去可以看到執行的狀態\" class=\"headerlink\" title=\"Open Blue Ocean 點進去可以看到執行的狀態\"></a>Open Blue Ocean 點進去可以看到執行的狀態</h3><p><img src=\"https://i.imgur.com/EaXr2Tz.png\" alt></p>\n<h3 id=\"勾勾點進去就可以可以看到圖形化的-Pipeline\"><a href=\"#勾勾點進去就可以可以看到圖形化的-Pipeline\" class=\"headerlink\" title=\"勾勾點進去就可以可以看到圖形化的 Pipeline\"></a>勾勾點進去就可以可以看到圖形化的 Pipeline</h3><p><img src=\"https://i.imgur.com/5DgoySv.png\" alt></p>\n<p><img src=\"https://i.imgur.com/Q5DHF0Q.png\" alt></p>\n<h2 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h2><ul>\n<li><a href=\"https://jenkins.io/projects/blueocean/\" target=\"_blank\" rel=\"noopener\">Jenkins Pipeline Blue Ocean</a></li>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10196252?sc=iThelpR\" target=\"_blank\" rel=\"noopener\">[Day 27] Pipeline 專案 (下)</a></li>\n<li><a href=\"https://jenkins.io/doc/tutorials/create-a-pipeline-in-blue-ocean/\" target=\"_blank\" rel=\"noopener\">Create a Pipeline in Blue Ocean </a></li>\n</ul>\n"},{"title":"Jenkins Pipeline Parallel 平行處理","date":"2018-12-21T07:32:46.000Z","_content":"\n## Jenkins Pipeline Parallel 平行處理\n\n\n### 將 parallel 語法設定在專案上\n![](https://i.imgur.com/BYD3cvl.png)\n\n> parallel  範例如下\n```\nnode {\n\n   stage('Git Clone') {\n       echo \"Git Clone OK\"\n   }\n   stage('Nuget Restore') {\n       echo \"Nuget Restore OK\"\n   }\n   stage('Msbuild') {\n       echo \"Msbuild OK\"\n   }\n\n parallel (\n  \"Push\": {\n    stage(\"Push Server\") {\n       echo \"Push OK\"\n    }\n  },\n  \"Scan Code\": {\n    stage(\"Scan Code\") {\n        echo \" Scan Code OK\"\n    }\n  }\n )\n}\n```\n\n### Jenkins 上可以看到建置過程\n![](https://i.imgur.com/e67Wju4.png)\n\n### Blue Ocean 就可以看到 建置過程是有水平執行\n![](https://i.imgur.com/WmTbRhY.png)\n\n> 要看到Blue Ocean圖形可以參考這篇安裝 [Jenkins Pipeline Blue Ocean](https://ste5022424.github.io/2018/12/20/Jenkins-Pipeline-Blue-Ocean/)\n\n## 參考\n\n* [What's New in Declarative Pipeline 1.3: Sequential Stages](https://jenkins.io/blog/2018/07/02/whats-new-declarative-piepline-13x-sequential-stages/)","source":"_posts/Jenkins-Pipeline-Parallel-平行處理.md","raw":"---\ntitle: Jenkins Pipeline Parallel 平行處理\ndate: 2018-12-21 15:32:46\ncategories:\n- Jenkins\ntags:\n- Jenkins\n- Pipeline Parallel\n---\n\n## Jenkins Pipeline Parallel 平行處理\n\n\n### 將 parallel 語法設定在專案上\n![](https://i.imgur.com/BYD3cvl.png)\n\n> parallel  範例如下\n```\nnode {\n\n   stage('Git Clone') {\n       echo \"Git Clone OK\"\n   }\n   stage('Nuget Restore') {\n       echo \"Nuget Restore OK\"\n   }\n   stage('Msbuild') {\n       echo \"Msbuild OK\"\n   }\n\n parallel (\n  \"Push\": {\n    stage(\"Push Server\") {\n       echo \"Push OK\"\n    }\n  },\n  \"Scan Code\": {\n    stage(\"Scan Code\") {\n        echo \" Scan Code OK\"\n    }\n  }\n )\n}\n```\n\n### Jenkins 上可以看到建置過程\n![](https://i.imgur.com/e67Wju4.png)\n\n### Blue Ocean 就可以看到 建置過程是有水平執行\n![](https://i.imgur.com/WmTbRhY.png)\n\n> 要看到Blue Ocean圖形可以參考這篇安裝 [Jenkins Pipeline Blue Ocean](https://ste5022424.github.io/2018/12/20/Jenkins-Pipeline-Blue-Ocean/)\n\n## 參考\n\n* [What's New in Declarative Pipeline 1.3: Sequential Stages](https://jenkins.io/blog/2018/07/02/whats-new-declarative-piepline-13x-sequential-stages/)","slug":"Jenkins-Pipeline-Parallel-平行處理","published":1,"updated":"2019-06-03T01:52:24.693Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xul00201q22cw2itozv","content":"<h2 id=\"Jenkins-Pipeline-Parallel-平行處理\"><a href=\"#Jenkins-Pipeline-Parallel-平行處理\" class=\"headerlink\" title=\"Jenkins Pipeline Parallel 平行處理\"></a>Jenkins Pipeline Parallel 平行處理</h2><h3 id=\"將-parallel-語法設定在專案上\"><a href=\"#將-parallel-語法設定在專案上\" class=\"headerlink\" title=\"將 parallel 語法設定在專案上\"></a>將 parallel 語法設定在專案上</h3><p><img src=\"https://i.imgur.com/BYD3cvl.png\" alt></p>\n<blockquote>\n<p>parallel  範例如下</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   stage(&apos;Git Clone&apos;) &#123;</span><br><span class=\"line\">       echo &quot;Git Clone OK&quot;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   stage(&apos;Nuget Restore&apos;) &#123;</span><br><span class=\"line\">       echo &quot;Nuget Restore OK&quot;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   stage(&apos;Msbuild&apos;) &#123;</span><br><span class=\"line\">       echo &quot;Msbuild OK&quot;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> parallel (</span><br><span class=\"line\">  &quot;Push&quot;: &#123;</span><br><span class=\"line\">    stage(&quot;Push Server&quot;) &#123;</span><br><span class=\"line\">       echo &quot;Push OK&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;Scan Code&quot;: &#123;</span><br><span class=\"line\">    stage(&quot;Scan Code&quot;) &#123;</span><br><span class=\"line\">        echo &quot; Scan Code OK&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> )</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Jenkins-上可以看到建置過程\"><a href=\"#Jenkins-上可以看到建置過程\" class=\"headerlink\" title=\"Jenkins 上可以看到建置過程\"></a>Jenkins 上可以看到建置過程</h3><p><img src=\"https://i.imgur.com/e67Wju4.png\" alt></p>\n<h3 id=\"Blue-Ocean-就可以看到-建置過程是有水平執行\"><a href=\"#Blue-Ocean-就可以看到-建置過程是有水平執行\" class=\"headerlink\" title=\"Blue Ocean 就可以看到 建置過程是有水平執行\"></a>Blue Ocean 就可以看到 建置過程是有水平執行</h3><p><img src=\"https://i.imgur.com/WmTbRhY.png\" alt></p>\n<blockquote>\n<p>要看到Blue Ocean圖形可以參考這篇安裝 <a href=\"https://ste5022424.github.io/2018/12/20/Jenkins-Pipeline-Blue-Ocean/\">Jenkins Pipeline Blue Ocean</a></p>\n</blockquote>\n<h2 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h2><ul>\n<li><a href=\"https://jenkins.io/blog/2018/07/02/whats-new-declarative-piepline-13x-sequential-stages/\" target=\"_blank\" rel=\"noopener\">What’s New in Declarative Pipeline 1.3: Sequential Stages</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Jenkins-Pipeline-Parallel-平行處理\"><a href=\"#Jenkins-Pipeline-Parallel-平行處理\" class=\"headerlink\" title=\"Jenkins Pipeline Parallel 平行處理\"></a>Jenkins Pipeline Parallel 平行處理</h2><h3 id=\"將-parallel-語法設定在專案上\"><a href=\"#將-parallel-語法設定在專案上\" class=\"headerlink\" title=\"將 parallel 語法設定在專案上\"></a>將 parallel 語法設定在專案上</h3><p><img src=\"https://i.imgur.com/BYD3cvl.png\" alt></p>\n<blockquote>\n<p>parallel  範例如下</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   stage(&apos;Git Clone&apos;) &#123;</span><br><span class=\"line\">       echo &quot;Git Clone OK&quot;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   stage(&apos;Nuget Restore&apos;) &#123;</span><br><span class=\"line\">       echo &quot;Nuget Restore OK&quot;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   stage(&apos;Msbuild&apos;) &#123;</span><br><span class=\"line\">       echo &quot;Msbuild OK&quot;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> parallel (</span><br><span class=\"line\">  &quot;Push&quot;: &#123;</span><br><span class=\"line\">    stage(&quot;Push Server&quot;) &#123;</span><br><span class=\"line\">       echo &quot;Push OK&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;Scan Code&quot;: &#123;</span><br><span class=\"line\">    stage(&quot;Scan Code&quot;) &#123;</span><br><span class=\"line\">        echo &quot; Scan Code OK&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> )</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Jenkins-上可以看到建置過程\"><a href=\"#Jenkins-上可以看到建置過程\" class=\"headerlink\" title=\"Jenkins 上可以看到建置過程\"></a>Jenkins 上可以看到建置過程</h3><p><img src=\"https://i.imgur.com/e67Wju4.png\" alt></p>\n<h3 id=\"Blue-Ocean-就可以看到-建置過程是有水平執行\"><a href=\"#Blue-Ocean-就可以看到-建置過程是有水平執行\" class=\"headerlink\" title=\"Blue Ocean 就可以看到 建置過程是有水平執行\"></a>Blue Ocean 就可以看到 建置過程是有水平執行</h3><p><img src=\"https://i.imgur.com/WmTbRhY.png\" alt></p>\n<blockquote>\n<p>要看到Blue Ocean圖形可以參考這篇安裝 <a href=\"https://ste5022424.github.io/2018/12/20/Jenkins-Pipeline-Blue-Ocean/\">Jenkins Pipeline Blue Ocean</a></p>\n</blockquote>\n<h2 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h2><ul>\n<li><a href=\"https://jenkins.io/blog/2018/07/02/whats-new-declarative-piepline-13x-sequential-stages/\" target=\"_blank\" rel=\"noopener\">What’s New in Declarative Pipeline 1.3: Sequential Stages</a></li>\n</ul>\n"},{"layout":"pos","title":"Jenkins Pipeline","date":"2018-11-23T03:21:54.000Z","_content":"# Jenkins Pipeline\n\n### 可以將部屬流程視覺化來顯示，請看官方的這張[圖](https://jenkins.io/doc/book/pipeline/)\n\n![視覺化](https://i.imgur.com/OXUX6Ca.png)\n\n### 新增作業\n\n![新增作業](https://i.imgur.com/1H6nKrr.png)\n\n### 選擇 Pipeline 專案\n![選擇](https://i.imgur.com/Rk6oGvB.png)\n\n### 建立成功之後就可以在 script 的地方撰寫\n\n![建立](https://i.imgur.com/Ms2I0GI.png)\n\n### Pipeline Script 有分兩種方式\n\n > Pipeline Script 直接寫在 jenkins Script 上面\n > Pipeline script from SCM 可以使用版控來管理 Pipeline script\n * Pipeline Script\n\n![Pipeline Script](https://i.imgur.com/1yz6bPX.png)\n\n```bash\nnode {\n    stage('Clone') {\n        echo 'Clone'\n    }\n    stage('Build') {\n        echo 'Build'\n    }\n    stage('Test') {\n        echo 'Teset'\n    }\n    stage('Deploy') {\n        echo 'Deploy'\n    }\n}\n```\n\n#### 馬上建置\n![](https://i.imgur.com/RIVUvf9.png)\n\n#### 這時候就可以看到 建置的步驟已經視覺化顯示了\n![](https://i.imgur.com/yszPWq1.png)\n\n#### Console Output\n![](https://i.imgur.com/rUJMmpo.png)\n\n#### 這裡可以看到剛剛寫的執行log\n![](https://i.imgur.com/rgn76nJ.png)\n\n* Pipeline script from SCM\n\n![](https://i.imgur.com/zD7vhP5.png)\n\n![](https://i.imgur.com/QkY1rdW.png)\n\n> Repository URL 在github上面建立一個專案\n\n#### 新增一個檔案叫　Jenkinsfile　\n![](https://i.imgur.com/vmYUUY0.png)\n> 檔案名稱要不一樣可以再 Script Path 設定\n\n#### 把剛剛寫的code 貼上去，並且 commit\n![](https://i.imgur.com/p1e0ECp.png)\n\n#### 第二次建置也成功了\n![](https://i.imgur.com/VLtTcJQ.png)\n\n#### 這時候看一下 Console Output，確認就是從 git 上面取下來執行的\n\n![](https://i.imgur.com/u3da9mL.png)\n\n##  Pipeline Syntax 產生語法的小工具\n![](https://i.imgur.com/TNiTpxw.png)\n\n![](https://i.imgur.com/AEJ81l7.png)\n\n### 選擇 bat: Windows Batch Script\n![](https://i.imgur.com/04A1RjJ.png)\n\n### 按下 Generate Pipeline Script，會產生語法，可以直接在 pipeline 中使用\n![](https://i.imgur.com/0AMFpET.png)\n> pipeline 是使用 Groovy語言來撰寫，可以參考 [Groovy’s syntax](http://groovy-lang.org/syntax.html)\n\n# 參考\n* [Pipeline - Jenkins]https://jenkins.io/doc/book/pipeline/\n* [[DevOps自動化-6] Jenkins持續整合、發布](https://dotblogs.com.tw/aken1215/2016/10/11/000455)\n* [[持續交付實踐] pipeline：pipeline使用之快速入門](https://testerhome.com/topics/10003)\n","source":"_posts/Jenkins-pipeline.md","raw":"---\nlayout: pos\ntitle: Jenkins Pipeline\ndate: 2018-11-23 11:21:54\ncategories:\n- Jenkins\ntags: \n- Jenkins\n- Pipeline\n---\n# Jenkins Pipeline\n\n### 可以將部屬流程視覺化來顯示，請看官方的這張[圖](https://jenkins.io/doc/book/pipeline/)\n\n![視覺化](https://i.imgur.com/OXUX6Ca.png)\n\n### 新增作業\n\n![新增作業](https://i.imgur.com/1H6nKrr.png)\n\n### 選擇 Pipeline 專案\n![選擇](https://i.imgur.com/Rk6oGvB.png)\n\n### 建立成功之後就可以在 script 的地方撰寫\n\n![建立](https://i.imgur.com/Ms2I0GI.png)\n\n### Pipeline Script 有分兩種方式\n\n > Pipeline Script 直接寫在 jenkins Script 上面\n > Pipeline script from SCM 可以使用版控來管理 Pipeline script\n * Pipeline Script\n\n![Pipeline Script](https://i.imgur.com/1yz6bPX.png)\n\n```bash\nnode {\n    stage('Clone') {\n        echo 'Clone'\n    }\n    stage('Build') {\n        echo 'Build'\n    }\n    stage('Test') {\n        echo 'Teset'\n    }\n    stage('Deploy') {\n        echo 'Deploy'\n    }\n}\n```\n\n#### 馬上建置\n![](https://i.imgur.com/RIVUvf9.png)\n\n#### 這時候就可以看到 建置的步驟已經視覺化顯示了\n![](https://i.imgur.com/yszPWq1.png)\n\n#### Console Output\n![](https://i.imgur.com/rUJMmpo.png)\n\n#### 這裡可以看到剛剛寫的執行log\n![](https://i.imgur.com/rgn76nJ.png)\n\n* Pipeline script from SCM\n\n![](https://i.imgur.com/zD7vhP5.png)\n\n![](https://i.imgur.com/QkY1rdW.png)\n\n> Repository URL 在github上面建立一個專案\n\n#### 新增一個檔案叫　Jenkinsfile　\n![](https://i.imgur.com/vmYUUY0.png)\n> 檔案名稱要不一樣可以再 Script Path 設定\n\n#### 把剛剛寫的code 貼上去，並且 commit\n![](https://i.imgur.com/p1e0ECp.png)\n\n#### 第二次建置也成功了\n![](https://i.imgur.com/VLtTcJQ.png)\n\n#### 這時候看一下 Console Output，確認就是從 git 上面取下來執行的\n\n![](https://i.imgur.com/u3da9mL.png)\n\n##  Pipeline Syntax 產生語法的小工具\n![](https://i.imgur.com/TNiTpxw.png)\n\n![](https://i.imgur.com/AEJ81l7.png)\n\n### 選擇 bat: Windows Batch Script\n![](https://i.imgur.com/04A1RjJ.png)\n\n### 按下 Generate Pipeline Script，會產生語法，可以直接在 pipeline 中使用\n![](https://i.imgur.com/0AMFpET.png)\n> pipeline 是使用 Groovy語言來撰寫，可以參考 [Groovy’s syntax](http://groovy-lang.org/syntax.html)\n\n# 參考\n* [Pipeline - Jenkins]https://jenkins.io/doc/book/pipeline/\n* [[DevOps自動化-6] Jenkins持續整合、發布](https://dotblogs.com.tw/aken1215/2016/10/11/000455)\n* [[持續交付實踐] pipeline：pipeline使用之快速入門](https://testerhome.com/topics/10003)\n","slug":"Jenkins-pipeline","published":1,"updated":"2019-06-03T01:52:24.693Z","comments":1,"photos":[],"link":"","_id":"cjx077xum00231q22el5je8lj","content":"<h1 id=\"Jenkins-Pipeline\"><a href=\"#Jenkins-Pipeline\" class=\"headerlink\" title=\"Jenkins Pipeline\"></a>Jenkins Pipeline</h1><h3 id=\"可以將部屬流程視覺化來顯示，請看官方的這張圖\"><a href=\"#可以將部屬流程視覺化來顯示，請看官方的這張圖\" class=\"headerlink\" title=\"可以將部屬流程視覺化來顯示，請看官方的這張圖\"></a>可以將部屬流程視覺化來顯示，請看官方的這張<a href=\"https://jenkins.io/doc/book/pipeline/\" target=\"_blank\" rel=\"noopener\">圖</a></h3><p><img src=\"https://i.imgur.com/OXUX6Ca.png\" alt=\"視覺化\"></p>\n<h3 id=\"新增作業\"><a href=\"#新增作業\" class=\"headerlink\" title=\"新增作業\"></a>新增作業</h3><p><img src=\"https://i.imgur.com/1H6nKrr.png\" alt=\"新增作業\"></p>\n<h3 id=\"選擇-Pipeline-專案\"><a href=\"#選擇-Pipeline-專案\" class=\"headerlink\" title=\"選擇 Pipeline 專案\"></a>選擇 Pipeline 專案</h3><p><img src=\"https://i.imgur.com/Rk6oGvB.png\" alt=\"選擇\"></p>\n<h3 id=\"建立成功之後就可以在-script-的地方撰寫\"><a href=\"#建立成功之後就可以在-script-的地方撰寫\" class=\"headerlink\" title=\"建立成功之後就可以在 script 的地方撰寫\"></a>建立成功之後就可以在 script 的地方撰寫</h3><p><img src=\"https://i.imgur.com/Ms2I0GI.png\" alt=\"建立\"></p>\n<h3 id=\"Pipeline-Script-有分兩種方式\"><a href=\"#Pipeline-Script-有分兩種方式\" class=\"headerlink\" title=\"Pipeline Script 有分兩種方式\"></a>Pipeline Script 有分兩種方式</h3><blockquote>\n<p>Pipeline Script 直接寫在 jenkins Script 上面<br>Pipeline script from SCM 可以使用版控來管理 Pipeline script</p>\n<ul>\n<li>Pipeline Script</li>\n</ul>\n</blockquote>\n<p><img src=\"https://i.imgur.com/1yz6bPX.png\" alt=\"Pipeline Script\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node &#123;</span><br><span class=\"line\">    stage(<span class=\"string\">'Clone'</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">'Clone'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    stage(<span class=\"string\">'Build'</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">'Build'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    stage(<span class=\"string\">'Test'</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">'Teset'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    stage(<span class=\"string\">'Deploy'</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">'Deploy'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"馬上建置\"><a href=\"#馬上建置\" class=\"headerlink\" title=\"馬上建置\"></a>馬上建置</h4><p><img src=\"https://i.imgur.com/RIVUvf9.png\" alt></p>\n<h4 id=\"這時候就可以看到-建置的步驟已經視覺化顯示了\"><a href=\"#這時候就可以看到-建置的步驟已經視覺化顯示了\" class=\"headerlink\" title=\"這時候就可以看到 建置的步驟已經視覺化顯示了\"></a>這時候就可以看到 建置的步驟已經視覺化顯示了</h4><p><img src=\"https://i.imgur.com/yszPWq1.png\" alt></p>\n<h4 id=\"Console-Output\"><a href=\"#Console-Output\" class=\"headerlink\" title=\"Console Output\"></a>Console Output</h4><p><img src=\"https://i.imgur.com/rUJMmpo.png\" alt></p>\n<h4 id=\"這裡可以看到剛剛寫的執行log\"><a href=\"#這裡可以看到剛剛寫的執行log\" class=\"headerlink\" title=\"這裡可以看到剛剛寫的執行log\"></a>這裡可以看到剛剛寫的執行log</h4><p><img src=\"https://i.imgur.com/rgn76nJ.png\" alt></p>\n<ul>\n<li>Pipeline script from SCM</li>\n</ul>\n<p><img src=\"https://i.imgur.com/zD7vhP5.png\" alt></p>\n<p><img src=\"https://i.imgur.com/QkY1rdW.png\" alt></p>\n<blockquote>\n<p>Repository URL 在github上面建立一個專案</p>\n</blockquote>\n<h4 id=\"新增一個檔案叫-Jenkinsfile\"><a href=\"#新增一個檔案叫-Jenkinsfile\" class=\"headerlink\" title=\"新增一個檔案叫　Jenkinsfile　\"></a>新增一個檔案叫　Jenkinsfile　</h4><p><img src=\"https://i.imgur.com/vmYUUY0.png\" alt></p>\n<blockquote>\n<p>檔案名稱要不一樣可以再 Script Path 設定</p>\n</blockquote>\n<h4 id=\"把剛剛寫的code-貼上去，並且-commit\"><a href=\"#把剛剛寫的code-貼上去，並且-commit\" class=\"headerlink\" title=\"把剛剛寫的code 貼上去，並且 commit\"></a>把剛剛寫的code 貼上去，並且 commit</h4><p><img src=\"https://i.imgur.com/p1e0ECp.png\" alt></p>\n<h4 id=\"第二次建置也成功了\"><a href=\"#第二次建置也成功了\" class=\"headerlink\" title=\"第二次建置也成功了\"></a>第二次建置也成功了</h4><p><img src=\"https://i.imgur.com/VLtTcJQ.png\" alt></p>\n<h4 id=\"這時候看一下-Console-Output，確認就是從-git-上面取下來執行的\"><a href=\"#這時候看一下-Console-Output，確認就是從-git-上面取下來執行的\" class=\"headerlink\" title=\"這時候看一下 Console Output，確認就是從 git 上面取下來執行的\"></a>這時候看一下 Console Output，確認就是從 git 上面取下來執行的</h4><p><img src=\"https://i.imgur.com/u3da9mL.png\" alt></p>\n<h2 id=\"Pipeline-Syntax-產生語法的小工具\"><a href=\"#Pipeline-Syntax-產生語法的小工具\" class=\"headerlink\" title=\"Pipeline Syntax 產生語法的小工具\"></a>Pipeline Syntax 產生語法的小工具</h2><p><img src=\"https://i.imgur.com/TNiTpxw.png\" alt></p>\n<p><img src=\"https://i.imgur.com/AEJ81l7.png\" alt></p>\n<h3 id=\"選擇-bat-Windows-Batch-Script\"><a href=\"#選擇-bat-Windows-Batch-Script\" class=\"headerlink\" title=\"選擇 bat: Windows Batch Script\"></a>選擇 bat: Windows Batch Script</h3><p><img src=\"https://i.imgur.com/04A1RjJ.png\" alt></p>\n<h3 id=\"按下-Generate-Pipeline-Script，會產生語法，可以直接在-pipeline-中使用\"><a href=\"#按下-Generate-Pipeline-Script，會產生語法，可以直接在-pipeline-中使用\" class=\"headerlink\" title=\"按下 Generate Pipeline Script，會產生語法，可以直接在 pipeline 中使用\"></a>按下 Generate Pipeline Script，會產生語法，可以直接在 pipeline 中使用</h3><p><img src=\"https://i.imgur.com/0AMFpET.png\" alt></p>\n<blockquote>\n<p>pipeline 是使用 Groovy語言來撰寫，可以參考 <a href=\"http://groovy-lang.org/syntax.html\" target=\"_blank\" rel=\"noopener\">Groovy’s syntax</a></p>\n</blockquote>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li>[Pipeline - Jenkins]<a href=\"https://jenkins.io/doc/book/pipeline/\" target=\"_blank\" rel=\"noopener\">https://jenkins.io/doc/book/pipeline/</a></li>\n<li><a href=\"https://dotblogs.com.tw/aken1215/2016/10/11/000455\" target=\"_blank\" rel=\"noopener\">[DevOps自動化-6] Jenkins持續整合、發布</a></li>\n<li><a href=\"https://testerhome.com/topics/10003\" target=\"_blank\" rel=\"noopener\">[持續交付實踐] pipeline：pipeline使用之快速入門</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Jenkins-Pipeline\"><a href=\"#Jenkins-Pipeline\" class=\"headerlink\" title=\"Jenkins Pipeline\"></a>Jenkins Pipeline</h1><h3 id=\"可以將部屬流程視覺化來顯示，請看官方的這張圖\"><a href=\"#可以將部屬流程視覺化來顯示，請看官方的這張圖\" class=\"headerlink\" title=\"可以將部屬流程視覺化來顯示，請看官方的這張圖\"></a>可以將部屬流程視覺化來顯示，請看官方的這張<a href=\"https://jenkins.io/doc/book/pipeline/\" target=\"_blank\" rel=\"noopener\">圖</a></h3><p><img src=\"https://i.imgur.com/OXUX6Ca.png\" alt=\"視覺化\"></p>\n<h3 id=\"新增作業\"><a href=\"#新增作業\" class=\"headerlink\" title=\"新增作業\"></a>新增作業</h3><p><img src=\"https://i.imgur.com/1H6nKrr.png\" alt=\"新增作業\"></p>\n<h3 id=\"選擇-Pipeline-專案\"><a href=\"#選擇-Pipeline-專案\" class=\"headerlink\" title=\"選擇 Pipeline 專案\"></a>選擇 Pipeline 專案</h3><p><img src=\"https://i.imgur.com/Rk6oGvB.png\" alt=\"選擇\"></p>\n<h3 id=\"建立成功之後就可以在-script-的地方撰寫\"><a href=\"#建立成功之後就可以在-script-的地方撰寫\" class=\"headerlink\" title=\"建立成功之後就可以在 script 的地方撰寫\"></a>建立成功之後就可以在 script 的地方撰寫</h3><p><img src=\"https://i.imgur.com/Ms2I0GI.png\" alt=\"建立\"></p>\n<h3 id=\"Pipeline-Script-有分兩種方式\"><a href=\"#Pipeline-Script-有分兩種方式\" class=\"headerlink\" title=\"Pipeline Script 有分兩種方式\"></a>Pipeline Script 有分兩種方式</h3><blockquote>\n<p>Pipeline Script 直接寫在 jenkins Script 上面<br>Pipeline script from SCM 可以使用版控來管理 Pipeline script</p>\n<ul>\n<li>Pipeline Script</li>\n</ul>\n</blockquote>\n<p><img src=\"https://i.imgur.com/1yz6bPX.png\" alt=\"Pipeline Script\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node &#123;</span><br><span class=\"line\">    stage(<span class=\"string\">'Clone'</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">'Clone'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    stage(<span class=\"string\">'Build'</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">'Build'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    stage(<span class=\"string\">'Test'</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">'Teset'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    stage(<span class=\"string\">'Deploy'</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">'Deploy'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"馬上建置\"><a href=\"#馬上建置\" class=\"headerlink\" title=\"馬上建置\"></a>馬上建置</h4><p><img src=\"https://i.imgur.com/RIVUvf9.png\" alt></p>\n<h4 id=\"這時候就可以看到-建置的步驟已經視覺化顯示了\"><a href=\"#這時候就可以看到-建置的步驟已經視覺化顯示了\" class=\"headerlink\" title=\"這時候就可以看到 建置的步驟已經視覺化顯示了\"></a>這時候就可以看到 建置的步驟已經視覺化顯示了</h4><p><img src=\"https://i.imgur.com/yszPWq1.png\" alt></p>\n<h4 id=\"Console-Output\"><a href=\"#Console-Output\" class=\"headerlink\" title=\"Console Output\"></a>Console Output</h4><p><img src=\"https://i.imgur.com/rUJMmpo.png\" alt></p>\n<h4 id=\"這裡可以看到剛剛寫的執行log\"><a href=\"#這裡可以看到剛剛寫的執行log\" class=\"headerlink\" title=\"這裡可以看到剛剛寫的執行log\"></a>這裡可以看到剛剛寫的執行log</h4><p><img src=\"https://i.imgur.com/rgn76nJ.png\" alt></p>\n<ul>\n<li>Pipeline script from SCM</li>\n</ul>\n<p><img src=\"https://i.imgur.com/zD7vhP5.png\" alt></p>\n<p><img src=\"https://i.imgur.com/QkY1rdW.png\" alt></p>\n<blockquote>\n<p>Repository URL 在github上面建立一個專案</p>\n</blockquote>\n<h4 id=\"新增一個檔案叫-Jenkinsfile\"><a href=\"#新增一個檔案叫-Jenkinsfile\" class=\"headerlink\" title=\"新增一個檔案叫　Jenkinsfile　\"></a>新增一個檔案叫　Jenkinsfile　</h4><p><img src=\"https://i.imgur.com/vmYUUY0.png\" alt></p>\n<blockquote>\n<p>檔案名稱要不一樣可以再 Script Path 設定</p>\n</blockquote>\n<h4 id=\"把剛剛寫的code-貼上去，並且-commit\"><a href=\"#把剛剛寫的code-貼上去，並且-commit\" class=\"headerlink\" title=\"把剛剛寫的code 貼上去，並且 commit\"></a>把剛剛寫的code 貼上去，並且 commit</h4><p><img src=\"https://i.imgur.com/p1e0ECp.png\" alt></p>\n<h4 id=\"第二次建置也成功了\"><a href=\"#第二次建置也成功了\" class=\"headerlink\" title=\"第二次建置也成功了\"></a>第二次建置也成功了</h4><p><img src=\"https://i.imgur.com/VLtTcJQ.png\" alt></p>\n<h4 id=\"這時候看一下-Console-Output，確認就是從-git-上面取下來執行的\"><a href=\"#這時候看一下-Console-Output，確認就是從-git-上面取下來執行的\" class=\"headerlink\" title=\"這時候看一下 Console Output，確認就是從 git 上面取下來執行的\"></a>這時候看一下 Console Output，確認就是從 git 上面取下來執行的</h4><p><img src=\"https://i.imgur.com/u3da9mL.png\" alt></p>\n<h2 id=\"Pipeline-Syntax-產生語法的小工具\"><a href=\"#Pipeline-Syntax-產生語法的小工具\" class=\"headerlink\" title=\"Pipeline Syntax 產生語法的小工具\"></a>Pipeline Syntax 產生語法的小工具</h2><p><img src=\"https://i.imgur.com/TNiTpxw.png\" alt></p>\n<p><img src=\"https://i.imgur.com/AEJ81l7.png\" alt></p>\n<h3 id=\"選擇-bat-Windows-Batch-Script\"><a href=\"#選擇-bat-Windows-Batch-Script\" class=\"headerlink\" title=\"選擇 bat: Windows Batch Script\"></a>選擇 bat: Windows Batch Script</h3><p><img src=\"https://i.imgur.com/04A1RjJ.png\" alt></p>\n<h3 id=\"按下-Generate-Pipeline-Script，會產生語法，可以直接在-pipeline-中使用\"><a href=\"#按下-Generate-Pipeline-Script，會產生語法，可以直接在-pipeline-中使用\" class=\"headerlink\" title=\"按下 Generate Pipeline Script，會產生語法，可以直接在 pipeline 中使用\"></a>按下 Generate Pipeline Script，會產生語法，可以直接在 pipeline 中使用</h3><p><img src=\"https://i.imgur.com/0AMFpET.png\" alt></p>\n<blockquote>\n<p>pipeline 是使用 Groovy語言來撰寫，可以參考 <a href=\"http://groovy-lang.org/syntax.html\" target=\"_blank\" rel=\"noopener\">Groovy’s syntax</a></p>\n</blockquote>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li>[Pipeline - Jenkins]<a href=\"https://jenkins.io/doc/book/pipeline/\" target=\"_blank\" rel=\"noopener\">https://jenkins.io/doc/book/pipeline/</a></li>\n<li><a href=\"https://dotblogs.com.tw/aken1215/2016/10/11/000455\" target=\"_blank\" rel=\"noopener\">[DevOps自動化-6] Jenkins持續整合、發布</a></li>\n<li><a href=\"https://testerhome.com/topics/10003\" target=\"_blank\" rel=\"noopener\">[持續交付實踐] pipeline：pipeline使用之快速入門</a></li>\n</ul>\n"},{"title":"Json Web Token","date":"2019-06-17T08:34:05.000Z","_content":"\n## Json Web Token\n\n```javascript\nvar jwt = require('jsonwebtoken');\nvar token = jwt.sign({ data: 'mydata' }, 'mysecret');\nconsole.log(`Token : ${token}`);\n\nvar decode = jwt.verify(token, 'mysecret');\nconsole.log(`Data : ${decode.data}`);\n```\n\n![](./2019-06-17-16-40-23.png)\n\n## Reference\n\n- [JWT](https://jwt.io/)\n- [node-jsonwebtoken](https://github.com/auth0/node-jsonwebtoken)\n","source":"_posts/Json-Web-Token.md","raw":"---\ntitle: Json Web Token\ndate: 2019-06-17 16:34:05\ncategories:\n  - JWT\ntags:\n  - JWT\n---\n\n## Json Web Token\n\n```javascript\nvar jwt = require('jsonwebtoken');\nvar token = jwt.sign({ data: 'mydata' }, 'mysecret');\nconsole.log(`Token : ${token}`);\n\nvar decode = jwt.verify(token, 'mysecret');\nconsole.log(`Data : ${decode.data}`);\n```\n\n![](./2019-06-17-16-40-23.png)\n\n## Reference\n\n- [JWT](https://jwt.io/)\n- [node-jsonwebtoken](https://github.com/auth0/node-jsonwebtoken)\n","slug":"Json-Web-Token","published":1,"updated":"2019-06-17T08:42:03.374Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xun00281q229l9f6m9f","content":"<h2 id=\"Json-Web-Token\"><a href=\"#Json-Web-Token\" class=\"headerlink\" title=\"Json Web Token\"></a>Json Web Token</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> jwt = <span class=\"built_in\">require</span>(<span class=\"string\">'jsonwebtoken'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> token = jwt.sign(&#123; <span class=\"attr\">data</span>: <span class=\"string\">'mydata'</span> &#125;, <span class=\"string\">'mysecret'</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">`Token : <span class=\"subst\">$&#123;token&#125;</span>`</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> decode = jwt.verify(token, <span class=\"string\">'mysecret'</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">`Data : <span class=\"subst\">$&#123;decode.data&#125;</span>`</span>);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"./2019-06-17-16-40-23.png\" alt></p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><ul>\n<li><a href=\"https://jwt.io/\" target=\"_blank\" rel=\"noopener\">JWT</a></li>\n<li><a href=\"https://github.com/auth0/node-jsonwebtoken\" target=\"_blank\" rel=\"noopener\">node-jsonwebtoken</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Json-Web-Token\"><a href=\"#Json-Web-Token\" class=\"headerlink\" title=\"Json Web Token\"></a>Json Web Token</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> jwt = <span class=\"built_in\">require</span>(<span class=\"string\">'jsonwebtoken'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> token = jwt.sign(&#123; <span class=\"attr\">data</span>: <span class=\"string\">'mydata'</span> &#125;, <span class=\"string\">'mysecret'</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">`Token : <span class=\"subst\">$&#123;token&#125;</span>`</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> decode = jwt.verify(token, <span class=\"string\">'mysecret'</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">`Data : <span class=\"subst\">$&#123;decode.data&#125;</span>`</span>);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"./2019-06-17-16-40-23.png\" alt></p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><ul>\n<li><a href=\"https://jwt.io/\" target=\"_blank\" rel=\"noopener\">JWT</a></li>\n<li><a href=\"https://github.com/auth0/node-jsonwebtoken\" target=\"_blank\" rel=\"noopener\">node-jsonwebtoken</a></li>\n</ul>\n"},{"title":"Kafka學習","date":"2018-10-17T09:27:22.000Z","_content":"# Kafka\n\n  ### Broker 叢集\n> Kafka 叢集\n  ### Topic 主題\n> 每條發布的消息的有一個主題，像是頻道一樣\n  #### Patition \n> 每個 Topic 包含多個 Patition\n  ### Producer 生產者\n> 生產者負責發布消息到 Broker 上\n  ### Consumer 消費者\n> 消費者向 Kafka 讀取消息\n  #### Conusumer Group\n> 消費者群組\n\n### Kafka Client\n\n    * Confluent.Kafka\n    * https://cwiki.apache.org/confluence/display/KAFKA/Clients#Clients-.NET\n    * https://github.com/confluentinc/confluent-kafka-dotnet\n\n### Kafka GUI\n\n    * Kafka Tool\n    * http://www.kafkatool.com/\n\n## 參考網站\n\n* [Kafka剖析（一）：Kafka背景及架构介绍](http://www.infoq.com/cn/articles/kafka-analysis-part-1)\n* [kafka](http://kafka.apache.org/intro)\n* [為什麼Kafka這麼快](https://read01.com/Dx7n63.html#.W02zFtIzaUk)","source":"_posts/Kafka學習.md","raw":"---\ntitle: Kafka學習\ndate: 2018-10-17 17:27:22\ncategories:\n- Kafka\ntags:\n- Kafka\n---\n# Kafka\n\n  ### Broker 叢集\n> Kafka 叢集\n  ### Topic 主題\n> 每條發布的消息的有一個主題，像是頻道一樣\n  #### Patition \n> 每個 Topic 包含多個 Patition\n  ### Producer 生產者\n> 生產者負責發布消息到 Broker 上\n  ### Consumer 消費者\n> 消費者向 Kafka 讀取消息\n  #### Conusumer Group\n> 消費者群組\n\n### Kafka Client\n\n    * Confluent.Kafka\n    * https://cwiki.apache.org/confluence/display/KAFKA/Clients#Clients-.NET\n    * https://github.com/confluentinc/confluent-kafka-dotnet\n\n### Kafka GUI\n\n    * Kafka Tool\n    * http://www.kafkatool.com/\n\n## 參考網站\n\n* [Kafka剖析（一）：Kafka背景及架构介绍](http://www.infoq.com/cn/articles/kafka-analysis-part-1)\n* [kafka](http://kafka.apache.org/intro)\n* [為什麼Kafka這麼快](https://read01.com/Dx7n63.html#.W02zFtIzaUk)","slug":"Kafka學習","published":1,"updated":"2019-06-03T01:52:24.694Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xuo002b1q226v1sw7a1","content":"<h1 id=\"Kafka\"><a href=\"#Kafka\" class=\"headerlink\" title=\"Kafka\"></a>Kafka</h1><h3 id=\"Broker-叢集\"><a href=\"#Broker-叢集\" class=\"headerlink\" title=\"Broker 叢集\"></a>Broker 叢集</h3><blockquote>\n<p>Kafka 叢集</p>\n</blockquote>\n<h3 id=\"Topic-主題\"><a href=\"#Topic-主題\" class=\"headerlink\" title=\"Topic 主題\"></a>Topic 主題</h3><blockquote>\n<p>每條發布的消息的有一個主題，像是頻道一樣</p>\n</blockquote>\n<h4 id=\"Patition\"><a href=\"#Patition\" class=\"headerlink\" title=\"Patition\"></a>Patition</h4><blockquote>\n<p>每個 Topic 包含多個 Patition</p>\n</blockquote>\n<h3 id=\"Producer-生產者\"><a href=\"#Producer-生產者\" class=\"headerlink\" title=\"Producer 生產者\"></a>Producer 生產者</h3><blockquote>\n<p>生產者負責發布消息到 Broker 上</p>\n</blockquote>\n<h3 id=\"Consumer-消費者\"><a href=\"#Consumer-消費者\" class=\"headerlink\" title=\"Consumer 消費者\"></a>Consumer 消費者</h3><blockquote>\n<p>消費者向 Kafka 讀取消息</p>\n</blockquote>\n<h4 id=\"Conusumer-Group\"><a href=\"#Conusumer-Group\" class=\"headerlink\" title=\"Conusumer Group\"></a>Conusumer Group</h4><blockquote>\n<p>消費者群組</p>\n</blockquote>\n<h3 id=\"Kafka-Client\"><a href=\"#Kafka-Client\" class=\"headerlink\" title=\"Kafka Client\"></a>Kafka Client</h3><pre><code>* Confluent.Kafka\n* https://cwiki.apache.org/confluence/display/KAFKA/Clients#Clients-.NET\n* https://github.com/confluentinc/confluent-kafka-dotnet</code></pre><h3 id=\"Kafka-GUI\"><a href=\"#Kafka-GUI\" class=\"headerlink\" title=\"Kafka GUI\"></a>Kafka GUI</h3><pre><code>* Kafka Tool\n* http://www.kafkatool.com/</code></pre><h2 id=\"參考網站\"><a href=\"#參考網站\" class=\"headerlink\" title=\"參考網站\"></a>參考網站</h2><ul>\n<li><a href=\"http://www.infoq.com/cn/articles/kafka-analysis-part-1\" target=\"_blank\" rel=\"noopener\">Kafka剖析（一）：Kafka背景及架构介绍</a></li>\n<li><a href=\"http://kafka.apache.org/intro\" target=\"_blank\" rel=\"noopener\">kafka</a></li>\n<li><a href=\"https://read01.com/Dx7n63.html#.W02zFtIzaUk\" target=\"_blank\" rel=\"noopener\">為什麼Kafka這麼快</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Kafka\"><a href=\"#Kafka\" class=\"headerlink\" title=\"Kafka\"></a>Kafka</h1><h3 id=\"Broker-叢集\"><a href=\"#Broker-叢集\" class=\"headerlink\" title=\"Broker 叢集\"></a>Broker 叢集</h3><blockquote>\n<p>Kafka 叢集</p>\n</blockquote>\n<h3 id=\"Topic-主題\"><a href=\"#Topic-主題\" class=\"headerlink\" title=\"Topic 主題\"></a>Topic 主題</h3><blockquote>\n<p>每條發布的消息的有一個主題，像是頻道一樣</p>\n</blockquote>\n<h4 id=\"Patition\"><a href=\"#Patition\" class=\"headerlink\" title=\"Patition\"></a>Patition</h4><blockquote>\n<p>每個 Topic 包含多個 Patition</p>\n</blockquote>\n<h3 id=\"Producer-生產者\"><a href=\"#Producer-生產者\" class=\"headerlink\" title=\"Producer 生產者\"></a>Producer 生產者</h3><blockquote>\n<p>生產者負責發布消息到 Broker 上</p>\n</blockquote>\n<h3 id=\"Consumer-消費者\"><a href=\"#Consumer-消費者\" class=\"headerlink\" title=\"Consumer 消費者\"></a>Consumer 消費者</h3><blockquote>\n<p>消費者向 Kafka 讀取消息</p>\n</blockquote>\n<h4 id=\"Conusumer-Group\"><a href=\"#Conusumer-Group\" class=\"headerlink\" title=\"Conusumer Group\"></a>Conusumer Group</h4><blockquote>\n<p>消費者群組</p>\n</blockquote>\n<h3 id=\"Kafka-Client\"><a href=\"#Kafka-Client\" class=\"headerlink\" title=\"Kafka Client\"></a>Kafka Client</h3><pre><code>* Confluent.Kafka\n* https://cwiki.apache.org/confluence/display/KAFKA/Clients#Clients-.NET\n* https://github.com/confluentinc/confluent-kafka-dotnet</code></pre><h3 id=\"Kafka-GUI\"><a href=\"#Kafka-GUI\" class=\"headerlink\" title=\"Kafka GUI\"></a>Kafka GUI</h3><pre><code>* Kafka Tool\n* http://www.kafkatool.com/</code></pre><h2 id=\"參考網站\"><a href=\"#參考網站\" class=\"headerlink\" title=\"參考網站\"></a>參考網站</h2><ul>\n<li><a href=\"http://www.infoq.com/cn/articles/kafka-analysis-part-1\" target=\"_blank\" rel=\"noopener\">Kafka剖析（一）：Kafka背景及架构介绍</a></li>\n<li><a href=\"http://kafka.apache.org/intro\" target=\"_blank\" rel=\"noopener\">kafka</a></li>\n<li><a href=\"https://read01.com/Dx7n63.html#.W02zFtIzaUk\" target=\"_blank\" rel=\"noopener\">為什麼Kafka這麼快</a></li>\n</ul>\n"},{"title":"Kubernetes Logging with Fluentd","date":"2019-04-01T07:28:43.000Z","_content":"\n# Kubernetes Logging with Fluentd\n\n\n\n# 參考\n\n* [Kubernetes Logging with Fluentd](https://docs.fluentd.org/v0.12/articles/kubernetes-fluentd#getting-started)\n* [fluent/fluentd-kubernetes-daemonset](https://github.com/fluent/fluentd-kubernetes-daemonset)\n* [Logging in Kubernetes with Elasticsearch, Kibana, and Fluentd](https://mherman.org/blog/logging-in-kubernetes-with-elasticsearch-Kibana-fluentd/)","source":"_posts/Kubernetes-Logging-with-Fluentd.md","raw":"---\ntitle: Kubernetes Logging with Fluentd\ndate: 2019-04-01 15:28:43\ncategories:\n- Fluentd\ntags:\n- Kubernetes\n- kubectl\n- Docker\n---\n\n# Kubernetes Logging with Fluentd\n\n\n\n# 參考\n\n* [Kubernetes Logging with Fluentd](https://docs.fluentd.org/v0.12/articles/kubernetes-fluentd#getting-started)\n* [fluent/fluentd-kubernetes-daemonset](https://github.com/fluent/fluentd-kubernetes-daemonset)\n* [Logging in Kubernetes with Elasticsearch, Kibana, and Fluentd](https://mherman.org/blog/logging-in-kubernetes-with-elasticsearch-Kibana-fluentd/)","slug":"Kubernetes-Logging-with-Fluentd","published":1,"updated":"2019-06-03T01:52:24.694Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xuq002g1q22h1ikfxjb","content":"<h1 id=\"Kubernetes-Logging-with-Fluentd\"><a href=\"#Kubernetes-Logging-with-Fluentd\" class=\"headerlink\" title=\"Kubernetes Logging with Fluentd\"></a>Kubernetes Logging with Fluentd</h1><h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://docs.fluentd.org/v0.12/articles/kubernetes-fluentd#getting-started\" target=\"_blank\" rel=\"noopener\">Kubernetes Logging with Fluentd</a></li>\n<li><a href=\"https://github.com/fluent/fluentd-kubernetes-daemonset\" target=\"_blank\" rel=\"noopener\">fluent/fluentd-kubernetes-daemonset</a></li>\n<li><a href=\"https://mherman.org/blog/logging-in-kubernetes-with-elasticsearch-Kibana-fluentd/\" target=\"_blank\" rel=\"noopener\">Logging in Kubernetes with Elasticsearch, Kibana, and Fluentd</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Kubernetes-Logging-with-Fluentd\"><a href=\"#Kubernetes-Logging-with-Fluentd\" class=\"headerlink\" title=\"Kubernetes Logging with Fluentd\"></a>Kubernetes Logging with Fluentd</h1><h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://docs.fluentd.org/v0.12/articles/kubernetes-fluentd#getting-started\" target=\"_blank\" rel=\"noopener\">Kubernetes Logging with Fluentd</a></li>\n<li><a href=\"https://github.com/fluent/fluentd-kubernetes-daemonset\" target=\"_blank\" rel=\"noopener\">fluent/fluentd-kubernetes-daemonset</a></li>\n<li><a href=\"https://mherman.org/blog/logging-in-kubernetes-with-elasticsearch-Kibana-fluentd/\" target=\"_blank\" rel=\"noopener\">Logging in Kubernetes with Elasticsearch, Kibana, and Fluentd</a></li>\n</ul>\n"},{"title":"Linq Join Lambda expression","date":"2019-04-18T10:06:29.000Z","_content":"\n# Linq Join Lambda expression\n\n> [Eaxlample](https://github.com/ste5022424/Linq_Join_Lambda_Expression.git)\n\n```C#\n\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace ConsoleApp20\n{\n    internal class Program\n    {\n        private static void Main(string[] args)\n        {\n            var memberdata = new List<Member>()\n            {\n                new Member(){ MemberID = 1, MemberAccount = \"小明\"},\n                new Member(){ MemberID = 2, MemberAccount = \"小王\"},\n                new Member(){ MemberID = 3, MemberAccount = \"小華\"},\n            };\n\n            var scoredata = new List<Score>()\n            {\n                new Score(){ MemberID = 1, score = 100},\n                new Score(){ MemberID = 2, score = 50},\n                new Score(){ MemberID = 3, score = 40},\n            };\n\n            var membergamelogdata = new List<MemberGameLog>()\n            {\n                new MemberGameLog() { MemberID = 1 , LogID = 4001 , LogName = \"打棒球\" },\n                new MemberGameLog() { MemberID = 2 , LogID = 4002 , LogName = \"打羽球\" },\n                new MemberGameLog() { MemberID = 3 , LogID = 4003 , LogName = \"打籃球\" }\n            };\n\n            var joindata = memberdata\n                            .Join(membergamelogdata,\n                            member => member.MemberID,\n                            gamelogdata => gamelogdata.MemberID,\n                            (member, gamelogdata) =>\n                            new\n                            {\n                                MemberID = member.MemberID,\n                                MemberAccount = member.MemberAccount,\n                                LogID = gamelogdata.LogID,\n                                LogName = gamelogdata.LogName\n                            })\n                            .Join(scoredata,\n                            memberjoin1 => memberjoin1.MemberID,\n                            score => score.MemberID, (memberjoin1, thescore) =>\n                            {\n                                // Declare variable within LINQ select\n                                var getscorestring = getScoreString(thescore.score);\n                                return new\n                                {\n                                    MemberID = memberjoin1.MemberID,\n                                    MemberAccount = memberjoin1.MemberAccount,\n                                    score = getscorestring,\n                                    LogID = memberjoin1.LogID,\n                                    LogName = memberjoin1.LogName\n                                };\n                            });\n\n            foreach (var item in joindata)\n            {\n                Console.WriteLine($\"{item.MemberID}, {item.MemberAccount}, {item.score}, {item.LogID}, {item.LogName}\");\n            }\n        }\n\n        private static string getScoreString(int score)\n        {\n            if (score > 80)\n            {\n                return \"甲\";\n            }\n            else if (score > 60)\n            {\n                return \"乙\";\n            }\n            else\n            {\n                return \"丙\";\n            }\n        }\n\n        private class Score\n        {\n            public int MemberID { get; set; }\n            public int score { get; set; }\n        }\n\n        private class Member\n        {\n            public int MemberID { get; set; }\n\n            public string MemberAccount { get; set; }\n        }\n\n        private class MemberGameLog\n        {\n            public int MemberID { get; set; }\n\n            public int LogID { get; set; }\n            public string LogName { get; set; }\n        }\n    }\n}\n\n```\n\n![](https://i.imgur.com/iE0Zy2O.png)\n\n\n# 參考\n\n[Linq Join & Lambda Join](https://dotblogs.com.tw/erictsaiblog/2015/05/17/151321)\n[How to rewrite this LINQ using join with lambda expressions?](https://stackoverflow.com/questions/13692015/how-to-rewrite-this-linq-using-join-with-lambda-expressions)\n[How to join 3 tables with lambda expression?](https://stackoverflow.com/questions/9120088/how-to-join-3-tables-with-lambda-expression)\n[Declare variable within LINQ select](https://stackoverflow.com/questions/29251075/declare-variable-within-linq-selectx-new)","source":"_posts/Linq-Join-Lambda-expression.md","raw":"---\ntitle: Linq Join Lambda expression\ndate: 2019-04-18 18:06:29\ncategories:\n- Linq\ntags:\n- Linq\n- C#\n---\n\n# Linq Join Lambda expression\n\n> [Eaxlample](https://github.com/ste5022424/Linq_Join_Lambda_Expression.git)\n\n```C#\n\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace ConsoleApp20\n{\n    internal class Program\n    {\n        private static void Main(string[] args)\n        {\n            var memberdata = new List<Member>()\n            {\n                new Member(){ MemberID = 1, MemberAccount = \"小明\"},\n                new Member(){ MemberID = 2, MemberAccount = \"小王\"},\n                new Member(){ MemberID = 3, MemberAccount = \"小華\"},\n            };\n\n            var scoredata = new List<Score>()\n            {\n                new Score(){ MemberID = 1, score = 100},\n                new Score(){ MemberID = 2, score = 50},\n                new Score(){ MemberID = 3, score = 40},\n            };\n\n            var membergamelogdata = new List<MemberGameLog>()\n            {\n                new MemberGameLog() { MemberID = 1 , LogID = 4001 , LogName = \"打棒球\" },\n                new MemberGameLog() { MemberID = 2 , LogID = 4002 , LogName = \"打羽球\" },\n                new MemberGameLog() { MemberID = 3 , LogID = 4003 , LogName = \"打籃球\" }\n            };\n\n            var joindata = memberdata\n                            .Join(membergamelogdata,\n                            member => member.MemberID,\n                            gamelogdata => gamelogdata.MemberID,\n                            (member, gamelogdata) =>\n                            new\n                            {\n                                MemberID = member.MemberID,\n                                MemberAccount = member.MemberAccount,\n                                LogID = gamelogdata.LogID,\n                                LogName = gamelogdata.LogName\n                            })\n                            .Join(scoredata,\n                            memberjoin1 => memberjoin1.MemberID,\n                            score => score.MemberID, (memberjoin1, thescore) =>\n                            {\n                                // Declare variable within LINQ select\n                                var getscorestring = getScoreString(thescore.score);\n                                return new\n                                {\n                                    MemberID = memberjoin1.MemberID,\n                                    MemberAccount = memberjoin1.MemberAccount,\n                                    score = getscorestring,\n                                    LogID = memberjoin1.LogID,\n                                    LogName = memberjoin1.LogName\n                                };\n                            });\n\n            foreach (var item in joindata)\n            {\n                Console.WriteLine($\"{item.MemberID}, {item.MemberAccount}, {item.score}, {item.LogID}, {item.LogName}\");\n            }\n        }\n\n        private static string getScoreString(int score)\n        {\n            if (score > 80)\n            {\n                return \"甲\";\n            }\n            else if (score > 60)\n            {\n                return \"乙\";\n            }\n            else\n            {\n                return \"丙\";\n            }\n        }\n\n        private class Score\n        {\n            public int MemberID { get; set; }\n            public int score { get; set; }\n        }\n\n        private class Member\n        {\n            public int MemberID { get; set; }\n\n            public string MemberAccount { get; set; }\n        }\n\n        private class MemberGameLog\n        {\n            public int MemberID { get; set; }\n\n            public int LogID { get; set; }\n            public string LogName { get; set; }\n        }\n    }\n}\n\n```\n\n![](https://i.imgur.com/iE0Zy2O.png)\n\n\n# 參考\n\n[Linq Join & Lambda Join](https://dotblogs.com.tw/erictsaiblog/2015/05/17/151321)\n[How to rewrite this LINQ using join with lambda expressions?](https://stackoverflow.com/questions/13692015/how-to-rewrite-this-linq-using-join-with-lambda-expressions)\n[How to join 3 tables with lambda expression?](https://stackoverflow.com/questions/9120088/how-to-join-3-tables-with-lambda-expression)\n[Declare variable within LINQ select](https://stackoverflow.com/questions/29251075/declare-variable-within-linq-selectx-new)","slug":"Linq-Join-Lambda-expression","published":1,"updated":"2019-06-03T01:52:24.695Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xur002j1q22aymjic4a","content":"<h1 id=\"Linq-Join-Lambda-expression\"><a href=\"#Linq-Join-Lambda-expression\" class=\"headerlink\" title=\"Linq Join Lambda expression\"></a>Linq Join Lambda expression</h1><blockquote>\n<p><a href=\"https://github.com/ste5022424/Linq_Join_Lambda_Expression.git\" target=\"_blank\" rel=\"noopener\">Eaxlample</a></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">using System;</span><br><span class=\"line\">using System.Collections.Generic;</span><br><span class=\"line\">using System.Linq;</span><br><span class=\"line\">using System.Text;</span><br><span class=\"line\">using System.Threading.Tasks;</span><br><span class=\"line\"></span><br><span class=\"line\">namespace ConsoleApp20</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    internal class Program</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        private static void Main(string[] args)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            var memberdata = new List&lt;Member&gt;()</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                new Member()&#123; MemberID = 1, MemberAccount = &quot;小明&quot;&#125;,</span><br><span class=\"line\">                new Member()&#123; MemberID = 2, MemberAccount = &quot;小王&quot;&#125;,</span><br><span class=\"line\">                new Member()&#123; MemberID = 3, MemberAccount = &quot;小華&quot;&#125;,</span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">            var scoredata = new List&lt;Score&gt;()</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                new Score()&#123; MemberID = 1, score = 100&#125;,</span><br><span class=\"line\">                new Score()&#123; MemberID = 2, score = 50&#125;,</span><br><span class=\"line\">                new Score()&#123; MemberID = 3, score = 40&#125;,</span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">            var membergamelogdata = new List&lt;MemberGameLog&gt;()</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                new MemberGameLog() &#123; MemberID = 1 , LogID = 4001 , LogName = &quot;打棒球&quot; &#125;,</span><br><span class=\"line\">                new MemberGameLog() &#123; MemberID = 2 , LogID = 4002 , LogName = &quot;打羽球&quot; &#125;,</span><br><span class=\"line\">                new MemberGameLog() &#123; MemberID = 3 , LogID = 4003 , LogName = &quot;打籃球&quot; &#125;</span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">            var joindata = memberdata</span><br><span class=\"line\">                            .Join(membergamelogdata,</span><br><span class=\"line\">                            member =&gt; member.MemberID,</span><br><span class=\"line\">                            gamelogdata =&gt; gamelogdata.MemberID,</span><br><span class=\"line\">                            (member, gamelogdata) =&gt;</span><br><span class=\"line\">                            new</span><br><span class=\"line\">                            &#123;</span><br><span class=\"line\">                                MemberID = member.MemberID,</span><br><span class=\"line\">                                MemberAccount = member.MemberAccount,</span><br><span class=\"line\">                                LogID = gamelogdata.LogID,</span><br><span class=\"line\">                                LogName = gamelogdata.LogName</span><br><span class=\"line\">                            &#125;)</span><br><span class=\"line\">                            .Join(scoredata,</span><br><span class=\"line\">                            memberjoin1 =&gt; memberjoin1.MemberID,</span><br><span class=\"line\">                            score =&gt; score.MemberID, (memberjoin1, thescore) =&gt;</span><br><span class=\"line\">                            &#123;</span><br><span class=\"line\">                                // Declare variable within LINQ select</span><br><span class=\"line\">                                var getscorestring = getScoreString(thescore.score);</span><br><span class=\"line\">                                return new</span><br><span class=\"line\">                                &#123;</span><br><span class=\"line\">                                    MemberID = memberjoin1.MemberID,</span><br><span class=\"line\">                                    MemberAccount = memberjoin1.MemberAccount,</span><br><span class=\"line\">                                    score = getscorestring,</span><br><span class=\"line\">                                    LogID = memberjoin1.LogID,</span><br><span class=\"line\">                                    LogName = memberjoin1.LogName</span><br><span class=\"line\">                                &#125;;</span><br><span class=\"line\">                            &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">            foreach (var item in joindata)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Console.WriteLine($&quot;&#123;item.MemberID&#125;, &#123;item.MemberAccount&#125;, &#123;item.score&#125;, &#123;item.LogID&#125;, &#123;item.LogName&#125;&quot;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        private static string getScoreString(int score)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if (score &gt; 80)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                return &quot;甲&quot;;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else if (score &gt; 60)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                return &quot;乙&quot;;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                return &quot;丙&quot;;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        private class Score</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            public int MemberID &#123; get; set; &#125;</span><br><span class=\"line\">            public int score &#123; get; set; &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        private class Member</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            public int MemberID &#123; get; set; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            public string MemberAccount &#123; get; set; &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        private class MemberGameLog</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            public int MemberID &#123; get; set; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            public int LogID &#123; get; set; &#125;</span><br><span class=\"line\">            public string LogName &#123; get; set; &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/iE0Zy2O.png\" alt></p>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><p><a href=\"https://dotblogs.com.tw/erictsaiblog/2015/05/17/151321\" target=\"_blank\" rel=\"noopener\">Linq Join &amp; Lambda Join</a><br><a href=\"https://stackoverflow.com/questions/13692015/how-to-rewrite-this-linq-using-join-with-lambda-expressions\" target=\"_blank\" rel=\"noopener\">How to rewrite this LINQ using join with lambda expressions?</a><br><a href=\"https://stackoverflow.com/questions/9120088/how-to-join-3-tables-with-lambda-expression\" target=\"_blank\" rel=\"noopener\">How to join 3 tables with lambda expression?</a><br><a href=\"https://stackoverflow.com/questions/29251075/declare-variable-within-linq-selectx-new\" target=\"_blank\" rel=\"noopener\">Declare variable within LINQ select</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Linq-Join-Lambda-expression\"><a href=\"#Linq-Join-Lambda-expression\" class=\"headerlink\" title=\"Linq Join Lambda expression\"></a>Linq Join Lambda expression</h1><blockquote>\n<p><a href=\"https://github.com/ste5022424/Linq_Join_Lambda_Expression.git\" target=\"_blank\" rel=\"noopener\">Eaxlample</a></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">using System;</span><br><span class=\"line\">using System.Collections.Generic;</span><br><span class=\"line\">using System.Linq;</span><br><span class=\"line\">using System.Text;</span><br><span class=\"line\">using System.Threading.Tasks;</span><br><span class=\"line\"></span><br><span class=\"line\">namespace ConsoleApp20</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    internal class Program</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        private static void Main(string[] args)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            var memberdata = new List&lt;Member&gt;()</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                new Member()&#123; MemberID = 1, MemberAccount = &quot;小明&quot;&#125;,</span><br><span class=\"line\">                new Member()&#123; MemberID = 2, MemberAccount = &quot;小王&quot;&#125;,</span><br><span class=\"line\">                new Member()&#123; MemberID = 3, MemberAccount = &quot;小華&quot;&#125;,</span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">            var scoredata = new List&lt;Score&gt;()</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                new Score()&#123; MemberID = 1, score = 100&#125;,</span><br><span class=\"line\">                new Score()&#123; MemberID = 2, score = 50&#125;,</span><br><span class=\"line\">                new Score()&#123; MemberID = 3, score = 40&#125;,</span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">            var membergamelogdata = new List&lt;MemberGameLog&gt;()</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                new MemberGameLog() &#123; MemberID = 1 , LogID = 4001 , LogName = &quot;打棒球&quot; &#125;,</span><br><span class=\"line\">                new MemberGameLog() &#123; MemberID = 2 , LogID = 4002 , LogName = &quot;打羽球&quot; &#125;,</span><br><span class=\"line\">                new MemberGameLog() &#123; MemberID = 3 , LogID = 4003 , LogName = &quot;打籃球&quot; &#125;</span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">            var joindata = memberdata</span><br><span class=\"line\">                            .Join(membergamelogdata,</span><br><span class=\"line\">                            member =&gt; member.MemberID,</span><br><span class=\"line\">                            gamelogdata =&gt; gamelogdata.MemberID,</span><br><span class=\"line\">                            (member, gamelogdata) =&gt;</span><br><span class=\"line\">                            new</span><br><span class=\"line\">                            &#123;</span><br><span class=\"line\">                                MemberID = member.MemberID,</span><br><span class=\"line\">                                MemberAccount = member.MemberAccount,</span><br><span class=\"line\">                                LogID = gamelogdata.LogID,</span><br><span class=\"line\">                                LogName = gamelogdata.LogName</span><br><span class=\"line\">                            &#125;)</span><br><span class=\"line\">                            .Join(scoredata,</span><br><span class=\"line\">                            memberjoin1 =&gt; memberjoin1.MemberID,</span><br><span class=\"line\">                            score =&gt; score.MemberID, (memberjoin1, thescore) =&gt;</span><br><span class=\"line\">                            &#123;</span><br><span class=\"line\">                                // Declare variable within LINQ select</span><br><span class=\"line\">                                var getscorestring = getScoreString(thescore.score);</span><br><span class=\"line\">                                return new</span><br><span class=\"line\">                                &#123;</span><br><span class=\"line\">                                    MemberID = memberjoin1.MemberID,</span><br><span class=\"line\">                                    MemberAccount = memberjoin1.MemberAccount,</span><br><span class=\"line\">                                    score = getscorestring,</span><br><span class=\"line\">                                    LogID = memberjoin1.LogID,</span><br><span class=\"line\">                                    LogName = memberjoin1.LogName</span><br><span class=\"line\">                                &#125;;</span><br><span class=\"line\">                            &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">            foreach (var item in joindata)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Console.WriteLine($&quot;&#123;item.MemberID&#125;, &#123;item.MemberAccount&#125;, &#123;item.score&#125;, &#123;item.LogID&#125;, &#123;item.LogName&#125;&quot;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        private static string getScoreString(int score)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            if (score &gt; 80)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                return &quot;甲&quot;;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else if (score &gt; 60)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                return &quot;乙&quot;;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            else</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                return &quot;丙&quot;;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        private class Score</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            public int MemberID &#123; get; set; &#125;</span><br><span class=\"line\">            public int score &#123; get; set; &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        private class Member</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            public int MemberID &#123; get; set; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            public string MemberAccount &#123; get; set; &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        private class MemberGameLog</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            public int MemberID &#123; get; set; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            public int LogID &#123; get; set; &#125;</span><br><span class=\"line\">            public string LogName &#123; get; set; &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/iE0Zy2O.png\" alt></p>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><p><a href=\"https://dotblogs.com.tw/erictsaiblog/2015/05/17/151321\" target=\"_blank\" rel=\"noopener\">Linq Join &amp; Lambda Join</a><br><a href=\"https://stackoverflow.com/questions/13692015/how-to-rewrite-this-linq-using-join-with-lambda-expressions\" target=\"_blank\" rel=\"noopener\">How to rewrite this LINQ using join with lambda expressions?</a><br><a href=\"https://stackoverflow.com/questions/9120088/how-to-join-3-tables-with-lambda-expression\" target=\"_blank\" rel=\"noopener\">How to join 3 tables with lambda expression?</a><br><a href=\"https://stackoverflow.com/questions/29251075/declare-variable-within-linq-selectx-new\" target=\"_blank\" rel=\"noopener\">Declare variable within LINQ select</a></p>\n"},{"title":"Mysql on Docker","date":"2019-05-28T01:52:26.000Z","_content":"\n# Mysql on Docker\n\n> docker-compose.yml\n\n```bash=\nversion: \"3.1\"\nservices:\n  db:\n    container_name: \"mysql\"\n    image: \"mysql\"\n    volumes:\n    - \"/data/mysql:/var/lib/mysql\"\n    command: --default-authentication-plugin=mysql_native_password\n    restart: always\n    environment:\n      MYSQL_ROOT_PASSWORD: \"root\"\n\n  adminer:\n    container_name: \"adminer\"\n    image: \"adminer\"\n    restart: always\n    ports:\n      - 8081:8080\n```\n\n# 參考\n* [dockerhub mysql](https://hub.docker.com/_/mysql)\n* [mysql](https://www.mysql.com/)\n* [adminer](https://www.adminer.org/)","source":"_posts/Mysql-on-Docker.md","raw":"---\ntitle: Mysql on Docker\ndate: 2019-05-28 09:52:26\ncategories:\n- Mysql\ntags:\n- Mysql\n- Docker\n---\n\n# Mysql on Docker\n\n> docker-compose.yml\n\n```bash=\nversion: \"3.1\"\nservices:\n  db:\n    container_name: \"mysql\"\n    image: \"mysql\"\n    volumes:\n    - \"/data/mysql:/var/lib/mysql\"\n    command: --default-authentication-plugin=mysql_native_password\n    restart: always\n    environment:\n      MYSQL_ROOT_PASSWORD: \"root\"\n\n  adminer:\n    container_name: \"adminer\"\n    image: \"adminer\"\n    restart: always\n    ports:\n      - 8081:8080\n```\n\n# 參考\n* [dockerhub mysql](https://hub.docker.com/_/mysql)\n* [mysql](https://www.mysql.com/)\n* [adminer](https://www.adminer.org/)","slug":"Mysql-on-Docker","published":1,"updated":"2019-06-03T01:52:24.695Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xus002m1q22pm6tgqqm","content":"<h1 id=\"Mysql-on-Docker\"><a href=\"#Mysql-on-Docker\" class=\"headerlink\" title=\"Mysql on Docker\"></a>Mysql on Docker</h1><blockquote>\n<p>docker-compose.yml</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: <span class=\"string\">\"3.1\"</span></span><br><span class=\"line\">services:</span><br><span class=\"line\">  db:</span><br><span class=\"line\">    container_name: <span class=\"string\">\"mysql\"</span></span><br><span class=\"line\">    image: <span class=\"string\">\"mysql\"</span></span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">    - <span class=\"string\">\"/data/mysql:/var/lib/mysql\"</span></span><br><span class=\"line\">    <span class=\"built_in\">command</span>: --default-authentication-plugin=mysql_native_password</span><br><span class=\"line\">    restart: always</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      MYSQL_ROOT_PASSWORD: <span class=\"string\">\"root\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">  adminer:</span><br><span class=\"line\">    container_name: <span class=\"string\">\"adminer\"</span></span><br><span class=\"line\">    image: <span class=\"string\">\"adminer\"</span></span><br><span class=\"line\">    restart: always</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - 8081:8080</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://hub.docker.com/_/mysql\" target=\"_blank\" rel=\"noopener\">dockerhub mysql</a></li>\n<li><a href=\"https://www.mysql.com/\" target=\"_blank\" rel=\"noopener\">mysql</a></li>\n<li><a href=\"https://www.adminer.org/\" target=\"_blank\" rel=\"noopener\">adminer</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Mysql-on-Docker\"><a href=\"#Mysql-on-Docker\" class=\"headerlink\" title=\"Mysql on Docker\"></a>Mysql on Docker</h1><blockquote>\n<p>docker-compose.yml</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: <span class=\"string\">\"3.1\"</span></span><br><span class=\"line\">services:</span><br><span class=\"line\">  db:</span><br><span class=\"line\">    container_name: <span class=\"string\">\"mysql\"</span></span><br><span class=\"line\">    image: <span class=\"string\">\"mysql\"</span></span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">    - <span class=\"string\">\"/data/mysql:/var/lib/mysql\"</span></span><br><span class=\"line\">    <span class=\"built_in\">command</span>: --default-authentication-plugin=mysql_native_password</span><br><span class=\"line\">    restart: always</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      MYSQL_ROOT_PASSWORD: <span class=\"string\">\"root\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">  adminer:</span><br><span class=\"line\">    container_name: <span class=\"string\">\"adminer\"</span></span><br><span class=\"line\">    image: <span class=\"string\">\"adminer\"</span></span><br><span class=\"line\">    restart: always</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - 8081:8080</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://hub.docker.com/_/mysql\" target=\"_blank\" rel=\"noopener\">dockerhub mysql</a></li>\n<li><a href=\"https://www.mysql.com/\" target=\"_blank\" rel=\"noopener\">mysql</a></li>\n<li><a href=\"https://www.adminer.org/\" target=\"_blank\" rel=\"noopener\">adminer</a></li>\n</ul>\n"},{"title":".Net Core CLI run Docker Web API","date":"2018-12-28T02:19:04.000Z","_content":"\n先下載 [.net core sdk](https://dotnet.microsoft.com/download)\n\n### .Net Core CLI run Docker Web API\n\n```bash\ndotnet new webapi -lang C#\n```\n\n![run](https://i.imgur.com/Cl6NlP2.png)\n\n![](https://i.imgur.com/hmUgDAO.png)\n\n### 執行站台\n\n```bash\ndotnet run\n```\n\n![dotnet](https://i.imgur.com/ZeOSddd.png)\n\n![dotnet](https://i.imgur.com/97j7YQL.png)\n\n### 打包 Docker Image 並執行 Docker Web API\n\n#### Creat Dockerfile\n\n```bash\necho Dockerfile > Dockerfile\n```\n\n > 把官方網站的[範例](https://docs.docker.com/engine/examples/dotnetcore/)貼上去\n\n```bash\nFROM microsoft/dotnet:sdk as build-env\nWORKDIR /app\n\n# Copy csproj and restore as distinct layers\nCOPY *.csproj ./\nRUN dotnet restore\n\n# Copy everything else and build\nCOPY . ./\nRUN dotnet publish -c Release -o out\n\n# Build runtime image\nFROM microsoft/dotnet:aspnetcore-runtime\nWORKDIR /app\nCOPY --from=build-env /app/out .\nENTRYPOINT [\"dotnet\", \"donetcore.dll\"]\n```\n\n#### Docker build\n\n```bash\ndocker build -t apitest:v1 .\n```\n\n![docker](https://i.imgur.com/iN1NrFT.png)\n\n#### Docker run\n\n```bash\ndocker run -d  --name apitest -p 90:80 apitest:v1\n```\n\n#### 瀏覽 <http://127.0.0.1:90/api/values>\n\n![瀏覽](https://i.imgur.com/BfEQqZn.png)\n\n> [範例檔案](https://github.com/ste5022424/donetcorewebapi)\n\n## 參考\n\n* [Dockerize a .NET Core application](https://docs.microsoft.com/zh-tw/dotnet/core/tools/dotnet-new?tabs=netcore21)\n* [Dockerize a .NET Core application](https://docs.docker.com/engine/examples/dotnetcore/)","source":"_posts/Net-Core-CLI.md","raw":"---\ntitle: .Net Core CLI run Docker Web API\ndate: 2018-12-28 10:19:04\ncategories:\n- .net core\ntags:\n- .net core\n- Docker\n- .net core cli\n- web api\n---\n\n先下載 [.net core sdk](https://dotnet.microsoft.com/download)\n\n### .Net Core CLI run Docker Web API\n\n```bash\ndotnet new webapi -lang C#\n```\n\n![run](https://i.imgur.com/Cl6NlP2.png)\n\n![](https://i.imgur.com/hmUgDAO.png)\n\n### 執行站台\n\n```bash\ndotnet run\n```\n\n![dotnet](https://i.imgur.com/ZeOSddd.png)\n\n![dotnet](https://i.imgur.com/97j7YQL.png)\n\n### 打包 Docker Image 並執行 Docker Web API\n\n#### Creat Dockerfile\n\n```bash\necho Dockerfile > Dockerfile\n```\n\n > 把官方網站的[範例](https://docs.docker.com/engine/examples/dotnetcore/)貼上去\n\n```bash\nFROM microsoft/dotnet:sdk as build-env\nWORKDIR /app\n\n# Copy csproj and restore as distinct layers\nCOPY *.csproj ./\nRUN dotnet restore\n\n# Copy everything else and build\nCOPY . ./\nRUN dotnet publish -c Release -o out\n\n# Build runtime image\nFROM microsoft/dotnet:aspnetcore-runtime\nWORKDIR /app\nCOPY --from=build-env /app/out .\nENTRYPOINT [\"dotnet\", \"donetcore.dll\"]\n```\n\n#### Docker build\n\n```bash\ndocker build -t apitest:v1 .\n```\n\n![docker](https://i.imgur.com/iN1NrFT.png)\n\n#### Docker run\n\n```bash\ndocker run -d  --name apitest -p 90:80 apitest:v1\n```\n\n#### 瀏覽 <http://127.0.0.1:90/api/values>\n\n![瀏覽](https://i.imgur.com/BfEQqZn.png)\n\n> [範例檔案](https://github.com/ste5022424/donetcorewebapi)\n\n## 參考\n\n* [Dockerize a .NET Core application](https://docs.microsoft.com/zh-tw/dotnet/core/tools/dotnet-new?tabs=netcore21)\n* [Dockerize a .NET Core application](https://docs.docker.com/engine/examples/dotnetcore/)","slug":"Net-Core-CLI","published":1,"updated":"2019-06-03T01:52:24.695Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xut002p1q227hx5yf5u","content":"<p>先下載 <a href=\"https://dotnet.microsoft.com/download\" target=\"_blank\" rel=\"noopener\">.net core sdk</a></p>\n<h3 id=\"Net-Core-CLI-run-Docker-Web-API\"><a href=\"#Net-Core-CLI-run-Docker-Web-API\" class=\"headerlink\" title=\".Net Core CLI run Docker Web API\"></a>.Net Core CLI run Docker Web API</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dotnet new webapi -lang C<span class=\"comment\">#</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/Cl6NlP2.png\" alt=\"run\"></p>\n<p><img src=\"https://i.imgur.com/hmUgDAO.png\" alt></p>\n<h3 id=\"執行站台\"><a href=\"#執行站台\" class=\"headerlink\" title=\"執行站台\"></a>執行站台</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dotnet run</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/ZeOSddd.png\" alt=\"dotnet\"></p>\n<p><img src=\"https://i.imgur.com/97j7YQL.png\" alt=\"dotnet\"></p>\n<h3 id=\"打包-Docker-Image-並執行-Docker-Web-API\"><a href=\"#打包-Docker-Image-並執行-Docker-Web-API\" class=\"headerlink\" title=\"打包 Docker Image 並執行 Docker Web API\"></a>打包 Docker Image 並執行 Docker Web API</h3><h4 id=\"Creat-Dockerfile\"><a href=\"#Creat-Dockerfile\" class=\"headerlink\" title=\"Creat Dockerfile\"></a>Creat Dockerfile</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> Dockerfile &gt; Dockerfile</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>把官方網站的<a href=\"https://docs.docker.com/engine/examples/dotnetcore/\" target=\"_blank\" rel=\"noopener\">範例</a>貼上去</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FROM microsoft/dotnet:sdk as build-env</span><br><span class=\"line\">WORKDIR /app</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Copy csproj and restore as distinct layers</span></span><br><span class=\"line\">COPY *.csproj ./</span><br><span class=\"line\">RUN dotnet restore</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Copy everything else and build</span></span><br><span class=\"line\">COPY . ./</span><br><span class=\"line\">RUN dotnet publish -c Release -o out</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Build runtime image</span></span><br><span class=\"line\">FROM microsoft/dotnet:aspnetcore-runtime</span><br><span class=\"line\">WORKDIR /app</span><br><span class=\"line\">COPY --from=build-env /app/out .</span><br><span class=\"line\">ENTRYPOINT [<span class=\"string\">\"dotnet\"</span>, <span class=\"string\">\"donetcore.dll\"</span>]</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Docker-build\"><a href=\"#Docker-build\" class=\"headerlink\" title=\"Docker build\"></a>Docker build</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker build -t apitest:v1 .</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/iN1NrFT.png\" alt=\"docker\"></p>\n<h4 id=\"Docker-run\"><a href=\"#Docker-run\" class=\"headerlink\" title=\"Docker run\"></a>Docker run</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d  --name apitest -p 90:80 apitest:v1</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"瀏覽-http-127-0-0-1-90-api-values\"><a href=\"#瀏覽-http-127-0-0-1-90-api-values\" class=\"headerlink\" title=\"瀏覽 http://127.0.0.1:90/api/values\"></a>瀏覽 <a href=\"http://127.0.0.1:90/api/values\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:90/api/values</a></h4><p><img src=\"https://i.imgur.com/BfEQqZn.png\" alt=\"瀏覽\"></p>\n<blockquote>\n<p><a href=\"https://github.com/ste5022424/donetcorewebapi\" target=\"_blank\" rel=\"noopener\">範例檔案</a></p>\n</blockquote>\n<h2 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h2><ul>\n<li><a href=\"https://docs.microsoft.com/zh-tw/dotnet/core/tools/dotnet-new?tabs=netcore21\" target=\"_blank\" rel=\"noopener\">Dockerize a .NET Core application</a></li>\n<li><a href=\"https://docs.docker.com/engine/examples/dotnetcore/\" target=\"_blank\" rel=\"noopener\">Dockerize a .NET Core application</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>先下載 <a href=\"https://dotnet.microsoft.com/download\" target=\"_blank\" rel=\"noopener\">.net core sdk</a></p>\n<h3 id=\"Net-Core-CLI-run-Docker-Web-API\"><a href=\"#Net-Core-CLI-run-Docker-Web-API\" class=\"headerlink\" title=\".Net Core CLI run Docker Web API\"></a>.Net Core CLI run Docker Web API</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dotnet new webapi -lang C<span class=\"comment\">#</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/Cl6NlP2.png\" alt=\"run\"></p>\n<p><img src=\"https://i.imgur.com/hmUgDAO.png\" alt></p>\n<h3 id=\"執行站台\"><a href=\"#執行站台\" class=\"headerlink\" title=\"執行站台\"></a>執行站台</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dotnet run</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/ZeOSddd.png\" alt=\"dotnet\"></p>\n<p><img src=\"https://i.imgur.com/97j7YQL.png\" alt=\"dotnet\"></p>\n<h3 id=\"打包-Docker-Image-並執行-Docker-Web-API\"><a href=\"#打包-Docker-Image-並執行-Docker-Web-API\" class=\"headerlink\" title=\"打包 Docker Image 並執行 Docker Web API\"></a>打包 Docker Image 並執行 Docker Web API</h3><h4 id=\"Creat-Dockerfile\"><a href=\"#Creat-Dockerfile\" class=\"headerlink\" title=\"Creat Dockerfile\"></a>Creat Dockerfile</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> Dockerfile &gt; Dockerfile</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>把官方網站的<a href=\"https://docs.docker.com/engine/examples/dotnetcore/\" target=\"_blank\" rel=\"noopener\">範例</a>貼上去</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FROM microsoft/dotnet:sdk as build-env</span><br><span class=\"line\">WORKDIR /app</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Copy csproj and restore as distinct layers</span></span><br><span class=\"line\">COPY *.csproj ./</span><br><span class=\"line\">RUN dotnet restore</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Copy everything else and build</span></span><br><span class=\"line\">COPY . ./</span><br><span class=\"line\">RUN dotnet publish -c Release -o out</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Build runtime image</span></span><br><span class=\"line\">FROM microsoft/dotnet:aspnetcore-runtime</span><br><span class=\"line\">WORKDIR /app</span><br><span class=\"line\">COPY --from=build-env /app/out .</span><br><span class=\"line\">ENTRYPOINT [<span class=\"string\">\"dotnet\"</span>, <span class=\"string\">\"donetcore.dll\"</span>]</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Docker-build\"><a href=\"#Docker-build\" class=\"headerlink\" title=\"Docker build\"></a>Docker build</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker build -t apitest:v1 .</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/iN1NrFT.png\" alt=\"docker\"></p>\n<h4 id=\"Docker-run\"><a href=\"#Docker-run\" class=\"headerlink\" title=\"Docker run\"></a>Docker run</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d  --name apitest -p 90:80 apitest:v1</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"瀏覽-http-127-0-0-1-90-api-values\"><a href=\"#瀏覽-http-127-0-0-1-90-api-values\" class=\"headerlink\" title=\"瀏覽 http://127.0.0.1:90/api/values\"></a>瀏覽 <a href=\"http://127.0.0.1:90/api/values\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:90/api/values</a></h4><p><img src=\"https://i.imgur.com/BfEQqZn.png\" alt=\"瀏覽\"></p>\n<blockquote>\n<p><a href=\"https://github.com/ste5022424/donetcorewebapi\" target=\"_blank\" rel=\"noopener\">範例檔案</a></p>\n</blockquote>\n<h2 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h2><ul>\n<li><a href=\"https://docs.microsoft.com/zh-tw/dotnet/core/tools/dotnet-new?tabs=netcore21\" target=\"_blank\" rel=\"noopener\">Dockerize a .NET Core application</a></li>\n<li><a href=\"https://docs.docker.com/engine/examples/dotnetcore/\" target=\"_blank\" rel=\"noopener\">Dockerize a .NET Core application</a></li>\n</ul>\n"},{"title":".Net Core Nlog","date":"2019-01-04T06:26:39.000Z","_content":"## .Net Core Nlog\n\n### 1. 用之前的[webapi範例](https://ste5022424.github.io/2018/12/28/Net-Core-CLI/)來實作\n\n### 2. 安裝 Nlog\n\n```\nInstall-Package NLog.Web.AspNetCore -Version 4.7.0\n```\n![](https://i.imgur.com/kTy4hbj.png)\n\n### 3. 新增 nlog.config\n\n![](https://i.imgur.com/PvtJXCY.png)\n\n\n### 4. 設定相關檔案\n\nnlog 設定可以看[官網](https://github.com/nlog/NLog/wiki/Configuration-file)\n\n> nlog.config\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<nlog xmlns=\"http://www.nlog-project.org/schemas/NLog.xsd\"\n      xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n      autoReload=\"true\"\n      internalLogLevel=\"info\"\n      internalLogFile=\"c:\\temp\\internal-nlog.txt\">\n\n\t<!-- enable asp.net core layout renderers -->\n\t<extensions>\n\t\t<add assembly=\"NLog.Web.AspNetCore\" />\n\t</extensions>\n\t<!-- the targets to write to -->\n\t<targets>\n\t\t<target xsi:type=\"File\"\n\t\t\tname=\"file\"\n\t\t\tencoding=\"utf-8\"\n\t\t\tlayout=\"${date:universalTime=true:format=yyyy-MM-dd HH\\:mm\\:ss.fff} ${threadid} ${uppercase:${level}} ${logger} ${message} ${exception:format=tostring}\"\n\t\t\tfileName=\"D:\\Log\\donetcore.log\"\n\t\t\tarchiveFileName=\"D:\\Log\\donetcore.{#}.log\"\n\t\t\tarchiveNumbering=\"Date\"\n\t\t\tarchiveEvery=\"Hour\"\n\t\t\tarchiveDateFormat=\"yyyyMMdd-HH\"\n\t\t\tmaxArchiveFiles=\"720\" />\n\n\t\t<target xsi:type=\"File\"\n\t\t\tname=\"filelinux\"\n\t\t\tencoding=\"utf-8\"\n\t\t\tlayout=\"${date:universalTime=true:format=yyyy-MM-dd HH\\:mm\\:ss.fff} ${threadid} ${uppercase:${level}} ${logger} ${message} ${exception:format=tostring}\"\n\t\t\tfileName=\"Log/donetcore.log\"\n\t\t\tarchiveFileName=\"Log/donetcore.{#}.log\"\n\t\t\tarchiveNumbering=\"Date\"\n\t\t\tarchiveEvery=\"Hour\"\n\t\t\tarchiveDateFormat=\"yyyyMMdd-HH\"\n\t\t\tmaxArchiveFiles=\"720\" />\n\t</targets>\n\t<rules>\n\t\t<!--Skip non-critical Microsoft logs and so log only own logs-->\n\t\t<logger name=\"Microsoft.*\" maxLevel=\"Info\" final=\"true\" />\n\t\t<!--<logger name=\"*\" minlevel=\"Info\" writeTo=\"filelinux\" />-->\n\t\t<logger name=\"*\" minlevel=\"Info\" writeTo=\"file\" />\n\t</rules>\n</nlog>\n```\n> program.cs\n\n```\nusing System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Linq;\nusing System.Threading.Tasks;\nusing Microsoft.AspNetCore;\nusing Microsoft.AspNetCore.Hosting;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.Logging;\nusing NLog.Web;\n\nnamespace donetcore\n{\n    public class Program\n    {\n        public static void Main(string[] args)\n        {\n            // NLog: setup the logger first to catch all errors\n            var logger = NLog.Web.NLogBuilder.ConfigureNLog(\"nlog.config\").GetCurrentClassLogger();\n            try\n            {\n                logger.Debug(\"init main\");\n                CreateWebHostBuilder(args).Build().Run();\n            }\n            catch (Exception ex)\n            {\n                //NLog: catch setup errors\n                logger.Error(ex, \"Stopped program because of exception\");\n                throw;\n            }\n            finally\n            {\n                // Ensure to flush and stop internal timers/threads before application-exit (Avoid segmentation fault on Linux)\n                NLog.LogManager.Shutdown();\n            }\n        }\n\n        public static IWebHostBuilder CreateWebHostBuilder(string[] args) =>\n            WebHost.CreateDefaultBuilder(args)\n                .UseStartup<Startup>()\n                .ConfigureLogging(logging =>\n                {\n                    logging.ClearProviders();\n                    logging.SetMinimumLevel(Microsoft.Extensions.Logging.LogLevel.Trace);\n                })\n                .UseNLog();  // NLog: setup NLog for Dependency injection\n    }\n}\n```\n\n> appsettings.json\n\n```\n{\n  \"Logging\": {\n    \"LogLevel\": {\n      \"Default\": \"Trace\",\n      \"Microsoft\": \"Information\"\n    }\n  },\n  \"AllowedHosts\": \"*\"\n}\n```\n### 5. 程式寫 log\n\n```\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Threading.Tasks;\nusing Microsoft.AspNetCore.Mvc;\nusing Microsoft.Extensions.Logging;\n\nnamespace donetcore.Controllers\n{\n    [Route(\"api/[controller]\")]\n    [ApiController]\n    public class ValuesController : ControllerBase\n    {\n        private readonly ILogger<ValuesController> _logger;\n\n        public ValuesController(ILogger<ValuesController> logger)\n        {\n            _logger = logger;\n        }\n\n        // GET api/values\n        [HttpGet]\n        public ActionResult<IEnumerable<string>> Get()\n        {\n            this._logger.LogInformation(\".net core api 測試\");\n            return new string[] { \"value1\", \"value2\" };\n        }\n    }\n}\n```\n### 6. Run 專案並檢查 log 是否有寫成功\n\n![](https://i.imgur.com/3puq5ZY.png)\n\n\n## Run docker in linux\n\n### 1. 更改 nlog.config 設定\n>nlog.config\n```\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<nlog xmlns=\"http://www.nlog-project.org/schemas/NLog.xsd\"\n      xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n      autoReload=\"true\"\n      internalLogLevel=\"info\"\n      internalLogFile=\"c:\\temp\\internal-nlog.txt\">\n\n\t<!-- enable asp.net core layout renderers -->\n\t<extensions>\n\t\t<add assembly=\"NLog.Web.AspNetCore\" />\n\t</extensions>\n\t<!-- the targets to write to -->\n\t<targets>\n\t\t<!--<target xsi:type=\"File\"\n\t\t\tname=\"file\"\n\t\t\tencoding=\"utf-8\"\n\t\t\tlayout=\"${date:universalTime=true:format=yyyy-MM-dd HH\\:mm\\:ss.fff} ${threadid} ${uppercase:${level}} ${logger} ${message} ${exception:format=tostring}\"\n\t\t\tfileName=\"D:\\Log\\donetcore.log\"\n\t\t\tarchiveFileName=\"D:\\Log\\donetcore.{#}.log\"\n\t\t\tarchiveNumbering=\"Date\"\n\t\t\tarchiveEvery=\"Hour\"\n\t\t\tarchiveDateFormat=\"yyyyMMdd-HH\"\n\t\t\tmaxArchiveFiles=\"720\" />-->\n\n\t\t<target xsi:type=\"File\"\n\t\t\tname=\"filelinux\"\n\t\t\tencoding=\"utf-8\"\n\t\t\tlayout=\"${date:universalTime=true:format=yyyy-MM-dd HH\\:mm\\:ss.fff} ${threadid} ${uppercase:${level}} ${logger} ${message} ${exception:format=tostring}\"\n\t\t\tfileName=\"Log/donetcore.log\"\n\t\t\tarchiveFileName=\"Log/donetcore.{#}.log\"\n\t\t\tarchiveNumbering=\"Date\"\n\t\t\tarchiveEvery=\"Hour\"\n\t\t\tarchiveDateFormat=\"yyyyMMdd-HH\"\n\t\t\tmaxArchiveFiles=\"720\" />\n\t</targets>\n\t<rules>\n\t\t<!--Skip non-critical Microsoft logs and so log only own logs-->\n\t\t<logger name=\"Microsoft.*\" maxLevel=\"Info\" final=\"true\" />\n\t\t<logger name=\"*\" minlevel=\"Info\" writeTo=\"filelinux\" />\n\t\t<!--<logger name=\"*\" minlevel=\"Info\" writeTo=\"file\" />-->\n\t</rules>\n</nlog>\n```\n\n### 2. build docker image\n\n> linux 建置 .net core 可以參考[這篇](https://ste5022424.github.io/2018/12/28/Net-Core-SKD-For-Linux/)\n\n```\ndocker  build -t dotnetcoreapi:v2 .\n```\n\n### 3. docker run\n\n```\ndocker run -d -p 8181:80 --name netcorenlog -v /tmp/Log:/app/Log dotnetcoreapi:v2\n```\n> 如果要進入docker內，可以使用 [exec](https://philipzheng.gitbooks.io/docker_practice/content/container/enter.html) \n\n```\ndocker exec -ti netcorenlog bash\n```\n\n### 4. 執行\n\n![](https://i.imgur.com/1UmE73P.png)\n\n### 5. 檢查宿主就可以看到 log已經共享出來了\n\n![](https://i.imgur.com/0Xr9hvW.png)\n\n![](https://i.imgur.com/5glSt7g.png)\n\n\n> [範例檔案](https://github.com/ste5022424/donetcorewebapi)\n\n## 參考\n* [Getting started with ASP.NET Core 2](https://github.com/NLog/NLog.Web/wiki/Getting-started-with-ASP.NET-Core-2)\n* [nlog設定](https://github.com/nlog/NLog/wiki/Configuration-file)","source":"_posts/Net-Core-Nlog.md","raw":"---\ntitle: .Net Core Nlog\ndate: 2019-01-04 14:26:39\ncategories:\n- .net core\ntags:\n- .Net Core\n- Nlog\n---\n## .Net Core Nlog\n\n### 1. 用之前的[webapi範例](https://ste5022424.github.io/2018/12/28/Net-Core-CLI/)來實作\n\n### 2. 安裝 Nlog\n\n```\nInstall-Package NLog.Web.AspNetCore -Version 4.7.0\n```\n![](https://i.imgur.com/kTy4hbj.png)\n\n### 3. 新增 nlog.config\n\n![](https://i.imgur.com/PvtJXCY.png)\n\n\n### 4. 設定相關檔案\n\nnlog 設定可以看[官網](https://github.com/nlog/NLog/wiki/Configuration-file)\n\n> nlog.config\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<nlog xmlns=\"http://www.nlog-project.org/schemas/NLog.xsd\"\n      xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n      autoReload=\"true\"\n      internalLogLevel=\"info\"\n      internalLogFile=\"c:\\temp\\internal-nlog.txt\">\n\n\t<!-- enable asp.net core layout renderers -->\n\t<extensions>\n\t\t<add assembly=\"NLog.Web.AspNetCore\" />\n\t</extensions>\n\t<!-- the targets to write to -->\n\t<targets>\n\t\t<target xsi:type=\"File\"\n\t\t\tname=\"file\"\n\t\t\tencoding=\"utf-8\"\n\t\t\tlayout=\"${date:universalTime=true:format=yyyy-MM-dd HH\\:mm\\:ss.fff} ${threadid} ${uppercase:${level}} ${logger} ${message} ${exception:format=tostring}\"\n\t\t\tfileName=\"D:\\Log\\donetcore.log\"\n\t\t\tarchiveFileName=\"D:\\Log\\donetcore.{#}.log\"\n\t\t\tarchiveNumbering=\"Date\"\n\t\t\tarchiveEvery=\"Hour\"\n\t\t\tarchiveDateFormat=\"yyyyMMdd-HH\"\n\t\t\tmaxArchiveFiles=\"720\" />\n\n\t\t<target xsi:type=\"File\"\n\t\t\tname=\"filelinux\"\n\t\t\tencoding=\"utf-8\"\n\t\t\tlayout=\"${date:universalTime=true:format=yyyy-MM-dd HH\\:mm\\:ss.fff} ${threadid} ${uppercase:${level}} ${logger} ${message} ${exception:format=tostring}\"\n\t\t\tfileName=\"Log/donetcore.log\"\n\t\t\tarchiveFileName=\"Log/donetcore.{#}.log\"\n\t\t\tarchiveNumbering=\"Date\"\n\t\t\tarchiveEvery=\"Hour\"\n\t\t\tarchiveDateFormat=\"yyyyMMdd-HH\"\n\t\t\tmaxArchiveFiles=\"720\" />\n\t</targets>\n\t<rules>\n\t\t<!--Skip non-critical Microsoft logs and so log only own logs-->\n\t\t<logger name=\"Microsoft.*\" maxLevel=\"Info\" final=\"true\" />\n\t\t<!--<logger name=\"*\" minlevel=\"Info\" writeTo=\"filelinux\" />-->\n\t\t<logger name=\"*\" minlevel=\"Info\" writeTo=\"file\" />\n\t</rules>\n</nlog>\n```\n> program.cs\n\n```\nusing System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Linq;\nusing System.Threading.Tasks;\nusing Microsoft.AspNetCore;\nusing Microsoft.AspNetCore.Hosting;\nusing Microsoft.Extensions.Configuration;\nusing Microsoft.Extensions.Logging;\nusing NLog.Web;\n\nnamespace donetcore\n{\n    public class Program\n    {\n        public static void Main(string[] args)\n        {\n            // NLog: setup the logger first to catch all errors\n            var logger = NLog.Web.NLogBuilder.ConfigureNLog(\"nlog.config\").GetCurrentClassLogger();\n            try\n            {\n                logger.Debug(\"init main\");\n                CreateWebHostBuilder(args).Build().Run();\n            }\n            catch (Exception ex)\n            {\n                //NLog: catch setup errors\n                logger.Error(ex, \"Stopped program because of exception\");\n                throw;\n            }\n            finally\n            {\n                // Ensure to flush and stop internal timers/threads before application-exit (Avoid segmentation fault on Linux)\n                NLog.LogManager.Shutdown();\n            }\n        }\n\n        public static IWebHostBuilder CreateWebHostBuilder(string[] args) =>\n            WebHost.CreateDefaultBuilder(args)\n                .UseStartup<Startup>()\n                .ConfigureLogging(logging =>\n                {\n                    logging.ClearProviders();\n                    logging.SetMinimumLevel(Microsoft.Extensions.Logging.LogLevel.Trace);\n                })\n                .UseNLog();  // NLog: setup NLog for Dependency injection\n    }\n}\n```\n\n> appsettings.json\n\n```\n{\n  \"Logging\": {\n    \"LogLevel\": {\n      \"Default\": \"Trace\",\n      \"Microsoft\": \"Information\"\n    }\n  },\n  \"AllowedHosts\": \"*\"\n}\n```\n### 5. 程式寫 log\n\n```\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Threading.Tasks;\nusing Microsoft.AspNetCore.Mvc;\nusing Microsoft.Extensions.Logging;\n\nnamespace donetcore.Controllers\n{\n    [Route(\"api/[controller]\")]\n    [ApiController]\n    public class ValuesController : ControllerBase\n    {\n        private readonly ILogger<ValuesController> _logger;\n\n        public ValuesController(ILogger<ValuesController> logger)\n        {\n            _logger = logger;\n        }\n\n        // GET api/values\n        [HttpGet]\n        public ActionResult<IEnumerable<string>> Get()\n        {\n            this._logger.LogInformation(\".net core api 測試\");\n            return new string[] { \"value1\", \"value2\" };\n        }\n    }\n}\n```\n### 6. Run 專案並檢查 log 是否有寫成功\n\n![](https://i.imgur.com/3puq5ZY.png)\n\n\n## Run docker in linux\n\n### 1. 更改 nlog.config 設定\n>nlog.config\n```\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<nlog xmlns=\"http://www.nlog-project.org/schemas/NLog.xsd\"\n      xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n      autoReload=\"true\"\n      internalLogLevel=\"info\"\n      internalLogFile=\"c:\\temp\\internal-nlog.txt\">\n\n\t<!-- enable asp.net core layout renderers -->\n\t<extensions>\n\t\t<add assembly=\"NLog.Web.AspNetCore\" />\n\t</extensions>\n\t<!-- the targets to write to -->\n\t<targets>\n\t\t<!--<target xsi:type=\"File\"\n\t\t\tname=\"file\"\n\t\t\tencoding=\"utf-8\"\n\t\t\tlayout=\"${date:universalTime=true:format=yyyy-MM-dd HH\\:mm\\:ss.fff} ${threadid} ${uppercase:${level}} ${logger} ${message} ${exception:format=tostring}\"\n\t\t\tfileName=\"D:\\Log\\donetcore.log\"\n\t\t\tarchiveFileName=\"D:\\Log\\donetcore.{#}.log\"\n\t\t\tarchiveNumbering=\"Date\"\n\t\t\tarchiveEvery=\"Hour\"\n\t\t\tarchiveDateFormat=\"yyyyMMdd-HH\"\n\t\t\tmaxArchiveFiles=\"720\" />-->\n\n\t\t<target xsi:type=\"File\"\n\t\t\tname=\"filelinux\"\n\t\t\tencoding=\"utf-8\"\n\t\t\tlayout=\"${date:universalTime=true:format=yyyy-MM-dd HH\\:mm\\:ss.fff} ${threadid} ${uppercase:${level}} ${logger} ${message} ${exception:format=tostring}\"\n\t\t\tfileName=\"Log/donetcore.log\"\n\t\t\tarchiveFileName=\"Log/donetcore.{#}.log\"\n\t\t\tarchiveNumbering=\"Date\"\n\t\t\tarchiveEvery=\"Hour\"\n\t\t\tarchiveDateFormat=\"yyyyMMdd-HH\"\n\t\t\tmaxArchiveFiles=\"720\" />\n\t</targets>\n\t<rules>\n\t\t<!--Skip non-critical Microsoft logs and so log only own logs-->\n\t\t<logger name=\"Microsoft.*\" maxLevel=\"Info\" final=\"true\" />\n\t\t<logger name=\"*\" minlevel=\"Info\" writeTo=\"filelinux\" />\n\t\t<!--<logger name=\"*\" minlevel=\"Info\" writeTo=\"file\" />-->\n\t</rules>\n</nlog>\n```\n\n### 2. build docker image\n\n> linux 建置 .net core 可以參考[這篇](https://ste5022424.github.io/2018/12/28/Net-Core-SKD-For-Linux/)\n\n```\ndocker  build -t dotnetcoreapi:v2 .\n```\n\n### 3. docker run\n\n```\ndocker run -d -p 8181:80 --name netcorenlog -v /tmp/Log:/app/Log dotnetcoreapi:v2\n```\n> 如果要進入docker內，可以使用 [exec](https://philipzheng.gitbooks.io/docker_practice/content/container/enter.html) \n\n```\ndocker exec -ti netcorenlog bash\n```\n\n### 4. 執行\n\n![](https://i.imgur.com/1UmE73P.png)\n\n### 5. 檢查宿主就可以看到 log已經共享出來了\n\n![](https://i.imgur.com/0Xr9hvW.png)\n\n![](https://i.imgur.com/5glSt7g.png)\n\n\n> [範例檔案](https://github.com/ste5022424/donetcorewebapi)\n\n## 參考\n* [Getting started with ASP.NET Core 2](https://github.com/NLog/NLog.Web/wiki/Getting-started-with-ASP.NET-Core-2)\n* [nlog設定](https://github.com/nlog/NLog/wiki/Configuration-file)","slug":"Net-Core-Nlog","published":1,"updated":"2019-06-03T01:52:24.696Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xuu002s1q22i79du3cv","content":"<h2 id=\"Net-Core-Nlog\"><a href=\"#Net-Core-Nlog\" class=\"headerlink\" title=\".Net Core Nlog\"></a>.Net Core Nlog</h2><h3 id=\"1-用之前的webapi範例來實作\"><a href=\"#1-用之前的webapi範例來實作\" class=\"headerlink\" title=\"1. 用之前的webapi範例來實作\"></a>1. 用之前的<a href=\"https://ste5022424.github.io/2018/12/28/Net-Core-CLI/\">webapi範例</a>來實作</h3><h3 id=\"2-安裝-Nlog\"><a href=\"#2-安裝-Nlog\" class=\"headerlink\" title=\"2. 安裝 Nlog\"></a>2. 安裝 Nlog</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Install-Package NLog.Web.AspNetCore -Version 4.7.0</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/kTy4hbj.png\" alt></p>\n<h3 id=\"3-新增-nlog-config\"><a href=\"#3-新增-nlog-config\" class=\"headerlink\" title=\"3. 新增 nlog.config\"></a>3. 新增 nlog.config</h3><p><img src=\"https://i.imgur.com/PvtJXCY.png\" alt></p>\n<h3 id=\"4-設定相關檔案\"><a href=\"#4-設定相關檔案\" class=\"headerlink\" title=\"4. 設定相關檔案\"></a>4. 設定相關檔案</h3><p>nlog 設定可以看<a href=\"https://github.com/nlog/NLog/wiki/Configuration-file\" target=\"_blank\" rel=\"noopener\">官網</a></p>\n<blockquote>\n<p>nlog.config</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;</span><br><span class=\"line\">&lt;nlog xmlns=&quot;http://www.nlog-project.org/schemas/NLog.xsd&quot;</span><br><span class=\"line\">      xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class=\"line\">      autoReload=&quot;true&quot;</span><br><span class=\"line\">      internalLogLevel=&quot;info&quot;</span><br><span class=\"line\">      internalLogFile=&quot;c:\\temp\\internal-nlog.txt&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;!-- enable asp.net core layout renderers --&gt;</span><br><span class=\"line\">\t&lt;extensions&gt;</span><br><span class=\"line\">\t\t&lt;add assembly=&quot;NLog.Web.AspNetCore&quot; /&gt;</span><br><span class=\"line\">\t&lt;/extensions&gt;</span><br><span class=\"line\">\t&lt;!-- the targets to write to --&gt;</span><br><span class=\"line\">\t&lt;targets&gt;</span><br><span class=\"line\">\t\t&lt;target xsi:type=&quot;File&quot;</span><br><span class=\"line\">\t\t\tname=&quot;file&quot;</span><br><span class=\"line\">\t\t\tencoding=&quot;utf-8&quot;</span><br><span class=\"line\">\t\t\tlayout=&quot;$&#123;date:universalTime=true:format=yyyy-MM-dd HH\\:mm\\:ss.fff&#125; $&#123;threadid&#125; $&#123;uppercase:$&#123;level&#125;&#125; $&#123;logger&#125; $&#123;message&#125; $&#123;exception:format=tostring&#125;&quot;</span><br><span class=\"line\">\t\t\tfileName=&quot;D:\\Log\\donetcore.log&quot;</span><br><span class=\"line\">\t\t\tarchiveFileName=&quot;D:\\Log\\donetcore.&#123;#&#125;.log&quot;</span><br><span class=\"line\">\t\t\tarchiveNumbering=&quot;Date&quot;</span><br><span class=\"line\">\t\t\tarchiveEvery=&quot;Hour&quot;</span><br><span class=\"line\">\t\t\tarchiveDateFormat=&quot;yyyyMMdd-HH&quot;</span><br><span class=\"line\">\t\t\tmaxArchiveFiles=&quot;720&quot; /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&lt;target xsi:type=&quot;File&quot;</span><br><span class=\"line\">\t\t\tname=&quot;filelinux&quot;</span><br><span class=\"line\">\t\t\tencoding=&quot;utf-8&quot;</span><br><span class=\"line\">\t\t\tlayout=&quot;$&#123;date:universalTime=true:format=yyyy-MM-dd HH\\:mm\\:ss.fff&#125; $&#123;threadid&#125; $&#123;uppercase:$&#123;level&#125;&#125; $&#123;logger&#125; $&#123;message&#125; $&#123;exception:format=tostring&#125;&quot;</span><br><span class=\"line\">\t\t\tfileName=&quot;Log/donetcore.log&quot;</span><br><span class=\"line\">\t\t\tarchiveFileName=&quot;Log/donetcore.&#123;#&#125;.log&quot;</span><br><span class=\"line\">\t\t\tarchiveNumbering=&quot;Date&quot;</span><br><span class=\"line\">\t\t\tarchiveEvery=&quot;Hour&quot;</span><br><span class=\"line\">\t\t\tarchiveDateFormat=&quot;yyyyMMdd-HH&quot;</span><br><span class=\"line\">\t\t\tmaxArchiveFiles=&quot;720&quot; /&gt;</span><br><span class=\"line\">\t&lt;/targets&gt;</span><br><span class=\"line\">\t&lt;rules&gt;</span><br><span class=\"line\">\t\t&lt;!--Skip non-critical Microsoft logs and so log only own logs--&gt;</span><br><span class=\"line\">\t\t&lt;logger name=&quot;Microsoft.*&quot; maxLevel=&quot;Info&quot; final=&quot;true&quot; /&gt;</span><br><span class=\"line\">\t\t&lt;!--&lt;logger name=&quot;*&quot; minlevel=&quot;Info&quot; writeTo=&quot;filelinux&quot; /&gt;--&gt;</span><br><span class=\"line\">\t\t&lt;logger name=&quot;*&quot; minlevel=&quot;Info&quot; writeTo=&quot;file&quot; /&gt;</span><br><span class=\"line\">\t&lt;/rules&gt;</span><br><span class=\"line\">&lt;/nlog&gt;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>program.cs</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">using System;</span><br><span class=\"line\">using System.Collections.Generic;</span><br><span class=\"line\">using System.IO;</span><br><span class=\"line\">using System.Linq;</span><br><span class=\"line\">using System.Threading.Tasks;</span><br><span class=\"line\">using Microsoft.AspNetCore;</span><br><span class=\"line\">using Microsoft.AspNetCore.Hosting;</span><br><span class=\"line\">using Microsoft.Extensions.Configuration;</span><br><span class=\"line\">using Microsoft.Extensions.Logging;</span><br><span class=\"line\">using NLog.Web;</span><br><span class=\"line\"></span><br><span class=\"line\">namespace donetcore</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    public class Program</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        public static void Main(string[] args)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            // NLog: setup the logger first to catch all errors</span><br><span class=\"line\">            var logger = NLog.Web.NLogBuilder.ConfigureNLog(&quot;nlog.config&quot;).GetCurrentClassLogger();</span><br><span class=\"line\">            try</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                logger.Debug(&quot;init main&quot;);</span><br><span class=\"line\">                CreateWebHostBuilder(args).Build().Run();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            catch (Exception ex)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                //NLog: catch setup errors</span><br><span class=\"line\">                logger.Error(ex, &quot;Stopped program because of exception&quot;);</span><br><span class=\"line\">                throw;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            finally</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                // Ensure to flush and stop internal timers/threads before application-exit (Avoid segmentation fault on Linux)</span><br><span class=\"line\">                NLog.LogManager.Shutdown();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        public static IWebHostBuilder CreateWebHostBuilder(string[] args) =&gt;</span><br><span class=\"line\">            WebHost.CreateDefaultBuilder(args)</span><br><span class=\"line\">                .UseStartup&lt;Startup&gt;()</span><br><span class=\"line\">                .ConfigureLogging(logging =&gt;</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    logging.ClearProviders();</span><br><span class=\"line\">                    logging.SetMinimumLevel(Microsoft.Extensions.Logging.LogLevel.Trace);</span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">                .UseNLog();  // NLog: setup NLog for Dependency injection</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>appsettings.json</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;Logging&quot;: &#123;</span><br><span class=\"line\">    &quot;LogLevel&quot;: &#123;</span><br><span class=\"line\">      &quot;Default&quot;: &quot;Trace&quot;,</span><br><span class=\"line\">      &quot;Microsoft&quot;: &quot;Information&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;AllowedHosts&quot;: &quot;*&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-程式寫-log\"><a href=\"#5-程式寫-log\" class=\"headerlink\" title=\"5. 程式寫 log\"></a>5. 程式寫 log</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">using System;</span><br><span class=\"line\">using System.Collections.Generic;</span><br><span class=\"line\">using System.Linq;</span><br><span class=\"line\">using System.Threading.Tasks;</span><br><span class=\"line\">using Microsoft.AspNetCore.Mvc;</span><br><span class=\"line\">using Microsoft.Extensions.Logging;</span><br><span class=\"line\"></span><br><span class=\"line\">namespace donetcore.Controllers</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [Route(&quot;api/[controller]&quot;)]</span><br><span class=\"line\">    [ApiController]</span><br><span class=\"line\">    public class ValuesController : ControllerBase</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        private readonly ILogger&lt;ValuesController&gt; _logger;</span><br><span class=\"line\"></span><br><span class=\"line\">        public ValuesController(ILogger&lt;ValuesController&gt; logger)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            _logger = logger;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        // GET api/values</span><br><span class=\"line\">        [HttpGet]</span><br><span class=\"line\">        public ActionResult&lt;IEnumerable&lt;string&gt;&gt; Get()</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            this._logger.LogInformation(&quot;.net core api 測試&quot;);</span><br><span class=\"line\">            return new string[] &#123; &quot;value1&quot;, &quot;value2&quot; &#125;;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-Run-專案並檢查-log-是否有寫成功\"><a href=\"#6-Run-專案並檢查-log-是否有寫成功\" class=\"headerlink\" title=\"6. Run 專案並檢查 log 是否有寫成功\"></a>6. Run 專案並檢查 log 是否有寫成功</h3><p><img src=\"https://i.imgur.com/3puq5ZY.png\" alt></p>\n<h2 id=\"Run-docker-in-linux\"><a href=\"#Run-docker-in-linux\" class=\"headerlink\" title=\"Run docker in linux\"></a>Run docker in linux</h2><h3 id=\"1-更改-nlog-config-設定\"><a href=\"#1-更改-nlog-config-設定\" class=\"headerlink\" title=\"1. 更改 nlog.config 設定\"></a>1. 更改 nlog.config 設定</h3><blockquote>\n<p>nlog.config</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;</span><br><span class=\"line\">&lt;nlog xmlns=&quot;http://www.nlog-project.org/schemas/NLog.xsd&quot;</span><br><span class=\"line\">      xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class=\"line\">      autoReload=&quot;true&quot;</span><br><span class=\"line\">      internalLogLevel=&quot;info&quot;</span><br><span class=\"line\">      internalLogFile=&quot;c:\\temp\\internal-nlog.txt&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;!-- enable asp.net core layout renderers --&gt;</span><br><span class=\"line\">\t&lt;extensions&gt;</span><br><span class=\"line\">\t\t&lt;add assembly=&quot;NLog.Web.AspNetCore&quot; /&gt;</span><br><span class=\"line\">\t&lt;/extensions&gt;</span><br><span class=\"line\">\t&lt;!-- the targets to write to --&gt;</span><br><span class=\"line\">\t&lt;targets&gt;</span><br><span class=\"line\">\t\t&lt;!--&lt;target xsi:type=&quot;File&quot;</span><br><span class=\"line\">\t\t\tname=&quot;file&quot;</span><br><span class=\"line\">\t\t\tencoding=&quot;utf-8&quot;</span><br><span class=\"line\">\t\t\tlayout=&quot;$&#123;date:universalTime=true:format=yyyy-MM-dd HH\\:mm\\:ss.fff&#125; $&#123;threadid&#125; $&#123;uppercase:$&#123;level&#125;&#125; $&#123;logger&#125; $&#123;message&#125; $&#123;exception:format=tostring&#125;&quot;</span><br><span class=\"line\">\t\t\tfileName=&quot;D:\\Log\\donetcore.log&quot;</span><br><span class=\"line\">\t\t\tarchiveFileName=&quot;D:\\Log\\donetcore.&#123;#&#125;.log&quot;</span><br><span class=\"line\">\t\t\tarchiveNumbering=&quot;Date&quot;</span><br><span class=\"line\">\t\t\tarchiveEvery=&quot;Hour&quot;</span><br><span class=\"line\">\t\t\tarchiveDateFormat=&quot;yyyyMMdd-HH&quot;</span><br><span class=\"line\">\t\t\tmaxArchiveFiles=&quot;720&quot; /&gt;--&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&lt;target xsi:type=&quot;File&quot;</span><br><span class=\"line\">\t\t\tname=&quot;filelinux&quot;</span><br><span class=\"line\">\t\t\tencoding=&quot;utf-8&quot;</span><br><span class=\"line\">\t\t\tlayout=&quot;$&#123;date:universalTime=true:format=yyyy-MM-dd HH\\:mm\\:ss.fff&#125; $&#123;threadid&#125; $&#123;uppercase:$&#123;level&#125;&#125; $&#123;logger&#125; $&#123;message&#125; $&#123;exception:format=tostring&#125;&quot;</span><br><span class=\"line\">\t\t\tfileName=&quot;Log/donetcore.log&quot;</span><br><span class=\"line\">\t\t\tarchiveFileName=&quot;Log/donetcore.&#123;#&#125;.log&quot;</span><br><span class=\"line\">\t\t\tarchiveNumbering=&quot;Date&quot;</span><br><span class=\"line\">\t\t\tarchiveEvery=&quot;Hour&quot;</span><br><span class=\"line\">\t\t\tarchiveDateFormat=&quot;yyyyMMdd-HH&quot;</span><br><span class=\"line\">\t\t\tmaxArchiveFiles=&quot;720&quot; /&gt;</span><br><span class=\"line\">\t&lt;/targets&gt;</span><br><span class=\"line\">\t&lt;rules&gt;</span><br><span class=\"line\">\t\t&lt;!--Skip non-critical Microsoft logs and so log only own logs--&gt;</span><br><span class=\"line\">\t\t&lt;logger name=&quot;Microsoft.*&quot; maxLevel=&quot;Info&quot; final=&quot;true&quot; /&gt;</span><br><span class=\"line\">\t\t&lt;logger name=&quot;*&quot; minlevel=&quot;Info&quot; writeTo=&quot;filelinux&quot; /&gt;</span><br><span class=\"line\">\t\t&lt;!--&lt;logger name=&quot;*&quot; minlevel=&quot;Info&quot; writeTo=&quot;file&quot; /&gt;--&gt;</span><br><span class=\"line\">\t&lt;/rules&gt;</span><br><span class=\"line\">&lt;/nlog&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-build-docker-image\"><a href=\"#2-build-docker-image\" class=\"headerlink\" title=\"2. build docker image\"></a>2. build docker image</h3><blockquote>\n<p>linux 建置 .net core 可以參考<a href=\"https://ste5022424.github.io/2018/12/28/Net-Core-SKD-For-Linux/\">這篇</a></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker  build -t dotnetcoreapi:v2 .</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-docker-run\"><a href=\"#3-docker-run\" class=\"headerlink\" title=\"3. docker run\"></a>3. docker run</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d -p 8181:80 --name netcorenlog -v /tmp/Log:/app/Log dotnetcoreapi:v2</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>如果要進入docker內，可以使用 <a href=\"https://philipzheng.gitbooks.io/docker_practice/content/container/enter.html\" target=\"_blank\" rel=\"noopener\">exec</a> </p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -ti netcorenlog bash</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-執行\"><a href=\"#4-執行\" class=\"headerlink\" title=\"4. 執行\"></a>4. 執行</h3><p><img src=\"https://i.imgur.com/1UmE73P.png\" alt></p>\n<h3 id=\"5-檢查宿主就可以看到-log已經共享出來了\"><a href=\"#5-檢查宿主就可以看到-log已經共享出來了\" class=\"headerlink\" title=\"5. 檢查宿主就可以看到 log已經共享出來了\"></a>5. 檢查宿主就可以看到 log已經共享出來了</h3><p><img src=\"https://i.imgur.com/0Xr9hvW.png\" alt></p>\n<p><img src=\"https://i.imgur.com/5glSt7g.png\" alt></p>\n<blockquote>\n<p><a href=\"https://github.com/ste5022424/donetcorewebapi\" target=\"_blank\" rel=\"noopener\">範例檔案</a></p>\n</blockquote>\n<h2 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h2><ul>\n<li><a href=\"https://github.com/NLog/NLog.Web/wiki/Getting-started-with-ASP.NET-Core-2\" target=\"_blank\" rel=\"noopener\">Getting started with ASP.NET Core 2</a></li>\n<li><a href=\"https://github.com/nlog/NLog/wiki/Configuration-file\" target=\"_blank\" rel=\"noopener\">nlog設定</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Net-Core-Nlog\"><a href=\"#Net-Core-Nlog\" class=\"headerlink\" title=\".Net Core Nlog\"></a>.Net Core Nlog</h2><h3 id=\"1-用之前的webapi範例來實作\"><a href=\"#1-用之前的webapi範例來實作\" class=\"headerlink\" title=\"1. 用之前的webapi範例來實作\"></a>1. 用之前的<a href=\"https://ste5022424.github.io/2018/12/28/Net-Core-CLI/\">webapi範例</a>來實作</h3><h3 id=\"2-安裝-Nlog\"><a href=\"#2-安裝-Nlog\" class=\"headerlink\" title=\"2. 安裝 Nlog\"></a>2. 安裝 Nlog</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Install-Package NLog.Web.AspNetCore -Version 4.7.0</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/kTy4hbj.png\" alt></p>\n<h3 id=\"3-新增-nlog-config\"><a href=\"#3-新增-nlog-config\" class=\"headerlink\" title=\"3. 新增 nlog.config\"></a>3. 新增 nlog.config</h3><p><img src=\"https://i.imgur.com/PvtJXCY.png\" alt></p>\n<h3 id=\"4-設定相關檔案\"><a href=\"#4-設定相關檔案\" class=\"headerlink\" title=\"4. 設定相關檔案\"></a>4. 設定相關檔案</h3><p>nlog 設定可以看<a href=\"https://github.com/nlog/NLog/wiki/Configuration-file\" target=\"_blank\" rel=\"noopener\">官網</a></p>\n<blockquote>\n<p>nlog.config</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;</span><br><span class=\"line\">&lt;nlog xmlns=&quot;http://www.nlog-project.org/schemas/NLog.xsd&quot;</span><br><span class=\"line\">      xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class=\"line\">      autoReload=&quot;true&quot;</span><br><span class=\"line\">      internalLogLevel=&quot;info&quot;</span><br><span class=\"line\">      internalLogFile=&quot;c:\\temp\\internal-nlog.txt&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;!-- enable asp.net core layout renderers --&gt;</span><br><span class=\"line\">\t&lt;extensions&gt;</span><br><span class=\"line\">\t\t&lt;add assembly=&quot;NLog.Web.AspNetCore&quot; /&gt;</span><br><span class=\"line\">\t&lt;/extensions&gt;</span><br><span class=\"line\">\t&lt;!-- the targets to write to --&gt;</span><br><span class=\"line\">\t&lt;targets&gt;</span><br><span class=\"line\">\t\t&lt;target xsi:type=&quot;File&quot;</span><br><span class=\"line\">\t\t\tname=&quot;file&quot;</span><br><span class=\"line\">\t\t\tencoding=&quot;utf-8&quot;</span><br><span class=\"line\">\t\t\tlayout=&quot;$&#123;date:universalTime=true:format=yyyy-MM-dd HH\\:mm\\:ss.fff&#125; $&#123;threadid&#125; $&#123;uppercase:$&#123;level&#125;&#125; $&#123;logger&#125; $&#123;message&#125; $&#123;exception:format=tostring&#125;&quot;</span><br><span class=\"line\">\t\t\tfileName=&quot;D:\\Log\\donetcore.log&quot;</span><br><span class=\"line\">\t\t\tarchiveFileName=&quot;D:\\Log\\donetcore.&#123;#&#125;.log&quot;</span><br><span class=\"line\">\t\t\tarchiveNumbering=&quot;Date&quot;</span><br><span class=\"line\">\t\t\tarchiveEvery=&quot;Hour&quot;</span><br><span class=\"line\">\t\t\tarchiveDateFormat=&quot;yyyyMMdd-HH&quot;</span><br><span class=\"line\">\t\t\tmaxArchiveFiles=&quot;720&quot; /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&lt;target xsi:type=&quot;File&quot;</span><br><span class=\"line\">\t\t\tname=&quot;filelinux&quot;</span><br><span class=\"line\">\t\t\tencoding=&quot;utf-8&quot;</span><br><span class=\"line\">\t\t\tlayout=&quot;$&#123;date:universalTime=true:format=yyyy-MM-dd HH\\:mm\\:ss.fff&#125; $&#123;threadid&#125; $&#123;uppercase:$&#123;level&#125;&#125; $&#123;logger&#125; $&#123;message&#125; $&#123;exception:format=tostring&#125;&quot;</span><br><span class=\"line\">\t\t\tfileName=&quot;Log/donetcore.log&quot;</span><br><span class=\"line\">\t\t\tarchiveFileName=&quot;Log/donetcore.&#123;#&#125;.log&quot;</span><br><span class=\"line\">\t\t\tarchiveNumbering=&quot;Date&quot;</span><br><span class=\"line\">\t\t\tarchiveEvery=&quot;Hour&quot;</span><br><span class=\"line\">\t\t\tarchiveDateFormat=&quot;yyyyMMdd-HH&quot;</span><br><span class=\"line\">\t\t\tmaxArchiveFiles=&quot;720&quot; /&gt;</span><br><span class=\"line\">\t&lt;/targets&gt;</span><br><span class=\"line\">\t&lt;rules&gt;</span><br><span class=\"line\">\t\t&lt;!--Skip non-critical Microsoft logs and so log only own logs--&gt;</span><br><span class=\"line\">\t\t&lt;logger name=&quot;Microsoft.*&quot; maxLevel=&quot;Info&quot; final=&quot;true&quot; /&gt;</span><br><span class=\"line\">\t\t&lt;!--&lt;logger name=&quot;*&quot; minlevel=&quot;Info&quot; writeTo=&quot;filelinux&quot; /&gt;--&gt;</span><br><span class=\"line\">\t\t&lt;logger name=&quot;*&quot; minlevel=&quot;Info&quot; writeTo=&quot;file&quot; /&gt;</span><br><span class=\"line\">\t&lt;/rules&gt;</span><br><span class=\"line\">&lt;/nlog&gt;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>program.cs</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">using System;</span><br><span class=\"line\">using System.Collections.Generic;</span><br><span class=\"line\">using System.IO;</span><br><span class=\"line\">using System.Linq;</span><br><span class=\"line\">using System.Threading.Tasks;</span><br><span class=\"line\">using Microsoft.AspNetCore;</span><br><span class=\"line\">using Microsoft.AspNetCore.Hosting;</span><br><span class=\"line\">using Microsoft.Extensions.Configuration;</span><br><span class=\"line\">using Microsoft.Extensions.Logging;</span><br><span class=\"line\">using NLog.Web;</span><br><span class=\"line\"></span><br><span class=\"line\">namespace donetcore</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    public class Program</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        public static void Main(string[] args)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            // NLog: setup the logger first to catch all errors</span><br><span class=\"line\">            var logger = NLog.Web.NLogBuilder.ConfigureNLog(&quot;nlog.config&quot;).GetCurrentClassLogger();</span><br><span class=\"line\">            try</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                logger.Debug(&quot;init main&quot;);</span><br><span class=\"line\">                CreateWebHostBuilder(args).Build().Run();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            catch (Exception ex)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                //NLog: catch setup errors</span><br><span class=\"line\">                logger.Error(ex, &quot;Stopped program because of exception&quot;);</span><br><span class=\"line\">                throw;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            finally</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                // Ensure to flush and stop internal timers/threads before application-exit (Avoid segmentation fault on Linux)</span><br><span class=\"line\">                NLog.LogManager.Shutdown();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        public static IWebHostBuilder CreateWebHostBuilder(string[] args) =&gt;</span><br><span class=\"line\">            WebHost.CreateDefaultBuilder(args)</span><br><span class=\"line\">                .UseStartup&lt;Startup&gt;()</span><br><span class=\"line\">                .ConfigureLogging(logging =&gt;</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    logging.ClearProviders();</span><br><span class=\"line\">                    logging.SetMinimumLevel(Microsoft.Extensions.Logging.LogLevel.Trace);</span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">                .UseNLog();  // NLog: setup NLog for Dependency injection</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>appsettings.json</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;Logging&quot;: &#123;</span><br><span class=\"line\">    &quot;LogLevel&quot;: &#123;</span><br><span class=\"line\">      &quot;Default&quot;: &quot;Trace&quot;,</span><br><span class=\"line\">      &quot;Microsoft&quot;: &quot;Information&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;AllowedHosts&quot;: &quot;*&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-程式寫-log\"><a href=\"#5-程式寫-log\" class=\"headerlink\" title=\"5. 程式寫 log\"></a>5. 程式寫 log</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">using System;</span><br><span class=\"line\">using System.Collections.Generic;</span><br><span class=\"line\">using System.Linq;</span><br><span class=\"line\">using System.Threading.Tasks;</span><br><span class=\"line\">using Microsoft.AspNetCore.Mvc;</span><br><span class=\"line\">using Microsoft.Extensions.Logging;</span><br><span class=\"line\"></span><br><span class=\"line\">namespace donetcore.Controllers</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [Route(&quot;api/[controller]&quot;)]</span><br><span class=\"line\">    [ApiController]</span><br><span class=\"line\">    public class ValuesController : ControllerBase</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        private readonly ILogger&lt;ValuesController&gt; _logger;</span><br><span class=\"line\"></span><br><span class=\"line\">        public ValuesController(ILogger&lt;ValuesController&gt; logger)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            _logger = logger;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        // GET api/values</span><br><span class=\"line\">        [HttpGet]</span><br><span class=\"line\">        public ActionResult&lt;IEnumerable&lt;string&gt;&gt; Get()</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            this._logger.LogInformation(&quot;.net core api 測試&quot;);</span><br><span class=\"line\">            return new string[] &#123; &quot;value1&quot;, &quot;value2&quot; &#125;;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-Run-專案並檢查-log-是否有寫成功\"><a href=\"#6-Run-專案並檢查-log-是否有寫成功\" class=\"headerlink\" title=\"6. Run 專案並檢查 log 是否有寫成功\"></a>6. Run 專案並檢查 log 是否有寫成功</h3><p><img src=\"https://i.imgur.com/3puq5ZY.png\" alt></p>\n<h2 id=\"Run-docker-in-linux\"><a href=\"#Run-docker-in-linux\" class=\"headerlink\" title=\"Run docker in linux\"></a>Run docker in linux</h2><h3 id=\"1-更改-nlog-config-設定\"><a href=\"#1-更改-nlog-config-設定\" class=\"headerlink\" title=\"1. 更改 nlog.config 設定\"></a>1. 更改 nlog.config 設定</h3><blockquote>\n<p>nlog.config</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;</span><br><span class=\"line\">&lt;nlog xmlns=&quot;http://www.nlog-project.org/schemas/NLog.xsd&quot;</span><br><span class=\"line\">      xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class=\"line\">      autoReload=&quot;true&quot;</span><br><span class=\"line\">      internalLogLevel=&quot;info&quot;</span><br><span class=\"line\">      internalLogFile=&quot;c:\\temp\\internal-nlog.txt&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;!-- enable asp.net core layout renderers --&gt;</span><br><span class=\"line\">\t&lt;extensions&gt;</span><br><span class=\"line\">\t\t&lt;add assembly=&quot;NLog.Web.AspNetCore&quot; /&gt;</span><br><span class=\"line\">\t&lt;/extensions&gt;</span><br><span class=\"line\">\t&lt;!-- the targets to write to --&gt;</span><br><span class=\"line\">\t&lt;targets&gt;</span><br><span class=\"line\">\t\t&lt;!--&lt;target xsi:type=&quot;File&quot;</span><br><span class=\"line\">\t\t\tname=&quot;file&quot;</span><br><span class=\"line\">\t\t\tencoding=&quot;utf-8&quot;</span><br><span class=\"line\">\t\t\tlayout=&quot;$&#123;date:universalTime=true:format=yyyy-MM-dd HH\\:mm\\:ss.fff&#125; $&#123;threadid&#125; $&#123;uppercase:$&#123;level&#125;&#125; $&#123;logger&#125; $&#123;message&#125; $&#123;exception:format=tostring&#125;&quot;</span><br><span class=\"line\">\t\t\tfileName=&quot;D:\\Log\\donetcore.log&quot;</span><br><span class=\"line\">\t\t\tarchiveFileName=&quot;D:\\Log\\donetcore.&#123;#&#125;.log&quot;</span><br><span class=\"line\">\t\t\tarchiveNumbering=&quot;Date&quot;</span><br><span class=\"line\">\t\t\tarchiveEvery=&quot;Hour&quot;</span><br><span class=\"line\">\t\t\tarchiveDateFormat=&quot;yyyyMMdd-HH&quot;</span><br><span class=\"line\">\t\t\tmaxArchiveFiles=&quot;720&quot; /&gt;--&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&lt;target xsi:type=&quot;File&quot;</span><br><span class=\"line\">\t\t\tname=&quot;filelinux&quot;</span><br><span class=\"line\">\t\t\tencoding=&quot;utf-8&quot;</span><br><span class=\"line\">\t\t\tlayout=&quot;$&#123;date:universalTime=true:format=yyyy-MM-dd HH\\:mm\\:ss.fff&#125; $&#123;threadid&#125; $&#123;uppercase:$&#123;level&#125;&#125; $&#123;logger&#125; $&#123;message&#125; $&#123;exception:format=tostring&#125;&quot;</span><br><span class=\"line\">\t\t\tfileName=&quot;Log/donetcore.log&quot;</span><br><span class=\"line\">\t\t\tarchiveFileName=&quot;Log/donetcore.&#123;#&#125;.log&quot;</span><br><span class=\"line\">\t\t\tarchiveNumbering=&quot;Date&quot;</span><br><span class=\"line\">\t\t\tarchiveEvery=&quot;Hour&quot;</span><br><span class=\"line\">\t\t\tarchiveDateFormat=&quot;yyyyMMdd-HH&quot;</span><br><span class=\"line\">\t\t\tmaxArchiveFiles=&quot;720&quot; /&gt;</span><br><span class=\"line\">\t&lt;/targets&gt;</span><br><span class=\"line\">\t&lt;rules&gt;</span><br><span class=\"line\">\t\t&lt;!--Skip non-critical Microsoft logs and so log only own logs--&gt;</span><br><span class=\"line\">\t\t&lt;logger name=&quot;Microsoft.*&quot; maxLevel=&quot;Info&quot; final=&quot;true&quot; /&gt;</span><br><span class=\"line\">\t\t&lt;logger name=&quot;*&quot; minlevel=&quot;Info&quot; writeTo=&quot;filelinux&quot; /&gt;</span><br><span class=\"line\">\t\t&lt;!--&lt;logger name=&quot;*&quot; minlevel=&quot;Info&quot; writeTo=&quot;file&quot; /&gt;--&gt;</span><br><span class=\"line\">\t&lt;/rules&gt;</span><br><span class=\"line\">&lt;/nlog&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-build-docker-image\"><a href=\"#2-build-docker-image\" class=\"headerlink\" title=\"2. build docker image\"></a>2. build docker image</h3><blockquote>\n<p>linux 建置 .net core 可以參考<a href=\"https://ste5022424.github.io/2018/12/28/Net-Core-SKD-For-Linux/\">這篇</a></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker  build -t dotnetcoreapi:v2 .</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-docker-run\"><a href=\"#3-docker-run\" class=\"headerlink\" title=\"3. docker run\"></a>3. docker run</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d -p 8181:80 --name netcorenlog -v /tmp/Log:/app/Log dotnetcoreapi:v2</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>如果要進入docker內，可以使用 <a href=\"https://philipzheng.gitbooks.io/docker_practice/content/container/enter.html\" target=\"_blank\" rel=\"noopener\">exec</a> </p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -ti netcorenlog bash</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-執行\"><a href=\"#4-執行\" class=\"headerlink\" title=\"4. 執行\"></a>4. 執行</h3><p><img src=\"https://i.imgur.com/1UmE73P.png\" alt></p>\n<h3 id=\"5-檢查宿主就可以看到-log已經共享出來了\"><a href=\"#5-檢查宿主就可以看到-log已經共享出來了\" class=\"headerlink\" title=\"5. 檢查宿主就可以看到 log已經共享出來了\"></a>5. 檢查宿主就可以看到 log已經共享出來了</h3><p><img src=\"https://i.imgur.com/0Xr9hvW.png\" alt></p>\n<p><img src=\"https://i.imgur.com/5glSt7g.png\" alt></p>\n<blockquote>\n<p><a href=\"https://github.com/ste5022424/donetcorewebapi\" target=\"_blank\" rel=\"noopener\">範例檔案</a></p>\n</blockquote>\n<h2 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h2><ul>\n<li><a href=\"https://github.com/NLog/NLog.Web/wiki/Getting-started-with-ASP.NET-Core-2\" target=\"_blank\" rel=\"noopener\">Getting started with ASP.NET Core 2</a></li>\n<li><a href=\"https://github.com/nlog/NLog/wiki/Configuration-file\" target=\"_blank\" rel=\"noopener\">nlog設定</a></li>\n</ul>\n"},{"title":".Net Core SKD For Linux","date":"2018-12-28T04:02:10.000Z","_content":"## .Net Core SKD For Linux\n\n```\ncd tmp/\nmkdir netcoresdk2.1\ncd netcoresdk2.1\n\nwget -q https://packages.microsoft.com/config/ubuntu/16.04/packages-microsoft-prod.deb\nsudo dpkg -i packages-microsoft-prod.deb\n\n\nsudo apt-get install apt-transport-https\nsudo apt-get update\nsudo apt-get install dotnet-sdk-2.1\n\n```\n\n## 參考\n* [https://dotnet.microsoft.com/download/dotnet-core/2.1](https://dotnet.microsoft.com/download/dotnet-core/2.1)\n* [Install .NET Core 2.1 SDK on Linux Ubuntu 16.04 x64](https://dotnet.microsoft.com/download/linux-package-manager/ubuntu16-04/sdk-2.1.502)\n","source":"_posts/Net-Core-SKD-For-Linux.md","raw":"---\ntitle: .Net Core SKD For Linux\ndate: 2018-12-28 12:02:10\ncategories:\n- .net core\ntags:\n- .net core\n- Linux build\n---\n## .Net Core SKD For Linux\n\n```\ncd tmp/\nmkdir netcoresdk2.1\ncd netcoresdk2.1\n\nwget -q https://packages.microsoft.com/config/ubuntu/16.04/packages-microsoft-prod.deb\nsudo dpkg -i packages-microsoft-prod.deb\n\n\nsudo apt-get install apt-transport-https\nsudo apt-get update\nsudo apt-get install dotnet-sdk-2.1\n\n```\n\n## 參考\n* [https://dotnet.microsoft.com/download/dotnet-core/2.1](https://dotnet.microsoft.com/download/dotnet-core/2.1)\n* [Install .NET Core 2.1 SDK on Linux Ubuntu 16.04 x64](https://dotnet.microsoft.com/download/linux-package-manager/ubuntu16-04/sdk-2.1.502)\n","slug":"Net-Core-SKD-For-Linux","published":1,"updated":"2019-06-03T01:52:24.696Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xuw002v1q22yb1gm738","content":"<h2 id=\"Net-Core-SKD-For-Linux\"><a href=\"#Net-Core-SKD-For-Linux\" class=\"headerlink\" title=\".Net Core SKD For Linux\"></a>.Net Core SKD For Linux</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd tmp/</span><br><span class=\"line\">mkdir netcoresdk2.1</span><br><span class=\"line\">cd netcoresdk2.1</span><br><span class=\"line\"></span><br><span class=\"line\">wget -q https://packages.microsoft.com/config/ubuntu/16.04/packages-microsoft-prod.deb</span><br><span class=\"line\">sudo dpkg -i packages-microsoft-prod.deb</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">sudo apt-get install apt-transport-https</span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get install dotnet-sdk-2.1</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h2><ul>\n<li><a href=\"https://dotnet.microsoft.com/download/dotnet-core/2.1\" target=\"_blank\" rel=\"noopener\">https://dotnet.microsoft.com/download/dotnet-core/2.1</a></li>\n<li><a href=\"https://dotnet.microsoft.com/download/linux-package-manager/ubuntu16-04/sdk-2.1.502\" target=\"_blank\" rel=\"noopener\">Install .NET Core 2.1 SDK on Linux Ubuntu 16.04 x64</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Net-Core-SKD-For-Linux\"><a href=\"#Net-Core-SKD-For-Linux\" class=\"headerlink\" title=\".Net Core SKD For Linux\"></a>.Net Core SKD For Linux</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd tmp/</span><br><span class=\"line\">mkdir netcoresdk2.1</span><br><span class=\"line\">cd netcoresdk2.1</span><br><span class=\"line\"></span><br><span class=\"line\">wget -q https://packages.microsoft.com/config/ubuntu/16.04/packages-microsoft-prod.deb</span><br><span class=\"line\">sudo dpkg -i packages-microsoft-prod.deb</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">sudo apt-get install apt-transport-https</span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get install dotnet-sdk-2.1</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h2><ul>\n<li><a href=\"https://dotnet.microsoft.com/download/dotnet-core/2.1\" target=\"_blank\" rel=\"noopener\">https://dotnet.microsoft.com/download/dotnet-core/2.1</a></li>\n<li><a href=\"https://dotnet.microsoft.com/download/linux-package-manager/ubuntu16-04/sdk-2.1.502\" target=\"_blank\" rel=\"noopener\">Install .NET Core 2.1 SDK on Linux Ubuntu 16.04 x64</a></li>\n</ul>\n"},{"title":"Node Js Json Web Token","date":"2019-06-05T06:41:02.000Z","_content":"## Node Js Json Web Token\n\n\n## 參考\n\n* [Node JS jsonwebtoken](https://github.com/auth0/node-jsonwebtoken)\n* [JWT](https://jwt.io/)\n","source":"_posts/Node-Js-Json-Web-Token.md","raw":"---\ntitle: Node Js Json Web Token\ndate: 2019-06-05 14:41:02\ncategories:\n- JWT\ntags:\n- Node JS\n- JWT\n---\n## Node Js Json Web Token\n\n\n## 參考\n\n* [Node JS jsonwebtoken](https://github.com/auth0/node-jsonwebtoken)\n* [JWT](https://jwt.io/)\n","slug":"Node-Js-Json-Web-Token","published":1,"updated":"2019-06-05T07:31:08.923Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xuw002w1q22urfjaxkq","content":"<h2 id=\"Node-Js-Json-Web-Token\"><a href=\"#Node-Js-Json-Web-Token\" class=\"headerlink\" title=\"Node Js Json Web Token\"></a>Node Js Json Web Token</h2><h2 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h2><ul>\n<li><a href=\"https://github.com/auth0/node-jsonwebtoken\" target=\"_blank\" rel=\"noopener\">Node JS jsonwebtoken</a></li>\n<li><a href=\"https://jwt.io/\" target=\"_blank\" rel=\"noopener\">JWT</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Node-Js-Json-Web-Token\"><a href=\"#Node-Js-Json-Web-Token\" class=\"headerlink\" title=\"Node Js Json Web Token\"></a>Node Js Json Web Token</h2><h2 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h2><ul>\n<li><a href=\"https://github.com/auth0/node-jsonwebtoken\" target=\"_blank\" rel=\"noopener\">Node JS jsonwebtoken</a></li>\n<li><a href=\"https://jwt.io/\" target=\"_blank\" rel=\"noopener\">JWT</a></li>\n</ul>\n"},{"title":"Node js Hello world!","date":"2019-05-20T08:47:59.000Z","_content":"\n# Node js Hello world!\n\n> 記得先安裝 [node js](https://nodejs.org/en/)\n\n## 1. Init\n\n``` bash\nnpm init\n```\n\n![init](https://i.imgur.com/KyI1SLv.png)\n\n![init](https://i.imgur.com/1iq6IQb.png)\n\n## 2. 新增 HelloNode.js\n\n```javascript=\nconsole.log('Hello Node JS');\n```\n\n![HelloNode](https://i.imgur.com/InyTfST.png)\n\n## 3. 執行\n\n### 執行有三種方式\n\n### (1) node XXX.js\n\n```bash=\nnode .\\HelloNode.js\n```\n\n![bash](https://i.imgur.com/KbIncMz.png)\n\n### (2) node run\n\n#### package.json 加入以下片段\n\n```bash=\n\"HelloNode\": \"node HelloNode.js\n```\n\n![package](https://i.imgur.com/BIkArgS.png)\n\n#### Run\n\n```bash=\nnpm run HelloNode\n```\n\n![run](https://i.imgur.com/IDxDVIJ.png)\n\n### (3) Vs Code 偵錯\n\n#### 選擇偵錯(Crtl + Shift + D) > 設定\n\n![選擇偵錯](https://i.imgur.com/0l3LrJ4.png)\n\n#### 選 node js\n\n![node](https://i.imgur.com/a7FWok1.png)\n\n#### 調整設定檔\n\n![調整設定檔](https://i.imgur.com/UNj8b4R.png)\n\n#### F5 啟動偵錯\n\n![啟動偵錯](https://i.imgur.com/TLkfqJb.png)\n\n# 參考\n\n* [建立 第一個Node.js 專案](https://ithelp.ithome.com.tw/articles/10199745)","source":"_posts/Node-js-Hello-world.md","raw":"---\ntitle: Node js Hello world!\ndate: 2019-05-20 16:47:59\ncategories:\n- Node js\ntags:\n- Node js\n- VsCode\n---\n\n# Node js Hello world!\n\n> 記得先安裝 [node js](https://nodejs.org/en/)\n\n## 1. Init\n\n``` bash\nnpm init\n```\n\n![init](https://i.imgur.com/KyI1SLv.png)\n\n![init](https://i.imgur.com/1iq6IQb.png)\n\n## 2. 新增 HelloNode.js\n\n```javascript=\nconsole.log('Hello Node JS');\n```\n\n![HelloNode](https://i.imgur.com/InyTfST.png)\n\n## 3. 執行\n\n### 執行有三種方式\n\n### (1) node XXX.js\n\n```bash=\nnode .\\HelloNode.js\n```\n\n![bash](https://i.imgur.com/KbIncMz.png)\n\n### (2) node run\n\n#### package.json 加入以下片段\n\n```bash=\n\"HelloNode\": \"node HelloNode.js\n```\n\n![package](https://i.imgur.com/BIkArgS.png)\n\n#### Run\n\n```bash=\nnpm run HelloNode\n```\n\n![run](https://i.imgur.com/IDxDVIJ.png)\n\n### (3) Vs Code 偵錯\n\n#### 選擇偵錯(Crtl + Shift + D) > 設定\n\n![選擇偵錯](https://i.imgur.com/0l3LrJ4.png)\n\n#### 選 node js\n\n![node](https://i.imgur.com/a7FWok1.png)\n\n#### 調整設定檔\n\n![調整設定檔](https://i.imgur.com/UNj8b4R.png)\n\n#### F5 啟動偵錯\n\n![啟動偵錯](https://i.imgur.com/TLkfqJb.png)\n\n# 參考\n\n* [建立 第一個Node.js 專案](https://ithelp.ithome.com.tw/articles/10199745)","slug":"Node-js-Hello-world","published":1,"updated":"2019-06-03T01:52:24.696Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xuy00311q2255ikwus8","content":"<h1 id=\"Node-js-Hello-world\"><a href=\"#Node-js-Hello-world\" class=\"headerlink\" title=\"Node js Hello world!\"></a>Node js Hello world!</h1><blockquote>\n<p>記得先安裝 <a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">node js</a></p>\n</blockquote>\n<h2 id=\"1-Init\"><a href=\"#1-Init\" class=\"headerlink\" title=\"1. Init\"></a>1. Init</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm init</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/KyI1SLv.png\" alt=\"init\"></p>\n<p><img src=\"https://i.imgur.com/1iq6IQb.png\" alt=\"init\"></p>\n<h2 id=\"2-新增-HelloNode-js\"><a href=\"#2-新增-HelloNode-js\" class=\"headerlink\" title=\"2. 新增 HelloNode.js\"></a>2. 新增 HelloNode.js</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'Hello Node JS'</span>);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/InyTfST.png\" alt=\"HelloNode\"></p>\n<h2 id=\"3-執行\"><a href=\"#3-執行\" class=\"headerlink\" title=\"3. 執行\"></a>3. 執行</h2><h3 id=\"執行有三種方式\"><a href=\"#執行有三種方式\" class=\"headerlink\" title=\"執行有三種方式\"></a>執行有三種方式</h3><h3 id=\"1-node-XXX-js\"><a href=\"#1-node-XXX-js\" class=\"headerlink\" title=\"(1) node XXX.js\"></a>(1) node XXX.js</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node .\\HelloNode.js</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/KbIncMz.png\" alt=\"bash\"></p>\n<h3 id=\"2-node-run\"><a href=\"#2-node-run\" class=\"headerlink\" title=\"(2) node run\"></a>(2) node run</h3><h4 id=\"package-json-加入以下片段\"><a href=\"#package-json-加入以下片段\" class=\"headerlink\" title=\"package.json 加入以下片段\"></a>package.json 加入以下片段</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"HelloNode\"</span>: <span class=\"string\">\"node HelloNode.js</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/BIkArgS.png\" alt=\"package\"></p>\n<h4 id=\"Run\"><a href=\"#Run\" class=\"headerlink\" title=\"Run\"></a>Run</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run HelloNode</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/IDxDVIJ.png\" alt=\"run\"></p>\n<h3 id=\"3-Vs-Code-偵錯\"><a href=\"#3-Vs-Code-偵錯\" class=\"headerlink\" title=\"(3) Vs Code 偵錯\"></a>(3) Vs Code 偵錯</h3><h4 id=\"選擇偵錯-Crtl-Shift-D-gt-設定\"><a href=\"#選擇偵錯-Crtl-Shift-D-gt-設定\" class=\"headerlink\" title=\"選擇偵錯(Crtl + Shift + D) &gt; 設定\"></a>選擇偵錯(Crtl + Shift + D) &gt; 設定</h4><p><img src=\"https://i.imgur.com/0l3LrJ4.png\" alt=\"選擇偵錯\"></p>\n<h4 id=\"選-node-js\"><a href=\"#選-node-js\" class=\"headerlink\" title=\"選 node js\"></a>選 node js</h4><p><img src=\"https://i.imgur.com/a7FWok1.png\" alt=\"node\"></p>\n<h4 id=\"調整設定檔\"><a href=\"#調整設定檔\" class=\"headerlink\" title=\"調整設定檔\"></a>調整設定檔</h4><p><img src=\"https://i.imgur.com/UNj8b4R.png\" alt=\"調整設定檔\"></p>\n<h4 id=\"F5-啟動偵錯\"><a href=\"#F5-啟動偵錯\" class=\"headerlink\" title=\"F5 啟動偵錯\"></a>F5 啟動偵錯</h4><p><img src=\"https://i.imgur.com/TLkfqJb.png\" alt=\"啟動偵錯\"></p>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10199745\" target=\"_blank\" rel=\"noopener\">建立 第一個Node.js 專案</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Node-js-Hello-world\"><a href=\"#Node-js-Hello-world\" class=\"headerlink\" title=\"Node js Hello world!\"></a>Node js Hello world!</h1><blockquote>\n<p>記得先安裝 <a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">node js</a></p>\n</blockquote>\n<h2 id=\"1-Init\"><a href=\"#1-Init\" class=\"headerlink\" title=\"1. Init\"></a>1. Init</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm init</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/KyI1SLv.png\" alt=\"init\"></p>\n<p><img src=\"https://i.imgur.com/1iq6IQb.png\" alt=\"init\"></p>\n<h2 id=\"2-新增-HelloNode-js\"><a href=\"#2-新增-HelloNode-js\" class=\"headerlink\" title=\"2. 新增 HelloNode.js\"></a>2. 新增 HelloNode.js</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'Hello Node JS'</span>);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/InyTfST.png\" alt=\"HelloNode\"></p>\n<h2 id=\"3-執行\"><a href=\"#3-執行\" class=\"headerlink\" title=\"3. 執行\"></a>3. 執行</h2><h3 id=\"執行有三種方式\"><a href=\"#執行有三種方式\" class=\"headerlink\" title=\"執行有三種方式\"></a>執行有三種方式</h3><h3 id=\"1-node-XXX-js\"><a href=\"#1-node-XXX-js\" class=\"headerlink\" title=\"(1) node XXX.js\"></a>(1) node XXX.js</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node .\\HelloNode.js</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/KbIncMz.png\" alt=\"bash\"></p>\n<h3 id=\"2-node-run\"><a href=\"#2-node-run\" class=\"headerlink\" title=\"(2) node run\"></a>(2) node run</h3><h4 id=\"package-json-加入以下片段\"><a href=\"#package-json-加入以下片段\" class=\"headerlink\" title=\"package.json 加入以下片段\"></a>package.json 加入以下片段</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"HelloNode\"</span>: <span class=\"string\">\"node HelloNode.js</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/BIkArgS.png\" alt=\"package\"></p>\n<h4 id=\"Run\"><a href=\"#Run\" class=\"headerlink\" title=\"Run\"></a>Run</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run HelloNode</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/IDxDVIJ.png\" alt=\"run\"></p>\n<h3 id=\"3-Vs-Code-偵錯\"><a href=\"#3-Vs-Code-偵錯\" class=\"headerlink\" title=\"(3) Vs Code 偵錯\"></a>(3) Vs Code 偵錯</h3><h4 id=\"選擇偵錯-Crtl-Shift-D-gt-設定\"><a href=\"#選擇偵錯-Crtl-Shift-D-gt-設定\" class=\"headerlink\" title=\"選擇偵錯(Crtl + Shift + D) &gt; 設定\"></a>選擇偵錯(Crtl + Shift + D) &gt; 設定</h4><p><img src=\"https://i.imgur.com/0l3LrJ4.png\" alt=\"選擇偵錯\"></p>\n<h4 id=\"選-node-js\"><a href=\"#選-node-js\" class=\"headerlink\" title=\"選 node js\"></a>選 node js</h4><p><img src=\"https://i.imgur.com/a7FWok1.png\" alt=\"node\"></p>\n<h4 id=\"調整設定檔\"><a href=\"#調整設定檔\" class=\"headerlink\" title=\"調整設定檔\"></a>調整設定檔</h4><p><img src=\"https://i.imgur.com/UNj8b4R.png\" alt=\"調整設定檔\"></p>\n<h4 id=\"F5-啟動偵錯\"><a href=\"#F5-啟動偵錯\" class=\"headerlink\" title=\"F5 啟動偵錯\"></a>F5 啟動偵錯</h4><p><img src=\"https://i.imgur.com/TLkfqJb.png\" alt=\"啟動偵錯\"></p>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://ithelp.ithome.com.tw/articles/10199745\" target=\"_blank\" rel=\"noopener\">建立 第一個Node.js 專案</a></li>\n</ul>\n"},{"title":"Node js ORM Sequelize","date":"2019-05-30T08:17:00.000Z","_content":"","source":"_posts/Node-js-ORM-Sequelize.md","raw":"---\ntitle: Node js ORM Sequelize\ndate: 2019-05-30 16:17:00\ncategories:\ntags:\n---\n","slug":"Node-js-ORM-Sequelize","published":1,"updated":"2019-06-03T01:52:24.697Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xuy00331q222g7syu8a","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Node.js Web on Docker","date":"2019-05-27T07:59:35.000Z","_content":"\n# Node.js Web on Docker\n\n## 1. init Project\n\n```bash=\nnpm init\nnpm install\ngit init\ngit add .\ngit -commit -m \"git init\"\n```\n![](https://i.imgur.com/6Nw3vNY.png)\n\n## 2. Edit package.json\n\n```bash=\n{\n  \"name\": \"nodejs_docker\",\n  \"version\": \"1.0.0\",\n  \"description\": \"nodejs_docker\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"start\": \"node index.js\"\n  },\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"dependencies\": {\n    \"express\": \"^4.17.1\"\n  }\n}\n```\n\n## 3. Install express.js\n\n```bash=\nnpm install express --save\n```\n\n## 4.Creat index.js\n\n```bash=\n'use strict';\n\nconst express = require('express');\n\n// Constants\nconst PORT = 8080;\nconst HOST = '0.0.0.0';\n\n// App\nconst app = express();\napp.get('/', (req, res) => {\n  res.send('Hello world\\n');\n});\n\napp.listen(PORT, HOST);\nconsole.log(`Running on http://${HOST}:${PORT}`);\n```\n\n![](https://i.imgur.com/NUWIoL2.png)\n\n## 5. Creat Dockerfile\n\n```bash=\nFROM node:8\n\n# Create app directory\nWORKDIR /usr/src/app\n\n# Install app dependencies\n# A wildcard is used to ensure both package.json AND package-lock.json are copied\n# where available (npm@5+)\nCOPY package*.json ./\n\nRUN npm install\n# If you are building your code for production\n# RUN npm ci --only=production\n\n# Bundle app source\nCOPY . .\n\nEXPOSE 8080\nCMD [ \"npm\", \"start\" ]\n```\n![](https://i.imgur.com/Co2Q6g7.png)\n\n## 6. Build Docker Images\n\n```bash=\ndocker build -t node-web-app .\n```\n\n## 7. Docker Run\n\n```bash=\ndocker run -p 49160:8080 -d --name node-web-app node-web-app\n```\n\n## 8. Demo\n\n```bash=\ncurl 127.0.0.1:49160\n```\n![](https://i.imgur.com/34rpm5d.png)\n\n> [範例連結](https://github.com/ste5022424/nodejs_docker)\n\n# 參考\n\n* [把一個Node.js web 應用程序給Docker 化](https://nodejs.org/zh-cn/docs/guides/nodejs-docker-webapp/)","source":"_posts/Node-js-Web-on-Docker.md","raw":"---\ntitle: Node.js Web on Docker\ndate: 2019-05-27 15:59:35\ncategories:\n- Node JS\ntags:\n- Node JS\n- Docker\n---\n\n# Node.js Web on Docker\n\n## 1. init Project\n\n```bash=\nnpm init\nnpm install\ngit init\ngit add .\ngit -commit -m \"git init\"\n```\n![](https://i.imgur.com/6Nw3vNY.png)\n\n## 2. Edit package.json\n\n```bash=\n{\n  \"name\": \"nodejs_docker\",\n  \"version\": \"1.0.0\",\n  \"description\": \"nodejs_docker\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"start\": \"node index.js\"\n  },\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"dependencies\": {\n    \"express\": \"^4.17.1\"\n  }\n}\n```\n\n## 3. Install express.js\n\n```bash=\nnpm install express --save\n```\n\n## 4.Creat index.js\n\n```bash=\n'use strict';\n\nconst express = require('express');\n\n// Constants\nconst PORT = 8080;\nconst HOST = '0.0.0.0';\n\n// App\nconst app = express();\napp.get('/', (req, res) => {\n  res.send('Hello world\\n');\n});\n\napp.listen(PORT, HOST);\nconsole.log(`Running on http://${HOST}:${PORT}`);\n```\n\n![](https://i.imgur.com/NUWIoL2.png)\n\n## 5. Creat Dockerfile\n\n```bash=\nFROM node:8\n\n# Create app directory\nWORKDIR /usr/src/app\n\n# Install app dependencies\n# A wildcard is used to ensure both package.json AND package-lock.json are copied\n# where available (npm@5+)\nCOPY package*.json ./\n\nRUN npm install\n# If you are building your code for production\n# RUN npm ci --only=production\n\n# Bundle app source\nCOPY . .\n\nEXPOSE 8080\nCMD [ \"npm\", \"start\" ]\n```\n![](https://i.imgur.com/Co2Q6g7.png)\n\n## 6. Build Docker Images\n\n```bash=\ndocker build -t node-web-app .\n```\n\n## 7. Docker Run\n\n```bash=\ndocker run -p 49160:8080 -d --name node-web-app node-web-app\n```\n\n## 8. Demo\n\n```bash=\ncurl 127.0.0.1:49160\n```\n![](https://i.imgur.com/34rpm5d.png)\n\n> [範例連結](https://github.com/ste5022424/nodejs_docker)\n\n# 參考\n\n* [把一個Node.js web 應用程序給Docker 化](https://nodejs.org/zh-cn/docs/guides/nodejs-docker-webapp/)","slug":"Node-js-Web-on-Docker","published":1,"updated":"2019-06-03T01:52:24.697Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xuz00381q22ed3j7idz","content":"<h1 id=\"Node-js-Web-on-Docker\"><a href=\"#Node-js-Web-on-Docker\" class=\"headerlink\" title=\"Node.js Web on Docker\"></a>Node.js Web on Docker</h1><h2 id=\"1-init-Project\"><a href=\"#1-init-Project\" class=\"headerlink\" title=\"1. init Project\"></a>1. init Project</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm init</span><br><span class=\"line\">npm install</span><br><span class=\"line\">git init</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git -commit -m <span class=\"string\">\"git init\"</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/6Nw3vNY.png\" alt></p>\n<h2 id=\"2-Edit-package-json\"><a href=\"#2-Edit-package-json\" class=\"headerlink\" title=\"2. Edit package.json\"></a>2. Edit package.json</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"name\"</span>: <span class=\"string\">\"nodejs_docker\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"version\"</span>: <span class=\"string\">\"1.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"description\"</span>: <span class=\"string\">\"nodejs_docker\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"main\"</span>: <span class=\"string\">\"index.js\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"start\"</span>: <span class=\"string\">\"node index.js\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">\"author\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"license\"</span>: <span class=\"string\">\"ISC\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"dependencies\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"express\"</span>: <span class=\"string\">\"^4.17.1\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-Install-express-js\"><a href=\"#3-Install-express-js\" class=\"headerlink\" title=\"3. Install express.js\"></a>3. Install express.js</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install express --save</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-Creat-index-js\"><a href=\"#4-Creat-index-js\" class=\"headerlink\" title=\"4.Creat index.js\"></a>4.Creat index.js</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">'use strict'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">const express = require(<span class=\"string\">'express'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">// Constants</span><br><span class=\"line\">const PORT = 8080;</span><br><span class=\"line\">const HOST = <span class=\"string\">'0.0.0.0'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">// App</span><br><span class=\"line\">const app = express();</span><br><span class=\"line\">app.get(<span class=\"string\">'/'</span>, (req, res) =&gt; &#123;</span><br><span class=\"line\">  res.send(<span class=\"string\">'Hello world\\n'</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">app.listen(PORT, HOST);</span><br><span class=\"line\">console.log(`Running on http://<span class=\"variable\">$&#123;HOST&#125;</span>:<span class=\"variable\">$&#123;PORT&#125;</span>`);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/NUWIoL2.png\" alt></p>\n<h2 id=\"5-Creat-Dockerfile\"><a href=\"#5-Creat-Dockerfile\" class=\"headerlink\" title=\"5. Creat Dockerfile\"></a>5. Creat Dockerfile</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FROM node:8</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Create app directory</span></span><br><span class=\"line\">WORKDIR /usr/src/app</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Install app dependencies</span></span><br><span class=\"line\"><span class=\"comment\"># A wildcard is used to ensure both package.json AND package-lock.json are copied</span></span><br><span class=\"line\"><span class=\"comment\"># where available (npm@5+)</span></span><br><span class=\"line\">COPY package*.json ./</span><br><span class=\"line\"></span><br><span class=\"line\">RUN npm install</span><br><span class=\"line\"><span class=\"comment\"># If you are building your code for production</span></span><br><span class=\"line\"><span class=\"comment\"># RUN npm ci --only=production</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Bundle app source</span></span><br><span class=\"line\">COPY . .</span><br><span class=\"line\"></span><br><span class=\"line\">EXPOSE 8080</span><br><span class=\"line\">CMD [ <span class=\"string\">\"npm\"</span>, <span class=\"string\">\"start\"</span> ]</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/Co2Q6g7.png\" alt></p>\n<h2 id=\"6-Build-Docker-Images\"><a href=\"#6-Build-Docker-Images\" class=\"headerlink\" title=\"6. Build Docker Images\"></a>6. Build Docker Images</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker build -t node-web-app .</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-Docker-Run\"><a href=\"#7-Docker-Run\" class=\"headerlink\" title=\"7. Docker Run\"></a>7. Docker Run</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -p 49160:8080 -d --name node-web-app node-web-app</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"8-Demo\"><a href=\"#8-Demo\" class=\"headerlink\" title=\"8. Demo\"></a>8. Demo</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl 127.0.0.1:49160</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/34rpm5d.png\" alt></p>\n<blockquote>\n<p><a href=\"https://github.com/ste5022424/nodejs_docker\" target=\"_blank\" rel=\"noopener\">範例連結</a></p>\n</blockquote>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://nodejs.org/zh-cn/docs/guides/nodejs-docker-webapp/\" target=\"_blank\" rel=\"noopener\">把一個Node.js web 應用程序給Docker 化</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Node-js-Web-on-Docker\"><a href=\"#Node-js-Web-on-Docker\" class=\"headerlink\" title=\"Node.js Web on Docker\"></a>Node.js Web on Docker</h1><h2 id=\"1-init-Project\"><a href=\"#1-init-Project\" class=\"headerlink\" title=\"1. init Project\"></a>1. init Project</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm init</span><br><span class=\"line\">npm install</span><br><span class=\"line\">git init</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git -commit -m <span class=\"string\">\"git init\"</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/6Nw3vNY.png\" alt></p>\n<h2 id=\"2-Edit-package-json\"><a href=\"#2-Edit-package-json\" class=\"headerlink\" title=\"2. Edit package.json\"></a>2. Edit package.json</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"name\"</span>: <span class=\"string\">\"nodejs_docker\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"version\"</span>: <span class=\"string\">\"1.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"description\"</span>: <span class=\"string\">\"nodejs_docker\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"main\"</span>: <span class=\"string\">\"index.js\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"start\"</span>: <span class=\"string\">\"node index.js\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">\"author\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"license\"</span>: <span class=\"string\">\"ISC\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"dependencies\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"express\"</span>: <span class=\"string\">\"^4.17.1\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-Install-express-js\"><a href=\"#3-Install-express-js\" class=\"headerlink\" title=\"3. Install express.js\"></a>3. Install express.js</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install express --save</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-Creat-index-js\"><a href=\"#4-Creat-index-js\" class=\"headerlink\" title=\"4.Creat index.js\"></a>4.Creat index.js</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">'use strict'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">const express = require(<span class=\"string\">'express'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">// Constants</span><br><span class=\"line\">const PORT = 8080;</span><br><span class=\"line\">const HOST = <span class=\"string\">'0.0.0.0'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">// App</span><br><span class=\"line\">const app = express();</span><br><span class=\"line\">app.get(<span class=\"string\">'/'</span>, (req, res) =&gt; &#123;</span><br><span class=\"line\">  res.send(<span class=\"string\">'Hello world\\n'</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">app.listen(PORT, HOST);</span><br><span class=\"line\">console.log(`Running on http://<span class=\"variable\">$&#123;HOST&#125;</span>:<span class=\"variable\">$&#123;PORT&#125;</span>`);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/NUWIoL2.png\" alt></p>\n<h2 id=\"5-Creat-Dockerfile\"><a href=\"#5-Creat-Dockerfile\" class=\"headerlink\" title=\"5. Creat Dockerfile\"></a>5. Creat Dockerfile</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FROM node:8</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Create app directory</span></span><br><span class=\"line\">WORKDIR /usr/src/app</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Install app dependencies</span></span><br><span class=\"line\"><span class=\"comment\"># A wildcard is used to ensure both package.json AND package-lock.json are copied</span></span><br><span class=\"line\"><span class=\"comment\"># where available (npm@5+)</span></span><br><span class=\"line\">COPY package*.json ./</span><br><span class=\"line\"></span><br><span class=\"line\">RUN npm install</span><br><span class=\"line\"><span class=\"comment\"># If you are building your code for production</span></span><br><span class=\"line\"><span class=\"comment\"># RUN npm ci --only=production</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Bundle app source</span></span><br><span class=\"line\">COPY . .</span><br><span class=\"line\"></span><br><span class=\"line\">EXPOSE 8080</span><br><span class=\"line\">CMD [ <span class=\"string\">\"npm\"</span>, <span class=\"string\">\"start\"</span> ]</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/Co2Q6g7.png\" alt></p>\n<h2 id=\"6-Build-Docker-Images\"><a href=\"#6-Build-Docker-Images\" class=\"headerlink\" title=\"6. Build Docker Images\"></a>6. Build Docker Images</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker build -t node-web-app .</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7-Docker-Run\"><a href=\"#7-Docker-Run\" class=\"headerlink\" title=\"7. Docker Run\"></a>7. Docker Run</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -p 49160:8080 -d --name node-web-app node-web-app</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"8-Demo\"><a href=\"#8-Demo\" class=\"headerlink\" title=\"8. Demo\"></a>8. Demo</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl 127.0.0.1:49160</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/34rpm5d.png\" alt></p>\n<blockquote>\n<p><a href=\"https://github.com/ste5022424/nodejs_docker\" target=\"_blank\" rel=\"noopener\">範例連結</a></p>\n</blockquote>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://nodejs.org/zh-cn/docs/guides/nodejs-docker-webapp/\" target=\"_blank\" rel=\"noopener\">把一個Node.js web 應用程序給Docker 化</a></li>\n</ul>\n"},{"title":"Protocol buffers","date":"2018-12-11T05:59:36.000Z","_content":"\n# Protocol buffers\n\n### Protocol Buffers是一種序列化資料結構的協定。對於透過管線(pipeline)或儲存資料進行通訊的程式開發上是很有用的。這個方法包含一個埠描述語言，描述一些資料結構，並提供程式工具根據這些描述產生程式碼，用於將這些資料結構產生或解析資料串流。\n\n\n# 參考\n\n* [Protocol buffers](https://developers.google.com/protocol-buffers/)\n* [Protocol Buffers wiki](https://zh.wikipedia.org/wiki/Protocol_Buffers)","source":"_posts/Protocol-buffers.md","raw":"---\ntitle: Protocol buffers\ndate: 2018-12-11 13:59:36\ncategories:\n- Protocol buffers\ntags:\n- Protocol buffers\n---\n\n# Protocol buffers\n\n### Protocol Buffers是一種序列化資料結構的協定。對於透過管線(pipeline)或儲存資料進行通訊的程式開發上是很有用的。這個方法包含一個埠描述語言，描述一些資料結構，並提供程式工具根據這些描述產生程式碼，用於將這些資料結構產生或解析資料串流。\n\n\n# 參考\n\n* [Protocol buffers](https://developers.google.com/protocol-buffers/)\n* [Protocol Buffers wiki](https://zh.wikipedia.org/wiki/Protocol_Buffers)","slug":"Protocol-buffers","published":1,"updated":"2019-06-03T01:52:24.697Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xv0003a1q22ugpdfwj7","content":"<h1 id=\"Protocol-buffers\"><a href=\"#Protocol-buffers\" class=\"headerlink\" title=\"Protocol buffers\"></a>Protocol buffers</h1><h3 id=\"Protocol-Buffers是一種序列化資料結構的協定。對於透過管線-pipeline-或儲存資料進行通訊的程式開發上是很有用的。這個方法包含一個埠描述語言，描述一些資料結構，並提供程式工具根據這些描述產生程式碼，用於將這些資料結構產生或解析資料串流。\"><a href=\"#Protocol-Buffers是一種序列化資料結構的協定。對於透過管線-pipeline-或儲存資料進行通訊的程式開發上是很有用的。這個方法包含一個埠描述語言，描述一些資料結構，並提供程式工具根據這些描述產生程式碼，用於將這些資料結構產生或解析資料串流。\" class=\"headerlink\" title=\"Protocol Buffers是一種序列化資料結構的協定。對於透過管線(pipeline)或儲存資料進行通訊的程式開發上是很有用的。這個方法包含一個埠描述語言，描述一些資料結構，並提供程式工具根據這些描述產生程式碼，用於將這些資料結構產生或解析資料串流。\"></a>Protocol Buffers是一種序列化資料結構的協定。對於透過管線(pipeline)或儲存資料進行通訊的程式開發上是很有用的。這個方法包含一個埠描述語言，描述一些資料結構，並提供程式工具根據這些描述產生程式碼，用於將這些資料結構產生或解析資料串流。</h3><h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://developers.google.com/protocol-buffers/\" target=\"_blank\" rel=\"noopener\">Protocol buffers</a></li>\n<li><a href=\"https://zh.wikipedia.org/wiki/Protocol_Buffers\" target=\"_blank\" rel=\"noopener\">Protocol Buffers wiki</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Protocol-buffers\"><a href=\"#Protocol-buffers\" class=\"headerlink\" title=\"Protocol buffers\"></a>Protocol buffers</h1><h3 id=\"Protocol-Buffers是一種序列化資料結構的協定。對於透過管線-pipeline-或儲存資料進行通訊的程式開發上是很有用的。這個方法包含一個埠描述語言，描述一些資料結構，並提供程式工具根據這些描述產生程式碼，用於將這些資料結構產生或解析資料串流。\"><a href=\"#Protocol-Buffers是一種序列化資料結構的協定。對於透過管線-pipeline-或儲存資料進行通訊的程式開發上是很有用的。這個方法包含一個埠描述語言，描述一些資料結構，並提供程式工具根據這些描述產生程式碼，用於將這些資料結構產生或解析資料串流。\" class=\"headerlink\" title=\"Protocol Buffers是一種序列化資料結構的協定。對於透過管線(pipeline)或儲存資料進行通訊的程式開發上是很有用的。這個方法包含一個埠描述語言，描述一些資料結構，並提供程式工具根據這些描述產生程式碼，用於將這些資料結構產生或解析資料串流。\"></a>Protocol Buffers是一種序列化資料結構的協定。對於透過管線(pipeline)或儲存資料進行通訊的程式開發上是很有用的。這個方法包含一個埠描述語言，描述一些資料結構，並提供程式工具根據這些描述產生程式碼，用於將這些資料結構產生或解析資料串流。</h3><h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://developers.google.com/protocol-buffers/\" target=\"_blank\" rel=\"noopener\">Protocol buffers</a></li>\n<li><a href=\"https://zh.wikipedia.org/wiki/Protocol_Buffers\" target=\"_blank\" rel=\"noopener\">Protocol Buffers wiki</a></li>\n</ul>\n"},{"title":"Python Web Application Django","date":"2018-11-14T07:32:10.000Z","_content":"## Writing your first Django app\n\n### 建立專案\n\n```\ndjango-admin startproject mysite\n\n mysite/urls.py\n```\n\n![](https://i.imgur.com/BYPZQIH.png)\n\n### 啟動 Server\n\n```\npython manage.py runserver\n```\n![](https://i.imgur.com/JU85NzY.png)\n\n![](https://i.imgur.com/zDb7byA.png)\n\n### 建立 Polls App\n```\npython manage.py startapp polls\n```\n![](https://i.imgur.com/upH5XoD.png)\n\n#### 建立一個 views.py\n\n```\nfrom django.http import HttpResponse\n\n\ndef index(request):\n    return HttpResponse(\"Hello, world. You're at the polls index.\")\n```\n\n![](https://i.imgur.com/V47boWo.png)\n\n#### 建立一個 urls.py\n\n```\nfrom django.urls import path\n\nfrom . import views\n\nurlpatterns = [\n    path('', views.index, name='index'),\n]\n```\n\n![](https://i.imgur.com/fDb7ZSY.png)\n\n##### 修改 mysite/urls.py\n\n```\nfrom django.contrib import admin\nfrom django.urls import include, path\n\nurlpatterns = [\n    path('polls/', include('polls.urls')),\n    path('admin/', admin.site.urls),\n]\n```\n![](https://i.imgur.com/gzYI2UE.png)\n\n#### 在 run 一次就可以看到剛剛寫的 Hello, world. You're at the polls index.\n\n```\npython manage.py runserver\n```\n\n![](https://i.imgur.com/RLjX5c4.png)\n\n\n# 參考\n* [Writing your first Django app, part 1](https://docs.djangoproject.com/en/2.1/intro/tutorial01/)\n\n* [Use Django in Visual Studio Code](https://code.visualstudio.com/docs/python/tutorial-django)","source":"_posts/Python-Web-Application-Django.md","raw":"---\ntitle: Python Web Application Django\ndate: 2018-11-14 15:32:10\ncategories:\n- python\ntags:\n- Python\n- Django\n- Visual Studio Code\n---\n## Writing your first Django app\n\n### 建立專案\n\n```\ndjango-admin startproject mysite\n\n mysite/urls.py\n```\n\n![](https://i.imgur.com/BYPZQIH.png)\n\n### 啟動 Server\n\n```\npython manage.py runserver\n```\n![](https://i.imgur.com/JU85NzY.png)\n\n![](https://i.imgur.com/zDb7byA.png)\n\n### 建立 Polls App\n```\npython manage.py startapp polls\n```\n![](https://i.imgur.com/upH5XoD.png)\n\n#### 建立一個 views.py\n\n```\nfrom django.http import HttpResponse\n\n\ndef index(request):\n    return HttpResponse(\"Hello, world. You're at the polls index.\")\n```\n\n![](https://i.imgur.com/V47boWo.png)\n\n#### 建立一個 urls.py\n\n```\nfrom django.urls import path\n\nfrom . import views\n\nurlpatterns = [\n    path('', views.index, name='index'),\n]\n```\n\n![](https://i.imgur.com/fDb7ZSY.png)\n\n##### 修改 mysite/urls.py\n\n```\nfrom django.contrib import admin\nfrom django.urls import include, path\n\nurlpatterns = [\n    path('polls/', include('polls.urls')),\n    path('admin/', admin.site.urls),\n]\n```\n![](https://i.imgur.com/gzYI2UE.png)\n\n#### 在 run 一次就可以看到剛剛寫的 Hello, world. You're at the polls index.\n\n```\npython manage.py runserver\n```\n\n![](https://i.imgur.com/RLjX5c4.png)\n\n\n# 參考\n* [Writing your first Django app, part 1](https://docs.djangoproject.com/en/2.1/intro/tutorial01/)\n\n* [Use Django in Visual Studio Code](https://code.visualstudio.com/docs/python/tutorial-django)","slug":"Python-Web-Application-Django","published":1,"updated":"2019-06-03T01:52:24.698Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xv1003e1q22sadvsep1","content":"<h2 id=\"Writing-your-first-Django-app\"><a href=\"#Writing-your-first-Django-app\" class=\"headerlink\" title=\"Writing your first Django app\"></a>Writing your first Django app</h2><h3 id=\"建立專案\"><a href=\"#建立專案\" class=\"headerlink\" title=\"建立專案\"></a>建立專案</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">django-admin startproject mysite</span><br><span class=\"line\"></span><br><span class=\"line\"> mysite/urls.py</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/BYPZQIH.png\" alt></p>\n<h3 id=\"啟動-Server\"><a href=\"#啟動-Server\" class=\"headerlink\" title=\"啟動 Server\"></a>啟動 Server</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python manage.py runserver</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/JU85NzY.png\" alt></p>\n<p><img src=\"https://i.imgur.com/zDb7byA.png\" alt></p>\n<h3 id=\"建立-Polls-App\"><a href=\"#建立-Polls-App\" class=\"headerlink\" title=\"建立 Polls App\"></a>建立 Polls App</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python manage.py startapp polls</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/upH5XoD.png\" alt></p>\n<h4 id=\"建立一個-views-py\"><a href=\"#建立一個-views-py\" class=\"headerlink\" title=\"建立一個 views.py\"></a>建立一個 views.py</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from django.http import HttpResponse</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def index(request):</span><br><span class=\"line\">    return HttpResponse(&quot;Hello, world. You&apos;re at the polls index.&quot;)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/V47boWo.png\" alt></p>\n<h4 id=\"建立一個-urls-py\"><a href=\"#建立一個-urls-py\" class=\"headerlink\" title=\"建立一個 urls.py\"></a>建立一個 urls.py</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from django.urls import path</span><br><span class=\"line\"></span><br><span class=\"line\">from . import views</span><br><span class=\"line\"></span><br><span class=\"line\">urlpatterns = [</span><br><span class=\"line\">    path(&apos;&apos;, views.index, name=&apos;index&apos;),</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/fDb7ZSY.png\" alt></p>\n<h5 id=\"修改-mysite-urls-py\"><a href=\"#修改-mysite-urls-py\" class=\"headerlink\" title=\"修改 mysite/urls.py\"></a>修改 mysite/urls.py</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from django.contrib import admin</span><br><span class=\"line\">from django.urls import include, path</span><br><span class=\"line\"></span><br><span class=\"line\">urlpatterns = [</span><br><span class=\"line\">    path(&apos;polls/&apos;, include(&apos;polls.urls&apos;)),</span><br><span class=\"line\">    path(&apos;admin/&apos;, admin.site.urls),</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/gzYI2UE.png\" alt></p>\n<h4 id=\"在-run-一次就可以看到剛剛寫的-Hello-world-You’re-at-the-polls-index\"><a href=\"#在-run-一次就可以看到剛剛寫的-Hello-world-You’re-at-the-polls-index\" class=\"headerlink\" title=\"在 run 一次就可以看到剛剛寫的 Hello, world. You’re at the polls index.\"></a>在 run 一次就可以看到剛剛寫的 Hello, world. You’re at the polls index.</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python manage.py runserver</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/RLjX5c4.png\" alt></p>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><p><a href=\"https://docs.djangoproject.com/en/2.1/intro/tutorial01/\" target=\"_blank\" rel=\"noopener\">Writing your first Django app, part 1</a></p>\n</li>\n<li><p><a href=\"https://code.visualstudio.com/docs/python/tutorial-django\" target=\"_blank\" rel=\"noopener\">Use Django in Visual Studio Code</a></p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Writing-your-first-Django-app\"><a href=\"#Writing-your-first-Django-app\" class=\"headerlink\" title=\"Writing your first Django app\"></a>Writing your first Django app</h2><h3 id=\"建立專案\"><a href=\"#建立專案\" class=\"headerlink\" title=\"建立專案\"></a>建立專案</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">django-admin startproject mysite</span><br><span class=\"line\"></span><br><span class=\"line\"> mysite/urls.py</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/BYPZQIH.png\" alt></p>\n<h3 id=\"啟動-Server\"><a href=\"#啟動-Server\" class=\"headerlink\" title=\"啟動 Server\"></a>啟動 Server</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python manage.py runserver</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/JU85NzY.png\" alt></p>\n<p><img src=\"https://i.imgur.com/zDb7byA.png\" alt></p>\n<h3 id=\"建立-Polls-App\"><a href=\"#建立-Polls-App\" class=\"headerlink\" title=\"建立 Polls App\"></a>建立 Polls App</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python manage.py startapp polls</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/upH5XoD.png\" alt></p>\n<h4 id=\"建立一個-views-py\"><a href=\"#建立一個-views-py\" class=\"headerlink\" title=\"建立一個 views.py\"></a>建立一個 views.py</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from django.http import HttpResponse</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def index(request):</span><br><span class=\"line\">    return HttpResponse(&quot;Hello, world. You&apos;re at the polls index.&quot;)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/V47boWo.png\" alt></p>\n<h4 id=\"建立一個-urls-py\"><a href=\"#建立一個-urls-py\" class=\"headerlink\" title=\"建立一個 urls.py\"></a>建立一個 urls.py</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from django.urls import path</span><br><span class=\"line\"></span><br><span class=\"line\">from . import views</span><br><span class=\"line\"></span><br><span class=\"line\">urlpatterns = [</span><br><span class=\"line\">    path(&apos;&apos;, views.index, name=&apos;index&apos;),</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/fDb7ZSY.png\" alt></p>\n<h5 id=\"修改-mysite-urls-py\"><a href=\"#修改-mysite-urls-py\" class=\"headerlink\" title=\"修改 mysite/urls.py\"></a>修改 mysite/urls.py</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from django.contrib import admin</span><br><span class=\"line\">from django.urls import include, path</span><br><span class=\"line\"></span><br><span class=\"line\">urlpatterns = [</span><br><span class=\"line\">    path(&apos;polls/&apos;, include(&apos;polls.urls&apos;)),</span><br><span class=\"line\">    path(&apos;admin/&apos;, admin.site.urls),</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/gzYI2UE.png\" alt></p>\n<h4 id=\"在-run-一次就可以看到剛剛寫的-Hello-world-You’re-at-the-polls-index\"><a href=\"#在-run-一次就可以看到剛剛寫的-Hello-world-You’re-at-the-polls-index\" class=\"headerlink\" title=\"在 run 一次就可以看到剛剛寫的 Hello, world. You’re at the polls index.\"></a>在 run 一次就可以看到剛剛寫的 Hello, world. You’re at the polls index.</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python manage.py runserver</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/RLjX5c4.png\" alt></p>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><p><a href=\"https://docs.djangoproject.com/en/2.1/intro/tutorial01/\" target=\"_blank\" rel=\"noopener\">Writing your first Django app, part 1</a></p>\n</li>\n<li><p><a href=\"https://code.visualstudio.com/docs/python/tutorial-django\" target=\"_blank\" rel=\"noopener\">Use Django in Visual Studio Code</a></p>\n</li>\n</ul>\n"},{"title":"Python redis","date":"2018-12-06T02:20:32.000Z","_content":"\n# Python redis\n\n```\nimport redis\nr = redis.Redis(host='localhost', port=6379, db=0)\nr.set('foo', 'bar123123132')\nprint(r.get('foo'))\n\n```\n\n![](https://i.imgur.com/pOuqySo.png)\n\n# 參考\n\n* [https://pypi.org/project/redis/](https://pypi.org/project/redis/)","source":"_posts/Python-redis.md","raw":"---\ntitle: Python redis\ndate: 2018-12-06 10:20:32\ncategories:\n- python\ntags:\n- python\n- redis\n---\n\n# Python redis\n\n```\nimport redis\nr = redis.Redis(host='localhost', port=6379, db=0)\nr.set('foo', 'bar123123132')\nprint(r.get('foo'))\n\n```\n\n![](https://i.imgur.com/pOuqySo.png)\n\n# 參考\n\n* [https://pypi.org/project/redis/](https://pypi.org/project/redis/)","slug":"Python-redis","published":1,"updated":"2019-06-03T01:52:24.699Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xv2003h1q22skpu0fkb","content":"<h1 id=\"Python-redis\"><a href=\"#Python-redis\" class=\"headerlink\" title=\"Python redis\"></a>Python redis</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import redis</span><br><span class=\"line\">r = redis.Redis(host=&apos;localhost&apos;, port=6379, db=0)</span><br><span class=\"line\">r.set(&apos;foo&apos;, &apos;bar123123132&apos;)</span><br><span class=\"line\">print(r.get(&apos;foo&apos;))</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/pOuqySo.png\" alt></p>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://pypi.org/project/redis/\" target=\"_blank\" rel=\"noopener\">https://pypi.org/project/redis/</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Python-redis\"><a href=\"#Python-redis\" class=\"headerlink\" title=\"Python redis\"></a>Python redis</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import redis</span><br><span class=\"line\">r = redis.Redis(host=&apos;localhost&apos;, port=6379, db=0)</span><br><span class=\"line\">r.set(&apos;foo&apos;, &apos;bar123123132&apos;)</span><br><span class=\"line\">print(r.get(&apos;foo&apos;))</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/pOuqySo.png\" alt></p>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://pypi.org/project/redis/\" target=\"_blank\" rel=\"noopener\">https://pypi.org/project/redis/</a></li>\n</ul>\n"},{"title":"Python Hello World","date":"2018-11-14T06:59:14.000Z","_content":"\n## Python Hello World \n\n### Visual Studio Code 安裝 Python 外掛\n![](https://i.imgur.com/EMIoQ8z.png)\n\n### 安裝 Python (https://www.python.org/downloads)\n![](https://i.imgur.com/OuXGcON.png)\n\n\n### 新增一個 hello.py，並輸入 hello world\n\n![](https://i.imgur.com/EVuhZc4.png)\n\n```\nmsg = \"Hello world~\"\nprint(msg)\n```\n\n### F5 執行就可以看到 hello world\n![](https://i.imgur.com/RCTdYm9.png)\n\n\n> 將程式片段選取後，按下 Shift + Enter 就可以執行程式碼片段\n\n![](https://i.imgur.com/n3fRaaf.png)\n\n![](https://i.imgur.com/NS8tmX1.png)\n\n## 參考\n* [Getting Started with Python in VS Code](https://code.visualstudio.com/docs/python/python-tutorial)","source":"_posts/Python-Hello-World.md","raw":"---\ntitle: Python Hello World\ndate: 2018-11-14 14:59:14\ncategories:\n- Python\ntags:\n- Python\n- Visual Studio Code\n---\n\n## Python Hello World \n\n### Visual Studio Code 安裝 Python 外掛\n![](https://i.imgur.com/EMIoQ8z.png)\n\n### 安裝 Python (https://www.python.org/downloads)\n![](https://i.imgur.com/OuXGcON.png)\n\n\n### 新增一個 hello.py，並輸入 hello world\n\n![](https://i.imgur.com/EVuhZc4.png)\n\n```\nmsg = \"Hello world~\"\nprint(msg)\n```\n\n### F5 執行就可以看到 hello world\n![](https://i.imgur.com/RCTdYm9.png)\n\n\n> 將程式片段選取後，按下 Shift + Enter 就可以執行程式碼片段\n\n![](https://i.imgur.com/n3fRaaf.png)\n\n![](https://i.imgur.com/NS8tmX1.png)\n\n## 參考\n* [Getting Started with Python in VS Code](https://code.visualstudio.com/docs/python/python-tutorial)","slug":"Python-Hello-World","published":1,"updated":"2019-06-03T01:52:24.698Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xv4003k1q22ntxuri48","content":"<h2 id=\"Python-Hello-World\"><a href=\"#Python-Hello-World\" class=\"headerlink\" title=\"Python Hello World\"></a>Python Hello World</h2><h3 id=\"Visual-Studio-Code-安裝-Python-外掛\"><a href=\"#Visual-Studio-Code-安裝-Python-外掛\" class=\"headerlink\" title=\"Visual Studio Code 安裝 Python 外掛\"></a>Visual Studio Code 安裝 Python 外掛</h3><p><img src=\"https://i.imgur.com/EMIoQ8z.png\" alt></p>\n<h3 id=\"安裝-Python-https-www-python-org-downloads\"><a href=\"#安裝-Python-https-www-python-org-downloads\" class=\"headerlink\" title=\"安裝 Python (https://www.python.org/downloads)\"></a>安裝 Python (<a href=\"https://www.python.org/downloads\" target=\"_blank\" rel=\"noopener\">https://www.python.org/downloads</a>)</h3><p><img src=\"https://i.imgur.com/OuXGcON.png\" alt></p>\n<h3 id=\"新增一個-hello-py，並輸入-hello-world\"><a href=\"#新增一個-hello-py，並輸入-hello-world\" class=\"headerlink\" title=\"新增一個 hello.py，並輸入 hello world\"></a>新增一個 hello.py，並輸入 hello world</h3><p><img src=\"https://i.imgur.com/EVuhZc4.png\" alt></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">msg = &quot;Hello world~&quot;</span><br><span class=\"line\">print(msg)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"F5-執行就可以看到-hello-world\"><a href=\"#F5-執行就可以看到-hello-world\" class=\"headerlink\" title=\"F5 執行就可以看到 hello world\"></a>F5 執行就可以看到 hello world</h3><p><img src=\"https://i.imgur.com/RCTdYm9.png\" alt></p>\n<blockquote>\n<p>將程式片段選取後，按下 Shift + Enter 就可以執行程式碼片段</p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/n3fRaaf.png\" alt></p>\n<p><img src=\"https://i.imgur.com/NS8tmX1.png\" alt></p>\n<h2 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h2><ul>\n<li><a href=\"https://code.visualstudio.com/docs/python/python-tutorial\" target=\"_blank\" rel=\"noopener\">Getting Started with Python in VS Code</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Python-Hello-World\"><a href=\"#Python-Hello-World\" class=\"headerlink\" title=\"Python Hello World\"></a>Python Hello World</h2><h3 id=\"Visual-Studio-Code-安裝-Python-外掛\"><a href=\"#Visual-Studio-Code-安裝-Python-外掛\" class=\"headerlink\" title=\"Visual Studio Code 安裝 Python 外掛\"></a>Visual Studio Code 安裝 Python 外掛</h3><p><img src=\"https://i.imgur.com/EMIoQ8z.png\" alt></p>\n<h3 id=\"安裝-Python-https-www-python-org-downloads\"><a href=\"#安裝-Python-https-www-python-org-downloads\" class=\"headerlink\" title=\"安裝 Python (https://www.python.org/downloads)\"></a>安裝 Python (<a href=\"https://www.python.org/downloads\" target=\"_blank\" rel=\"noopener\">https://www.python.org/downloads</a>)</h3><p><img src=\"https://i.imgur.com/OuXGcON.png\" alt></p>\n<h3 id=\"新增一個-hello-py，並輸入-hello-world\"><a href=\"#新增一個-hello-py，並輸入-hello-world\" class=\"headerlink\" title=\"新增一個 hello.py，並輸入 hello world\"></a>新增一個 hello.py，並輸入 hello world</h3><p><img src=\"https://i.imgur.com/EVuhZc4.png\" alt></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">msg = &quot;Hello world~&quot;</span><br><span class=\"line\">print(msg)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"F5-執行就可以看到-hello-world\"><a href=\"#F5-執行就可以看到-hello-world\" class=\"headerlink\" title=\"F5 執行就可以看到 hello world\"></a>F5 執行就可以看到 hello world</h3><p><img src=\"https://i.imgur.com/RCTdYm9.png\" alt></p>\n<blockquote>\n<p>將程式片段選取後，按下 Shift + Enter 就可以執行程式碼片段</p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/n3fRaaf.png\" alt></p>\n<p><img src=\"https://i.imgur.com/NS8tmX1.png\" alt></p>\n<h2 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h2><ul>\n<li><a href=\"https://code.visualstudio.com/docs/python/python-tutorial\" target=\"_blank\" rel=\"noopener\">Getting Started with Python in VS Code</a></li>\n</ul>\n"},{"title":"Rancher","date":"2018-11-07T07:04:34.000Z","_content":"\n\n## 參考網址\n* [官網](https://rancher.com/)\n* [官方文件](https://rancher.com/docs/rancher/latest/zh/)","source":"_posts/Rancher.md","raw":"---\ntitle: Rancher\ndate: 2018-11-07 15:04:34\ncategories:\n- Rancher\ntags:\n- Rancher\n- Docker\n- k8s\n---\n\n\n## 參考網址\n* [官網](https://rancher.com/)\n* [官方文件](https://rancher.com/docs/rancher/latest/zh/)","slug":"Rancher","published":1,"updated":"2019-06-03T01:52:24.699Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xv5003o1q22adt15k7h","content":"<h2 id=\"參考網址\"><a href=\"#參考網址\" class=\"headerlink\" title=\"參考網址\"></a>參考網址</h2><ul>\n<li><a href=\"https://rancher.com/\" target=\"_blank\" rel=\"noopener\">官網</a></li>\n<li><a href=\"https://rancher.com/docs/rancher/latest/zh/\" target=\"_blank\" rel=\"noopener\">官方文件</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"參考網址\"><a href=\"#參考網址\" class=\"headerlink\" title=\"參考網址\"></a>參考網址</h2><ul>\n<li><a href=\"https://rancher.com/\" target=\"_blank\" rel=\"noopener\">官網</a></li>\n<li><a href=\"https://rancher.com/docs/rancher/latest/zh/\" target=\"_blank\" rel=\"noopener\">官方文件</a></li>\n</ul>\n"},{"title":"SQL-Server-2017-安裝-登入","date":"2018-10-17T09:27:29.000Z","_content":"# SQL Server 2017 安裝 & 登入\n\n## 1. 下載sql server express\nhttps://www.microsoft.com/zh-tw/sql-server/sql-server-downloads\n\n![](https://i.imgur.com/DSjWrRS.png)\n\n## 2. 安裝 \n\n![](https://i.imgur.com/9CU5pZG.png)\n\n![](https://i.imgur.com/PIVQE5B.png)\n\n![](https://i.imgur.com/BX2qXDA.png)\n\n\n## 3. 設定允許用帳號登入\n\n![](https://i.imgur.com/PlWgPoh.png)\n\n**右鍵 > 屬性**\n\n![](https://i.imgur.com/AARhZ9K.png)\n\n## 4. 設定 127.0.0.1 可以連線\n\n(1)**開啟 > SQL Server 2017 組態管理員**\n\n![](https://i.imgur.com/hnHGAwg.png)\n\n(2)**啟動 TCP/IP**\n(3)**IPAll > TCP通訊埠輸入 : 1433**\n\n![](https://i.imgur.com/rtitoTG.png)\n\n(3)重新啟動 SQL Server \n\n![](https://i.imgur.com/GCoZYqe.png)\n\n\n## 5. 使用帳號登入\n\n![](https://i.imgur.com/SFuHqtZ.png)\n\n\n## 參考網址\n\n* [sql sa 登入失敗(18456)](https://dotblogs.com.tw/messboy000/archive/2014/05/31/145324.aspx)\n* [最近sql server 炸了,重新安装后出现登录出现 连接SQL Server:无法连接到127.0.0.1也就是.](https://blog.csdn.net/QQ459932400/article/details/78002633)","source":"_posts/SQL-Server-2017-安裝-登入.md","raw":"---\ntitle: SQL-Server-2017-安裝-登入\ndate: 2018-10-17 17:27:29\ncategories:\n- SQL Server\ntags:\n- SQL-Server\n---\n# SQL Server 2017 安裝 & 登入\n\n## 1. 下載sql server express\nhttps://www.microsoft.com/zh-tw/sql-server/sql-server-downloads\n\n![](https://i.imgur.com/DSjWrRS.png)\n\n## 2. 安裝 \n\n![](https://i.imgur.com/9CU5pZG.png)\n\n![](https://i.imgur.com/PIVQE5B.png)\n\n![](https://i.imgur.com/BX2qXDA.png)\n\n\n## 3. 設定允許用帳號登入\n\n![](https://i.imgur.com/PlWgPoh.png)\n\n**右鍵 > 屬性**\n\n![](https://i.imgur.com/AARhZ9K.png)\n\n## 4. 設定 127.0.0.1 可以連線\n\n(1)**開啟 > SQL Server 2017 組態管理員**\n\n![](https://i.imgur.com/hnHGAwg.png)\n\n(2)**啟動 TCP/IP**\n(3)**IPAll > TCP通訊埠輸入 : 1433**\n\n![](https://i.imgur.com/rtitoTG.png)\n\n(3)重新啟動 SQL Server \n\n![](https://i.imgur.com/GCoZYqe.png)\n\n\n## 5. 使用帳號登入\n\n![](https://i.imgur.com/SFuHqtZ.png)\n\n\n## 參考網址\n\n* [sql sa 登入失敗(18456)](https://dotblogs.com.tw/messboy000/archive/2014/05/31/145324.aspx)\n* [最近sql server 炸了,重新安装后出现登录出现 连接SQL Server:无法连接到127.0.0.1也就是.](https://blog.csdn.net/QQ459932400/article/details/78002633)","slug":"SQL-Server-2017-安裝-登入","published":1,"updated":"2019-06-03T01:52:24.699Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xv6003r1q22nsekojhr","content":"<h1 id=\"SQL-Server-2017-安裝-amp-登入\"><a href=\"#SQL-Server-2017-安裝-amp-登入\" class=\"headerlink\" title=\"SQL Server 2017 安裝 &amp; 登入\"></a>SQL Server 2017 安裝 &amp; 登入</h1><h2 id=\"1-下載sql-server-express\"><a href=\"#1-下載sql-server-express\" class=\"headerlink\" title=\"1. 下載sql server express\"></a>1. 下載sql server express</h2><p><a href=\"https://www.microsoft.com/zh-tw/sql-server/sql-server-downloads\" target=\"_blank\" rel=\"noopener\">https://www.microsoft.com/zh-tw/sql-server/sql-server-downloads</a></p>\n<p><img src=\"https://i.imgur.com/DSjWrRS.png\" alt></p>\n<h2 id=\"2-安裝\"><a href=\"#2-安裝\" class=\"headerlink\" title=\"2. 安裝\"></a>2. 安裝</h2><p><img src=\"https://i.imgur.com/9CU5pZG.png\" alt></p>\n<p><img src=\"https://i.imgur.com/PIVQE5B.png\" alt></p>\n<p><img src=\"https://i.imgur.com/BX2qXDA.png\" alt></p>\n<h2 id=\"3-設定允許用帳號登入\"><a href=\"#3-設定允許用帳號登入\" class=\"headerlink\" title=\"3. 設定允許用帳號登入\"></a>3. 設定允許用帳號登入</h2><p><img src=\"https://i.imgur.com/PlWgPoh.png\" alt></p>\n<p><strong>右鍵 &gt; 屬性</strong></p>\n<p><img src=\"https://i.imgur.com/AARhZ9K.png\" alt></p>\n<h2 id=\"4-設定-127-0-0-1-可以連線\"><a href=\"#4-設定-127-0-0-1-可以連線\" class=\"headerlink\" title=\"4. 設定 127.0.0.1 可以連線\"></a>4. 設定 127.0.0.1 可以連線</h2><p>(1)<strong>開啟 &gt; SQL Server 2017 組態管理員</strong></p>\n<p><img src=\"https://i.imgur.com/hnHGAwg.png\" alt></p>\n<p>(2)<strong>啟動 TCP/IP</strong><br>(3)<strong>IPAll &gt; TCP通訊埠輸入 : 1433</strong></p>\n<p><img src=\"https://i.imgur.com/rtitoTG.png\" alt></p>\n<p>(3)重新啟動 SQL Server </p>\n<p><img src=\"https://i.imgur.com/GCoZYqe.png\" alt></p>\n<h2 id=\"5-使用帳號登入\"><a href=\"#5-使用帳號登入\" class=\"headerlink\" title=\"5. 使用帳號登入\"></a>5. 使用帳號登入</h2><p><img src=\"https://i.imgur.com/SFuHqtZ.png\" alt></p>\n<h2 id=\"參考網址\"><a href=\"#參考網址\" class=\"headerlink\" title=\"參考網址\"></a>參考網址</h2><ul>\n<li><a href=\"https://dotblogs.com.tw/messboy000/archive/2014/05/31/145324.aspx\" target=\"_blank\" rel=\"noopener\">sql sa 登入失敗(18456)</a></li>\n<li><a href=\"https://blog.csdn.net/QQ459932400/article/details/78002633\" target=\"_blank\" rel=\"noopener\">最近sql server 炸了,重新安装后出现登录出现 连接SQL Server:无法连接到127.0.0.1也就是.</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"SQL-Server-2017-安裝-amp-登入\"><a href=\"#SQL-Server-2017-安裝-amp-登入\" class=\"headerlink\" title=\"SQL Server 2017 安裝 &amp; 登入\"></a>SQL Server 2017 安裝 &amp; 登入</h1><h2 id=\"1-下載sql-server-express\"><a href=\"#1-下載sql-server-express\" class=\"headerlink\" title=\"1. 下載sql server express\"></a>1. 下載sql server express</h2><p><a href=\"https://www.microsoft.com/zh-tw/sql-server/sql-server-downloads\" target=\"_blank\" rel=\"noopener\">https://www.microsoft.com/zh-tw/sql-server/sql-server-downloads</a></p>\n<p><img src=\"https://i.imgur.com/DSjWrRS.png\" alt></p>\n<h2 id=\"2-安裝\"><a href=\"#2-安裝\" class=\"headerlink\" title=\"2. 安裝\"></a>2. 安裝</h2><p><img src=\"https://i.imgur.com/9CU5pZG.png\" alt></p>\n<p><img src=\"https://i.imgur.com/PIVQE5B.png\" alt></p>\n<p><img src=\"https://i.imgur.com/BX2qXDA.png\" alt></p>\n<h2 id=\"3-設定允許用帳號登入\"><a href=\"#3-設定允許用帳號登入\" class=\"headerlink\" title=\"3. 設定允許用帳號登入\"></a>3. 設定允許用帳號登入</h2><p><img src=\"https://i.imgur.com/PlWgPoh.png\" alt></p>\n<p><strong>右鍵 &gt; 屬性</strong></p>\n<p><img src=\"https://i.imgur.com/AARhZ9K.png\" alt></p>\n<h2 id=\"4-設定-127-0-0-1-可以連線\"><a href=\"#4-設定-127-0-0-1-可以連線\" class=\"headerlink\" title=\"4. 設定 127.0.0.1 可以連線\"></a>4. 設定 127.0.0.1 可以連線</h2><p>(1)<strong>開啟 &gt; SQL Server 2017 組態管理員</strong></p>\n<p><img src=\"https://i.imgur.com/hnHGAwg.png\" alt></p>\n<p>(2)<strong>啟動 TCP/IP</strong><br>(3)<strong>IPAll &gt; TCP通訊埠輸入 : 1433</strong></p>\n<p><img src=\"https://i.imgur.com/rtitoTG.png\" alt></p>\n<p>(3)重新啟動 SQL Server </p>\n<p><img src=\"https://i.imgur.com/GCoZYqe.png\" alt></p>\n<h2 id=\"5-使用帳號登入\"><a href=\"#5-使用帳號登入\" class=\"headerlink\" title=\"5. 使用帳號登入\"></a>5. 使用帳號登入</h2><p><img src=\"https://i.imgur.com/SFuHqtZ.png\" alt></p>\n<h2 id=\"參考網址\"><a href=\"#參考網址\" class=\"headerlink\" title=\"參考網址\"></a>參考網址</h2><ul>\n<li><a href=\"https://dotblogs.com.tw/messboy000/archive/2014/05/31/145324.aspx\" target=\"_blank\" rel=\"noopener\">sql sa 登入失敗(18456)</a></li>\n<li><a href=\"https://blog.csdn.net/QQ459932400/article/details/78002633\" target=\"_blank\" rel=\"noopener\">最近sql server 炸了,重新安装后出现登录出现 连接SQL Server:无法连接到127.0.0.1也就是.</a></li>\n</ul>\n"},{"title":"Sequelize-sequelize-auto","date":"2019-06-14T04:00:55.000Z","_content":"\n## Sequelize-sequelize-auto\n\n> 自動產生資料庫關聯模型\n\n### 1. install sequelize-auto\n\n``` bash\nnpm install -g sequelize-auto\n```\n\n### 2. install mysql\n\n``` bash\nnpm install -g mysql\n```\n\n### 3. Run sequelize-auto\n\n```bash\nsequelize-auto -o \"./models\" -d tablename -h localhost -u my_username -p 5432 -x my_password -e mysql\n```\n\n> 這時候就會產生一個跟資料庫對應的模型\n\n![model](./2019-06-14-15-43-05.png)\n\n```javascript\n\n/* jshint indent: 2 */\n\nmodule.exports = function (sequelize, DataTypes) {\n  return sequelize.define('User', {\n    ID: {\n      type: DataTypes.INTEGER(11),\n      allowNull: false,\n      primaryKey: true\n    },\n    Name: {\n      type: DataTypes.STRING(50),\n      allowNull: false\n    },\n    Telephone: {\n      type: DataTypes.STRING(20),\n      allowNull: true\n    },\n    Age: {\n      type: DataTypes.INTEGER(11),\n      allowNull: true\n    }\n  }, {\n      tableName: 'User',\n      timestamps: false\n    });\n};\n\n```\n\n### 4. import model\n\n```javascript\nconst Sequelize = require('sequelize');\nconst sequelize = require('../database/sequelize/sequelize');\nconst User = require('../models/User')(sequelize, Sequelize);\n\n// Find all users\nUser.findAll().then(users => {\n    console.log(\"All users:\", JSON.stringify(users, null, 4));\n});\n\n```\n\n![shoe](./2019-06-14-15-46-33.png)\n\n## Reference\n\n* [sequelizejs](http://docs.sequelizejs.com/manual/getting-started.html)\n* [sequelize-auto](https://github.com/sequelize/sequelize-auto)\n","source":"_posts/Sequelize-sequelize-auto.md","raw":"---\ntitle: Sequelize-sequelize-auto\ndate: 2019-06-14 12:00:55\ncategories:\n- Sequelize\ntags:\n- Sequelize\n- Node js\n---\n\n## Sequelize-sequelize-auto\n\n> 自動產生資料庫關聯模型\n\n### 1. install sequelize-auto\n\n``` bash\nnpm install -g sequelize-auto\n```\n\n### 2. install mysql\n\n``` bash\nnpm install -g mysql\n```\n\n### 3. Run sequelize-auto\n\n```bash\nsequelize-auto -o \"./models\" -d tablename -h localhost -u my_username -p 5432 -x my_password -e mysql\n```\n\n> 這時候就會產生一個跟資料庫對應的模型\n\n![model](./2019-06-14-15-43-05.png)\n\n```javascript\n\n/* jshint indent: 2 */\n\nmodule.exports = function (sequelize, DataTypes) {\n  return sequelize.define('User', {\n    ID: {\n      type: DataTypes.INTEGER(11),\n      allowNull: false,\n      primaryKey: true\n    },\n    Name: {\n      type: DataTypes.STRING(50),\n      allowNull: false\n    },\n    Telephone: {\n      type: DataTypes.STRING(20),\n      allowNull: true\n    },\n    Age: {\n      type: DataTypes.INTEGER(11),\n      allowNull: true\n    }\n  }, {\n      tableName: 'User',\n      timestamps: false\n    });\n};\n\n```\n\n### 4. import model\n\n```javascript\nconst Sequelize = require('sequelize');\nconst sequelize = require('../database/sequelize/sequelize');\nconst User = require('../models/User')(sequelize, Sequelize);\n\n// Find all users\nUser.findAll().then(users => {\n    console.log(\"All users:\", JSON.stringify(users, null, 4));\n});\n\n```\n\n![shoe](./2019-06-14-15-46-33.png)\n\n## Reference\n\n* [sequelizejs](http://docs.sequelizejs.com/manual/getting-started.html)\n* [sequelize-auto](https://github.com/sequelize/sequelize-auto)\n","slug":"Sequelize-sequelize-auto","published":1,"updated":"2019-06-14T09:06:41.108Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xv7003v1q22jscr852h","content":"<h2 id=\"Sequelize-sequelize-auto\"><a href=\"#Sequelize-sequelize-auto\" class=\"headerlink\" title=\"Sequelize-sequelize-auto\"></a>Sequelize-sequelize-auto</h2><blockquote>\n<p>自動產生資料庫關聯模型</p>\n</blockquote>\n<h3 id=\"1-install-sequelize-auto\"><a href=\"#1-install-sequelize-auto\" class=\"headerlink\" title=\"1. install sequelize-auto\"></a>1. install sequelize-auto</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g sequelize-auto</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-install-mysql\"><a href=\"#2-install-mysql\" class=\"headerlink\" title=\"2. install mysql\"></a>2. install mysql</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g mysql</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-Run-sequelize-auto\"><a href=\"#3-Run-sequelize-auto\" class=\"headerlink\" title=\"3. Run sequelize-auto\"></a>3. Run sequelize-auto</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sequelize-auto -o <span class=\"string\">\"./models\"</span> -d tablename -h localhost -u my_username -p 5432 -x my_password -e mysql</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>這時候就會產生一個跟資料庫對應的模型</p>\n</blockquote>\n<p><img src=\"./2019-06-14-15-43-05.png\" alt=\"model\"></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* jshint indent: 2 */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">sequelize, DataTypes</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> sequelize.define(<span class=\"string\">'User'</span>, &#123;</span><br><span class=\"line\">    ID: &#123;</span><br><span class=\"line\">      type: DataTypes.INTEGER(<span class=\"number\">11</span>),</span><br><span class=\"line\">      allowNull: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      primaryKey: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    Name: &#123;</span><br><span class=\"line\">      type: DataTypes.STRING(<span class=\"number\">50</span>),</span><br><span class=\"line\">      allowNull: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    Telephone: &#123;</span><br><span class=\"line\">      type: DataTypes.STRING(<span class=\"number\">20</span>),</span><br><span class=\"line\">      allowNull: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    Age: &#123;</span><br><span class=\"line\">      type: DataTypes.INTEGER(<span class=\"number\">11</span>),</span><br><span class=\"line\">      allowNull: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;, &#123;</span><br><span class=\"line\">      tableName: <span class=\"string\">'User'</span>,</span><br><span class=\"line\">      timestamps: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-import-model\"><a href=\"#4-import-model\" class=\"headerlink\" title=\"4. import model\"></a>4. import model</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> Sequelize = <span class=\"built_in\">require</span>(<span class=\"string\">'sequelize'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> sequelize = <span class=\"built_in\">require</span>(<span class=\"string\">'../database/sequelize/sequelize'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> User = <span class=\"built_in\">require</span>(<span class=\"string\">'../models/User'</span>)(sequelize, Sequelize);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Find all users</span></span><br><span class=\"line\">User.findAll().then(<span class=\"function\"><span class=\"params\">users</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"All users:\"</span>, <span class=\"built_in\">JSON</span>.stringify(users, <span class=\"literal\">null</span>, <span class=\"number\">4</span>));</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"./2019-06-14-15-46-33.png\" alt=\"shoe\"></p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><ul>\n<li><a href=\"http://docs.sequelizejs.com/manual/getting-started.html\" target=\"_blank\" rel=\"noopener\">sequelizejs</a></li>\n<li><a href=\"https://github.com/sequelize/sequelize-auto\" target=\"_blank\" rel=\"noopener\">sequelize-auto</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Sequelize-sequelize-auto\"><a href=\"#Sequelize-sequelize-auto\" class=\"headerlink\" title=\"Sequelize-sequelize-auto\"></a>Sequelize-sequelize-auto</h2><blockquote>\n<p>自動產生資料庫關聯模型</p>\n</blockquote>\n<h3 id=\"1-install-sequelize-auto\"><a href=\"#1-install-sequelize-auto\" class=\"headerlink\" title=\"1. install sequelize-auto\"></a>1. install sequelize-auto</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g sequelize-auto</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-install-mysql\"><a href=\"#2-install-mysql\" class=\"headerlink\" title=\"2. install mysql\"></a>2. install mysql</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g mysql</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-Run-sequelize-auto\"><a href=\"#3-Run-sequelize-auto\" class=\"headerlink\" title=\"3. Run sequelize-auto\"></a>3. Run sequelize-auto</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sequelize-auto -o <span class=\"string\">\"./models\"</span> -d tablename -h localhost -u my_username -p 5432 -x my_password -e mysql</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>這時候就會產生一個跟資料庫對應的模型</p>\n</blockquote>\n<p><img src=\"./2019-06-14-15-43-05.png\" alt=\"model\"></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* jshint indent: 2 */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">sequelize, DataTypes</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> sequelize.define(<span class=\"string\">'User'</span>, &#123;</span><br><span class=\"line\">    ID: &#123;</span><br><span class=\"line\">      type: DataTypes.INTEGER(<span class=\"number\">11</span>),</span><br><span class=\"line\">      allowNull: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      primaryKey: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    Name: &#123;</span><br><span class=\"line\">      type: DataTypes.STRING(<span class=\"number\">50</span>),</span><br><span class=\"line\">      allowNull: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    Telephone: &#123;</span><br><span class=\"line\">      type: DataTypes.STRING(<span class=\"number\">20</span>),</span><br><span class=\"line\">      allowNull: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    Age: &#123;</span><br><span class=\"line\">      type: DataTypes.INTEGER(<span class=\"number\">11</span>),</span><br><span class=\"line\">      allowNull: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;, &#123;</span><br><span class=\"line\">      tableName: <span class=\"string\">'User'</span>,</span><br><span class=\"line\">      timestamps: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-import-model\"><a href=\"#4-import-model\" class=\"headerlink\" title=\"4. import model\"></a>4. import model</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> Sequelize = <span class=\"built_in\">require</span>(<span class=\"string\">'sequelize'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> sequelize = <span class=\"built_in\">require</span>(<span class=\"string\">'../database/sequelize/sequelize'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> User = <span class=\"built_in\">require</span>(<span class=\"string\">'../models/User'</span>)(sequelize, Sequelize);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Find all users</span></span><br><span class=\"line\">User.findAll().then(<span class=\"function\"><span class=\"params\">users</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"All users:\"</span>, <span class=\"built_in\">JSON</span>.stringify(users, <span class=\"literal\">null</span>, <span class=\"number\">4</span>));</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"./2019-06-14-15-46-33.png\" alt=\"shoe\"></p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><ul>\n<li><a href=\"http://docs.sequelizejs.com/manual/getting-started.html\" target=\"_blank\" rel=\"noopener\">sequelizejs</a></li>\n<li><a href=\"https://github.com/sequelize/sequelize-auto\" target=\"_blank\" rel=\"noopener\">sequelize-auto</a></li>\n</ul>\n"},{"title":"Slack Incoming Webhooks","date":"2019-03-07T07:55:46.000Z","_content":"# Slack Incoming Webhooks\n\n## 1. 建立 Slack app\n\n![ Slack app ](https://i.imgur.com/Eff4v91.png)\n\n![Slack app](https://i.imgur.com/KmXrjtJ.png)\n\n![Slack app](https://i.imgur.com/JQ5extf.png)\n\n> App Name: 應用程式名稱\n> Workspace: 選擇一個 Workspace ，如果沒有就建立一個\n\n## 2.選擇 Incoming Webhooks\n\n![Incoming Webhooks](https://i.imgur.com/3orCXKV.png)\n\n## 3. 將開關打開\n\n![將開關打開](https://i.imgur.com/3Zb16k7.png)\n\n![將開關打開](https://i.imgur.com/P5DQmEu.png)\n\n## 4. 先在 slack 上面建立一個頻道\n\n![建立一個頻道](https://i.imgur.com/z1RrkOP.png)\n\n![建立一個頻道](https://i.imgur.com/Eycl1uJ.png)\n\n![建立一個頻道](https://i.imgur.com/OW8GBXE.png)\n\n![建立一個頻道](https://i.imgur.com/7E0dji9.png)\n\n### 5. Add New Webhook to Workspace\n\n![Add New Webhook to Workspace](https://i.imgur.com/3Mntuo1.png)\n\n![Add New Webhook to Workspace](https://i.imgur.com/qP7F4pb.png)\n\n## 6. 複製網址\n\n![複製網址](https://i.imgur.com/s3jRDZY.png)\n\n## 7. 發送訊息\n\n>使用 [Restlet Client - REST API Testing](https://chrome.google.com/webstore/detail/restlet-client-rest-api-t/aejoelaoggembcahagimdiliamlcdmfm) 來測試post\n\n![發送訊息](https://i.imgur.com/AqRyHPU.png)\n\n>channel:頻道名稱\n>text:要發送的data\n\n```json\n{\n  \"channel\":\"myhooktest\",\n   \"text\": \"Hello, world.ipblock\"\n}\n```\n\n## 8. 確認有收到訊息\n\n![收到訊息](https://i.imgur.com/NGe3FxW.png)\n\n# 參考\n* [Incoming Webhooks](https://api.slack.com/incoming-webhooks)","source":"_posts/Slack-Incoming-Webhooks.md","raw":"---\ntitle: Slack Incoming Webhooks\ndate: 2019-03-07 15:55:46\ncategories:\n- Slack\ntags:\n- Slack\n- Incoming Webhooks\n---\n# Slack Incoming Webhooks\n\n## 1. 建立 Slack app\n\n![ Slack app ](https://i.imgur.com/Eff4v91.png)\n\n![Slack app](https://i.imgur.com/KmXrjtJ.png)\n\n![Slack app](https://i.imgur.com/JQ5extf.png)\n\n> App Name: 應用程式名稱\n> Workspace: 選擇一個 Workspace ，如果沒有就建立一個\n\n## 2.選擇 Incoming Webhooks\n\n![Incoming Webhooks](https://i.imgur.com/3orCXKV.png)\n\n## 3. 將開關打開\n\n![將開關打開](https://i.imgur.com/3Zb16k7.png)\n\n![將開關打開](https://i.imgur.com/P5DQmEu.png)\n\n## 4. 先在 slack 上面建立一個頻道\n\n![建立一個頻道](https://i.imgur.com/z1RrkOP.png)\n\n![建立一個頻道](https://i.imgur.com/Eycl1uJ.png)\n\n![建立一個頻道](https://i.imgur.com/OW8GBXE.png)\n\n![建立一個頻道](https://i.imgur.com/7E0dji9.png)\n\n### 5. Add New Webhook to Workspace\n\n![Add New Webhook to Workspace](https://i.imgur.com/3Mntuo1.png)\n\n![Add New Webhook to Workspace](https://i.imgur.com/qP7F4pb.png)\n\n## 6. 複製網址\n\n![複製網址](https://i.imgur.com/s3jRDZY.png)\n\n## 7. 發送訊息\n\n>使用 [Restlet Client - REST API Testing](https://chrome.google.com/webstore/detail/restlet-client-rest-api-t/aejoelaoggembcahagimdiliamlcdmfm) 來測試post\n\n![發送訊息](https://i.imgur.com/AqRyHPU.png)\n\n>channel:頻道名稱\n>text:要發送的data\n\n```json\n{\n  \"channel\":\"myhooktest\",\n   \"text\": \"Hello, world.ipblock\"\n}\n```\n\n## 8. 確認有收到訊息\n\n![收到訊息](https://i.imgur.com/NGe3FxW.png)\n\n# 參考\n* [Incoming Webhooks](https://api.slack.com/incoming-webhooks)","slug":"Slack-Incoming-Webhooks","published":1,"updated":"2019-06-03T01:52:24.700Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xv8003x1q22y8qe6iwl","content":"<h1 id=\"Slack-Incoming-Webhooks\"><a href=\"#Slack-Incoming-Webhooks\" class=\"headerlink\" title=\"Slack Incoming Webhooks\"></a>Slack Incoming Webhooks</h1><h2 id=\"1-建立-Slack-app\"><a href=\"#1-建立-Slack-app\" class=\"headerlink\" title=\"1. 建立 Slack app\"></a>1. 建立 Slack app</h2><p><img src=\"https://i.imgur.com/Eff4v91.png\" alt=\" Slack app \"></p>\n<p><img src=\"https://i.imgur.com/KmXrjtJ.png\" alt=\"Slack app\"></p>\n<p><img src=\"https://i.imgur.com/JQ5extf.png\" alt=\"Slack app\"></p>\n<blockquote>\n<p>App Name: 應用程式名稱<br>Workspace: 選擇一個 Workspace ，如果沒有就建立一個</p>\n</blockquote>\n<h2 id=\"2-選擇-Incoming-Webhooks\"><a href=\"#2-選擇-Incoming-Webhooks\" class=\"headerlink\" title=\"2.選擇 Incoming Webhooks\"></a>2.選擇 Incoming Webhooks</h2><p><img src=\"https://i.imgur.com/3orCXKV.png\" alt=\"Incoming Webhooks\"></p>\n<h2 id=\"3-將開關打開\"><a href=\"#3-將開關打開\" class=\"headerlink\" title=\"3. 將開關打開\"></a>3. 將開關打開</h2><p><img src=\"https://i.imgur.com/3Zb16k7.png\" alt=\"將開關打開\"></p>\n<p><img src=\"https://i.imgur.com/P5DQmEu.png\" alt=\"將開關打開\"></p>\n<h2 id=\"4-先在-slack-上面建立一個頻道\"><a href=\"#4-先在-slack-上面建立一個頻道\" class=\"headerlink\" title=\"4. 先在 slack 上面建立一個頻道\"></a>4. 先在 slack 上面建立一個頻道</h2><p><img src=\"https://i.imgur.com/z1RrkOP.png\" alt=\"建立一個頻道\"></p>\n<p><img src=\"https://i.imgur.com/Eycl1uJ.png\" alt=\"建立一個頻道\"></p>\n<p><img src=\"https://i.imgur.com/OW8GBXE.png\" alt=\"建立一個頻道\"></p>\n<p><img src=\"https://i.imgur.com/7E0dji9.png\" alt=\"建立一個頻道\"></p>\n<h3 id=\"5-Add-New-Webhook-to-Workspace\"><a href=\"#5-Add-New-Webhook-to-Workspace\" class=\"headerlink\" title=\"5. Add New Webhook to Workspace\"></a>5. Add New Webhook to Workspace</h3><p><img src=\"https://i.imgur.com/3Mntuo1.png\" alt=\"Add New Webhook to Workspace\"></p>\n<p><img src=\"https://i.imgur.com/qP7F4pb.png\" alt=\"Add New Webhook to Workspace\"></p>\n<h2 id=\"6-複製網址\"><a href=\"#6-複製網址\" class=\"headerlink\" title=\"6. 複製網址\"></a>6. 複製網址</h2><p><img src=\"https://i.imgur.com/s3jRDZY.png\" alt=\"複製網址\"></p>\n<h2 id=\"7-發送訊息\"><a href=\"#7-發送訊息\" class=\"headerlink\" title=\"7. 發送訊息\"></a>7. 發送訊息</h2><blockquote>\n<p>使用 <a href=\"https://chrome.google.com/webstore/detail/restlet-client-rest-api-t/aejoelaoggembcahagimdiliamlcdmfm\" target=\"_blank\" rel=\"noopener\">Restlet Client - REST API Testing</a> 來測試post</p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/AqRyHPU.png\" alt=\"發送訊息\"></p>\n<blockquote>\n<p>channel:頻道名稱<br>text:要發送的data</p>\n</blockquote>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"channel\"</span>:<span class=\"string\">\"myhooktest\"</span>,</span><br><span class=\"line\">   <span class=\"attr\">\"text\"</span>: <span class=\"string\">\"Hello, world.ipblock\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"8-確認有收到訊息\"><a href=\"#8-確認有收到訊息\" class=\"headerlink\" title=\"8. 確認有收到訊息\"></a>8. 確認有收到訊息</h2><p><img src=\"https://i.imgur.com/NGe3FxW.png\" alt=\"收到訊息\"></p>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://api.slack.com/incoming-webhooks\" target=\"_blank\" rel=\"noopener\">Incoming Webhooks</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Slack-Incoming-Webhooks\"><a href=\"#Slack-Incoming-Webhooks\" class=\"headerlink\" title=\"Slack Incoming Webhooks\"></a>Slack Incoming Webhooks</h1><h2 id=\"1-建立-Slack-app\"><a href=\"#1-建立-Slack-app\" class=\"headerlink\" title=\"1. 建立 Slack app\"></a>1. 建立 Slack app</h2><p><img src=\"https://i.imgur.com/Eff4v91.png\" alt=\" Slack app \"></p>\n<p><img src=\"https://i.imgur.com/KmXrjtJ.png\" alt=\"Slack app\"></p>\n<p><img src=\"https://i.imgur.com/JQ5extf.png\" alt=\"Slack app\"></p>\n<blockquote>\n<p>App Name: 應用程式名稱<br>Workspace: 選擇一個 Workspace ，如果沒有就建立一個</p>\n</blockquote>\n<h2 id=\"2-選擇-Incoming-Webhooks\"><a href=\"#2-選擇-Incoming-Webhooks\" class=\"headerlink\" title=\"2.選擇 Incoming Webhooks\"></a>2.選擇 Incoming Webhooks</h2><p><img src=\"https://i.imgur.com/3orCXKV.png\" alt=\"Incoming Webhooks\"></p>\n<h2 id=\"3-將開關打開\"><a href=\"#3-將開關打開\" class=\"headerlink\" title=\"3. 將開關打開\"></a>3. 將開關打開</h2><p><img src=\"https://i.imgur.com/3Zb16k7.png\" alt=\"將開關打開\"></p>\n<p><img src=\"https://i.imgur.com/P5DQmEu.png\" alt=\"將開關打開\"></p>\n<h2 id=\"4-先在-slack-上面建立一個頻道\"><a href=\"#4-先在-slack-上面建立一個頻道\" class=\"headerlink\" title=\"4. 先在 slack 上面建立一個頻道\"></a>4. 先在 slack 上面建立一個頻道</h2><p><img src=\"https://i.imgur.com/z1RrkOP.png\" alt=\"建立一個頻道\"></p>\n<p><img src=\"https://i.imgur.com/Eycl1uJ.png\" alt=\"建立一個頻道\"></p>\n<p><img src=\"https://i.imgur.com/OW8GBXE.png\" alt=\"建立一個頻道\"></p>\n<p><img src=\"https://i.imgur.com/7E0dji9.png\" alt=\"建立一個頻道\"></p>\n<h3 id=\"5-Add-New-Webhook-to-Workspace\"><a href=\"#5-Add-New-Webhook-to-Workspace\" class=\"headerlink\" title=\"5. Add New Webhook to Workspace\"></a>5. Add New Webhook to Workspace</h3><p><img src=\"https://i.imgur.com/3Mntuo1.png\" alt=\"Add New Webhook to Workspace\"></p>\n<p><img src=\"https://i.imgur.com/qP7F4pb.png\" alt=\"Add New Webhook to Workspace\"></p>\n<h2 id=\"6-複製網址\"><a href=\"#6-複製網址\" class=\"headerlink\" title=\"6. 複製網址\"></a>6. 複製網址</h2><p><img src=\"https://i.imgur.com/s3jRDZY.png\" alt=\"複製網址\"></p>\n<h2 id=\"7-發送訊息\"><a href=\"#7-發送訊息\" class=\"headerlink\" title=\"7. 發送訊息\"></a>7. 發送訊息</h2><blockquote>\n<p>使用 <a href=\"https://chrome.google.com/webstore/detail/restlet-client-rest-api-t/aejoelaoggembcahagimdiliamlcdmfm\" target=\"_blank\" rel=\"noopener\">Restlet Client - REST API Testing</a> 來測試post</p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/AqRyHPU.png\" alt=\"發送訊息\"></p>\n<blockquote>\n<p>channel:頻道名稱<br>text:要發送的data</p>\n</blockquote>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">\"channel\"</span>:<span class=\"string\">\"myhooktest\"</span>,</span><br><span class=\"line\">   <span class=\"attr\">\"text\"</span>: <span class=\"string\">\"Hello, world.ipblock\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"8-確認有收到訊息\"><a href=\"#8-確認有收到訊息\" class=\"headerlink\" title=\"8. 確認有收到訊息\"></a>8. 確認有收到訊息</h2><p><img src=\"https://i.imgur.com/NGe3FxW.png\" alt=\"收到訊息\"></p>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://api.slack.com/incoming-webhooks\" target=\"_blank\" rel=\"noopener\">Incoming Webhooks</a></li>\n</ul>\n"},{"title":"Sonar-scanner-msbuild : credentials must be passed in both begin and end steps or not at all","date":"2019-04-23T03:54:14.000Z","_content":"\n# Sonar-scanner-msbuild : credentials must be passed in both begin and end steps\n\n#### 再跑 SonarScanner 的時候跳出了錯誤([credentials must be passed in both begin and end steps]((https://github.com/SonarSource/sonar-scanner-msbuild/releases/tag/4.1.0.1148)))，如果再 SonarScanner.MSBuild.exe中要使用 /d:sonar.login，必須在 begin 和 end 都要加入 /d:sonar.login，才會生效。\n\n![error](https://i.imgur.com/4i5JLOM.png)\n\n``` bash\nSonarScanner.MSBuild.exe begin /k:\"project-key\" /d:sonar.login=\"YourToken\"\nMSBuild.exe <path to solution.sln> /t:Rebuild\nSonarScanner.MSBuild.exe end /d:sonar.login=\"YourToken\"\n```\n\n> Token 的部分可以去帳號設定產出來\n![Token](https://i.imgur.com/qcSnpi2.png)\n\n![Token](https://i.imgur.com/xHttBYN.png)\n\n# 參考\n\n* [sonar-scanner-msbuild : 4.1.0.1148](https://github.com/SonarSource/sonar-scanner-msbuild/releases/tag/4.1.0.1148)\n\n* [SonarQube+Scanner+for+MSBuild](https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner+for+MSBuild)\n","source":"_posts/Sonar-scanner-msbuild-credentials-must-be-passed-in-both-begin-and-end-steps-or-not-at-all.md","raw":"---\ntitle: >-\n  Sonar-scanner-msbuild : credentials must be passed in both begin and end steps\n  or not at all\ndate: 2019-04-23 11:54:14\ncategories:\n- SonarQube\ntags:\n- SonarQube\n---\n\n# Sonar-scanner-msbuild : credentials must be passed in both begin and end steps\n\n#### 再跑 SonarScanner 的時候跳出了錯誤([credentials must be passed in both begin and end steps]((https://github.com/SonarSource/sonar-scanner-msbuild/releases/tag/4.1.0.1148)))，如果再 SonarScanner.MSBuild.exe中要使用 /d:sonar.login，必須在 begin 和 end 都要加入 /d:sonar.login，才會生效。\n\n![error](https://i.imgur.com/4i5JLOM.png)\n\n``` bash\nSonarScanner.MSBuild.exe begin /k:\"project-key\" /d:sonar.login=\"YourToken\"\nMSBuild.exe <path to solution.sln> /t:Rebuild\nSonarScanner.MSBuild.exe end /d:sonar.login=\"YourToken\"\n```\n\n> Token 的部分可以去帳號設定產出來\n![Token](https://i.imgur.com/qcSnpi2.png)\n\n![Token](https://i.imgur.com/xHttBYN.png)\n\n# 參考\n\n* [sonar-scanner-msbuild : 4.1.0.1148](https://github.com/SonarSource/sonar-scanner-msbuild/releases/tag/4.1.0.1148)\n\n* [SonarQube+Scanner+for+MSBuild](https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner+for+MSBuild)\n","slug":"Sonar-scanner-msbuild-credentials-must-be-passed-in-both-begin-and-end-steps-or-not-at-all","published":1,"updated":"2019-06-03T01:52:24.700Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xv900401q22h8eknr5x","content":"<h1 id=\"Sonar-scanner-msbuild-credentials-must-be-passed-in-both-begin-and-end-steps\"><a href=\"#Sonar-scanner-msbuild-credentials-must-be-passed-in-both-begin-and-end-steps\" class=\"headerlink\" title=\"Sonar-scanner-msbuild : credentials must be passed in both begin and end steps\"></a>Sonar-scanner-msbuild : credentials must be passed in both begin and end steps</h1><h4 id=\"再跑-SonarScanner-的時候跳出了錯誤-credentials-must-be-passed-in-both-begin-and-end-steps-，如果再-SonarScanner-MSBuild-exe中要使用-d-sonar-login，必須在-begin-和-end-都要加入-d-sonar-login，才會生效。\"><a href=\"#再跑-SonarScanner-的時候跳出了錯誤-credentials-must-be-passed-in-both-begin-and-end-steps-，如果再-SonarScanner-MSBuild-exe中要使用-d-sonar-login，必須在-begin-和-end-都要加入-d-sonar-login，才會生效。\" class=\"headerlink\" title=\"再跑 SonarScanner 的時候跳出了錯誤(credentials must be passed in both begin and end steps)，如果再 SonarScanner.MSBuild.exe中要使用 /d:sonar.login，必須在 begin 和 end 都要加入 /d:sonar.login，才會生效。\"></a>再跑 SonarScanner 的時候跳出了錯誤(<a href=\"(https://github.com/SonarSource/sonar-scanner-msbuild/releases/tag/4.1.0.1148)\">credentials must be passed in both begin and end steps</a>)，如果再 SonarScanner.MSBuild.exe中要使用 /d:sonar.login，必須在 begin 和 end 都要加入 /d:sonar.login，才會生效。</h4><p><img src=\"https://i.imgur.com/4i5JLOM.png\" alt=\"error\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SonarScanner.MSBuild.exe begin /k:<span class=\"string\">\"project-key\"</span> /d:sonar.login=<span class=\"string\">\"YourToken\"</span></span><br><span class=\"line\">MSBuild.exe &lt;path to solution.sln&gt; /t:Rebuild</span><br><span class=\"line\">SonarScanner.MSBuild.exe end /d:sonar.login=<span class=\"string\">\"YourToken\"</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>Token 的部分可以去帳號設定產出來<br><img src=\"https://i.imgur.com/qcSnpi2.png\" alt=\"Token\"></p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/xHttBYN.png\" alt=\"Token\"></p>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><p><a href=\"https://github.com/SonarSource/sonar-scanner-msbuild/releases/tag/4.1.0.1148\" target=\"_blank\" rel=\"noopener\">sonar-scanner-msbuild : 4.1.0.1148</a></p>\n</li>\n<li><p><a href=\"https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner+for+MSBuild\" target=\"_blank\" rel=\"noopener\">SonarQube+Scanner+for+MSBuild</a></p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Sonar-scanner-msbuild-credentials-must-be-passed-in-both-begin-and-end-steps\"><a href=\"#Sonar-scanner-msbuild-credentials-must-be-passed-in-both-begin-and-end-steps\" class=\"headerlink\" title=\"Sonar-scanner-msbuild : credentials must be passed in both begin and end steps\"></a>Sonar-scanner-msbuild : credentials must be passed in both begin and end steps</h1><h4 id=\"再跑-SonarScanner-的時候跳出了錯誤-credentials-must-be-passed-in-both-begin-and-end-steps-，如果再-SonarScanner-MSBuild-exe中要使用-d-sonar-login，必須在-begin-和-end-都要加入-d-sonar-login，才會生效。\"><a href=\"#再跑-SonarScanner-的時候跳出了錯誤-credentials-must-be-passed-in-both-begin-and-end-steps-，如果再-SonarScanner-MSBuild-exe中要使用-d-sonar-login，必須在-begin-和-end-都要加入-d-sonar-login，才會生效。\" class=\"headerlink\" title=\"再跑 SonarScanner 的時候跳出了錯誤(credentials must be passed in both begin and end steps)，如果再 SonarScanner.MSBuild.exe中要使用 /d:sonar.login，必須在 begin 和 end 都要加入 /d:sonar.login，才會生效。\"></a>再跑 SonarScanner 的時候跳出了錯誤(<a href=\"(https://github.com/SonarSource/sonar-scanner-msbuild/releases/tag/4.1.0.1148)\">credentials must be passed in both begin and end steps</a>)，如果再 SonarScanner.MSBuild.exe中要使用 /d:sonar.login，必須在 begin 和 end 都要加入 /d:sonar.login，才會生效。</h4><p><img src=\"https://i.imgur.com/4i5JLOM.png\" alt=\"error\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SonarScanner.MSBuild.exe begin /k:<span class=\"string\">\"project-key\"</span> /d:sonar.login=<span class=\"string\">\"YourToken\"</span></span><br><span class=\"line\">MSBuild.exe &lt;path to solution.sln&gt; /t:Rebuild</span><br><span class=\"line\">SonarScanner.MSBuild.exe end /d:sonar.login=<span class=\"string\">\"YourToken\"</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>Token 的部分可以去帳號設定產出來<br><img src=\"https://i.imgur.com/qcSnpi2.png\" alt=\"Token\"></p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/xHttBYN.png\" alt=\"Token\"></p>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><p><a href=\"https://github.com/SonarSource/sonar-scanner-msbuild/releases/tag/4.1.0.1148\" target=\"_blank\" rel=\"noopener\">sonar-scanner-msbuild : 4.1.0.1148</a></p>\n</li>\n<li><p><a href=\"https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner+for+MSBuild\" target=\"_blank\" rel=\"noopener\">SonarQube+Scanner+for+MSBuild</a></p>\n</li>\n</ul>\n"},{"title":"SonarLint - Sonqrqube Server Custom Rules","date":"2019-05-14T05:39:45.000Z","_content":"\n# SonarLint - Sonqrqube Server Custom Rules\n\n## 1. 安裝 [SonarLint](https://ste5022424.github.io/2019/04/15/Sonarqube-in-visual-studio-SonarLint/)\n\n## 2. 檢視 > Team Explore\n\n![Team Explore](https://i.imgur.com/RdWw9Sl.png)\n\n## 3. 連到 Sonqrqube Server\n\n![Sonqrqube Server](https://i.imgur.com/wkKFdfO.png)\n\n## 4. Connet\n\n![Connet](https://i.imgur.com/F4qQEfm.png)\n\n![Connet](https://i.imgur.com/9csx0Jh.png)\n\n## 5. 連線之後，選擇自己的專案下載規則\n\n![下載規則](https://i.imgur.com/0zN7Xbb.png)\n\n## 6. 專案會出現 .sonarlint 跟 .ruleset 檔案\n\n> 可以將檔案加入版控，組員就可以直接連線\n\n![sonarlint](https://i.imgur.com/ICCj1t2.png)\n\n![ruleset](https://i.imgur.com/l62ve75.png)\n\n## 7. 建置 > 針對方案程式碼進行分析 (Alt + F11 )\n\n![針對方案程式碼進行分析](https://i.imgur.com/BO6jdqq.png)\n\n## 8. 回到 sonarqube server > 選擇 > 代碼規則 > 質量配置 > 選擇一個自己做的樣板\n\n![質量配置](https://i.imgur.com/CtywggV.png)\n\n## 9. 隱藏某條規則 (使用S1118 當範例)\n\n![隱藏某條規則](https://i.imgur.com/bQwCsQH.png)\n\n## 10. 回 Team Explore 再去下載一次 profile\n\n![profile](https://i.imgur.com/0zN7Xbb.png)\n\n## 11. 就可以看到 S1118 這條規則已經被隱藏了\n\n![隱藏](https://i.imgur.com/gZYOT9V.png)","source":"_posts/SonarLint-Sonqrqube-Server-Custom-Rules.md","raw":"---\ntitle: SonarLint - Sonqrqube Server Custom Rules\ndate: 2019-05-14 13:39:45\ncategories:\n- SonarLint\ntags:\n- SonarLint\n- Sonqrqube\n---\n\n# SonarLint - Sonqrqube Server Custom Rules\n\n## 1. 安裝 [SonarLint](https://ste5022424.github.io/2019/04/15/Sonarqube-in-visual-studio-SonarLint/)\n\n## 2. 檢視 > Team Explore\n\n![Team Explore](https://i.imgur.com/RdWw9Sl.png)\n\n## 3. 連到 Sonqrqube Server\n\n![Sonqrqube Server](https://i.imgur.com/wkKFdfO.png)\n\n## 4. Connet\n\n![Connet](https://i.imgur.com/F4qQEfm.png)\n\n![Connet](https://i.imgur.com/9csx0Jh.png)\n\n## 5. 連線之後，選擇自己的專案下載規則\n\n![下載規則](https://i.imgur.com/0zN7Xbb.png)\n\n## 6. 專案會出現 .sonarlint 跟 .ruleset 檔案\n\n> 可以將檔案加入版控，組員就可以直接連線\n\n![sonarlint](https://i.imgur.com/ICCj1t2.png)\n\n![ruleset](https://i.imgur.com/l62ve75.png)\n\n## 7. 建置 > 針對方案程式碼進行分析 (Alt + F11 )\n\n![針對方案程式碼進行分析](https://i.imgur.com/BO6jdqq.png)\n\n## 8. 回到 sonarqube server > 選擇 > 代碼規則 > 質量配置 > 選擇一個自己做的樣板\n\n![質量配置](https://i.imgur.com/CtywggV.png)\n\n## 9. 隱藏某條規則 (使用S1118 當範例)\n\n![隱藏某條規則](https://i.imgur.com/bQwCsQH.png)\n\n## 10. 回 Team Explore 再去下載一次 profile\n\n![profile](https://i.imgur.com/0zN7Xbb.png)\n\n## 11. 就可以看到 S1118 這條規則已經被隱藏了\n\n![隱藏](https://i.imgur.com/gZYOT9V.png)","slug":"SonarLint-Sonqrqube-Server-Custom-Rules","published":1,"updated":"2019-06-03T01:52:24.701Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xv900421q22pe7d19z4","content":"<h1 id=\"SonarLint-Sonqrqube-Server-Custom-Rules\"><a href=\"#SonarLint-Sonqrqube-Server-Custom-Rules\" class=\"headerlink\" title=\"SonarLint - Sonqrqube Server Custom Rules\"></a>SonarLint - Sonqrqube Server Custom Rules</h1><h2 id=\"1-安裝-SonarLint\"><a href=\"#1-安裝-SonarLint\" class=\"headerlink\" title=\"1. 安裝 SonarLint\"></a>1. 安裝 <a href=\"https://ste5022424.github.io/2019/04/15/Sonarqube-in-visual-studio-SonarLint/\">SonarLint</a></h2><h2 id=\"2-檢視-gt-Team-Explore\"><a href=\"#2-檢視-gt-Team-Explore\" class=\"headerlink\" title=\"2. 檢視 &gt; Team Explore\"></a>2. 檢視 &gt; Team Explore</h2><p><img src=\"https://i.imgur.com/RdWw9Sl.png\" alt=\"Team Explore\"></p>\n<h2 id=\"3-連到-Sonqrqube-Server\"><a href=\"#3-連到-Sonqrqube-Server\" class=\"headerlink\" title=\"3. 連到 Sonqrqube Server\"></a>3. 連到 Sonqrqube Server</h2><p><img src=\"https://i.imgur.com/wkKFdfO.png\" alt=\"Sonqrqube Server\"></p>\n<h2 id=\"4-Connet\"><a href=\"#4-Connet\" class=\"headerlink\" title=\"4. Connet\"></a>4. Connet</h2><p><img src=\"https://i.imgur.com/F4qQEfm.png\" alt=\"Connet\"></p>\n<p><img src=\"https://i.imgur.com/9csx0Jh.png\" alt=\"Connet\"></p>\n<h2 id=\"5-連線之後，選擇自己的專案下載規則\"><a href=\"#5-連線之後，選擇自己的專案下載規則\" class=\"headerlink\" title=\"5. 連線之後，選擇自己的專案下載規則\"></a>5. 連線之後，選擇自己的專案下載規則</h2><p><img src=\"https://i.imgur.com/0zN7Xbb.png\" alt=\"下載規則\"></p>\n<h2 id=\"6-專案會出現-sonarlint-跟-ruleset-檔案\"><a href=\"#6-專案會出現-sonarlint-跟-ruleset-檔案\" class=\"headerlink\" title=\"6. 專案會出現 .sonarlint 跟 .ruleset 檔案\"></a>6. 專案會出現 .sonarlint 跟 .ruleset 檔案</h2><blockquote>\n<p>可以將檔案加入版控，組員就可以直接連線</p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/ICCj1t2.png\" alt=\"sonarlint\"></p>\n<p><img src=\"https://i.imgur.com/l62ve75.png\" alt=\"ruleset\"></p>\n<h2 id=\"7-建置-gt-針對方案程式碼進行分析-Alt-F11\"><a href=\"#7-建置-gt-針對方案程式碼進行分析-Alt-F11\" class=\"headerlink\" title=\"7. 建置 &gt; 針對方案程式碼進行分析 (Alt + F11 )\"></a>7. 建置 &gt; 針對方案程式碼進行分析 (Alt + F11 )</h2><p><img src=\"https://i.imgur.com/BO6jdqq.png\" alt=\"針對方案程式碼進行分析\"></p>\n<h2 id=\"8-回到-sonarqube-server-gt-選擇-gt-代碼規則-gt-質量配置-gt-選擇一個自己做的樣板\"><a href=\"#8-回到-sonarqube-server-gt-選擇-gt-代碼規則-gt-質量配置-gt-選擇一個自己做的樣板\" class=\"headerlink\" title=\"8. 回到 sonarqube server &gt; 選擇 &gt; 代碼規則 &gt; 質量配置 &gt; 選擇一個自己做的樣板\"></a>8. 回到 sonarqube server &gt; 選擇 &gt; 代碼規則 &gt; 質量配置 &gt; 選擇一個自己做的樣板</h2><p><img src=\"https://i.imgur.com/CtywggV.png\" alt=\"質量配置\"></p>\n<h2 id=\"9-隱藏某條規則-使用S1118-當範例\"><a href=\"#9-隱藏某條規則-使用S1118-當範例\" class=\"headerlink\" title=\"9. 隱藏某條規則 (使用S1118 當範例)\"></a>9. 隱藏某條規則 (使用S1118 當範例)</h2><p><img src=\"https://i.imgur.com/bQwCsQH.png\" alt=\"隱藏某條規則\"></p>\n<h2 id=\"10-回-Team-Explore-再去下載一次-profile\"><a href=\"#10-回-Team-Explore-再去下載一次-profile\" class=\"headerlink\" title=\"10. 回 Team Explore 再去下載一次 profile\"></a>10. 回 Team Explore 再去下載一次 profile</h2><p><img src=\"https://i.imgur.com/0zN7Xbb.png\" alt=\"profile\"></p>\n<h2 id=\"11-就可以看到-S1118-這條規則已經被隱藏了\"><a href=\"#11-就可以看到-S1118-這條規則已經被隱藏了\" class=\"headerlink\" title=\"11. 就可以看到 S1118 這條規則已經被隱藏了\"></a>11. 就可以看到 S1118 這條規則已經被隱藏了</h2><p><img src=\"https://i.imgur.com/gZYOT9V.png\" alt=\"隱藏\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"SonarLint-Sonqrqube-Server-Custom-Rules\"><a href=\"#SonarLint-Sonqrqube-Server-Custom-Rules\" class=\"headerlink\" title=\"SonarLint - Sonqrqube Server Custom Rules\"></a>SonarLint - Sonqrqube Server Custom Rules</h1><h2 id=\"1-安裝-SonarLint\"><a href=\"#1-安裝-SonarLint\" class=\"headerlink\" title=\"1. 安裝 SonarLint\"></a>1. 安裝 <a href=\"https://ste5022424.github.io/2019/04/15/Sonarqube-in-visual-studio-SonarLint/\">SonarLint</a></h2><h2 id=\"2-檢視-gt-Team-Explore\"><a href=\"#2-檢視-gt-Team-Explore\" class=\"headerlink\" title=\"2. 檢視 &gt; Team Explore\"></a>2. 檢視 &gt; Team Explore</h2><p><img src=\"https://i.imgur.com/RdWw9Sl.png\" alt=\"Team Explore\"></p>\n<h2 id=\"3-連到-Sonqrqube-Server\"><a href=\"#3-連到-Sonqrqube-Server\" class=\"headerlink\" title=\"3. 連到 Sonqrqube Server\"></a>3. 連到 Sonqrqube Server</h2><p><img src=\"https://i.imgur.com/wkKFdfO.png\" alt=\"Sonqrqube Server\"></p>\n<h2 id=\"4-Connet\"><a href=\"#4-Connet\" class=\"headerlink\" title=\"4. Connet\"></a>4. Connet</h2><p><img src=\"https://i.imgur.com/F4qQEfm.png\" alt=\"Connet\"></p>\n<p><img src=\"https://i.imgur.com/9csx0Jh.png\" alt=\"Connet\"></p>\n<h2 id=\"5-連線之後，選擇自己的專案下載規則\"><a href=\"#5-連線之後，選擇自己的專案下載規則\" class=\"headerlink\" title=\"5. 連線之後，選擇自己的專案下載規則\"></a>5. 連線之後，選擇自己的專案下載規則</h2><p><img src=\"https://i.imgur.com/0zN7Xbb.png\" alt=\"下載規則\"></p>\n<h2 id=\"6-專案會出現-sonarlint-跟-ruleset-檔案\"><a href=\"#6-專案會出現-sonarlint-跟-ruleset-檔案\" class=\"headerlink\" title=\"6. 專案會出現 .sonarlint 跟 .ruleset 檔案\"></a>6. 專案會出現 .sonarlint 跟 .ruleset 檔案</h2><blockquote>\n<p>可以將檔案加入版控，組員就可以直接連線</p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/ICCj1t2.png\" alt=\"sonarlint\"></p>\n<p><img src=\"https://i.imgur.com/l62ve75.png\" alt=\"ruleset\"></p>\n<h2 id=\"7-建置-gt-針對方案程式碼進行分析-Alt-F11\"><a href=\"#7-建置-gt-針對方案程式碼進行分析-Alt-F11\" class=\"headerlink\" title=\"7. 建置 &gt; 針對方案程式碼進行分析 (Alt + F11 )\"></a>7. 建置 &gt; 針對方案程式碼進行分析 (Alt + F11 )</h2><p><img src=\"https://i.imgur.com/BO6jdqq.png\" alt=\"針對方案程式碼進行分析\"></p>\n<h2 id=\"8-回到-sonarqube-server-gt-選擇-gt-代碼規則-gt-質量配置-gt-選擇一個自己做的樣板\"><a href=\"#8-回到-sonarqube-server-gt-選擇-gt-代碼規則-gt-質量配置-gt-選擇一個自己做的樣板\" class=\"headerlink\" title=\"8. 回到 sonarqube server &gt; 選擇 &gt; 代碼規則 &gt; 質量配置 &gt; 選擇一個自己做的樣板\"></a>8. 回到 sonarqube server &gt; 選擇 &gt; 代碼規則 &gt; 質量配置 &gt; 選擇一個自己做的樣板</h2><p><img src=\"https://i.imgur.com/CtywggV.png\" alt=\"質量配置\"></p>\n<h2 id=\"9-隱藏某條規則-使用S1118-當範例\"><a href=\"#9-隱藏某條規則-使用S1118-當範例\" class=\"headerlink\" title=\"9. 隱藏某條規則 (使用S1118 當範例)\"></a>9. 隱藏某條規則 (使用S1118 當範例)</h2><p><img src=\"https://i.imgur.com/bQwCsQH.png\" alt=\"隱藏某條規則\"></p>\n<h2 id=\"10-回-Team-Explore-再去下載一次-profile\"><a href=\"#10-回-Team-Explore-再去下載一次-profile\" class=\"headerlink\" title=\"10. 回 Team Explore 再去下載一次 profile\"></a>10. 回 Team Explore 再去下載一次 profile</h2><p><img src=\"https://i.imgur.com/0zN7Xbb.png\" alt=\"profile\"></p>\n<h2 id=\"11-就可以看到-S1118-這條規則已經被隱藏了\"><a href=\"#11-就可以看到-S1118-這條規則已經被隱藏了\" class=\"headerlink\" title=\"11. 就可以看到 S1118 這條規則已經被隱藏了\"></a>11. 就可以看到 S1118 這條規則已經被隱藏了</h2><p><img src=\"https://i.imgur.com/gZYOT9V.png\" alt=\"隱藏\"></p>\n"},{"title":"SonarQube Server on Docker","date":"2019-01-15T08:34:30.000Z","_content":"\n## SonarQube Server on Docker\n\n### 1. 建立持久層資料夾\n\n```\nmkdir -p -m 777 ./sonarqube && mkdir -p -m 777 ./sonarqube/conf && mkdir -p -m 777 ./sonarqube/data && mkdir -p -m 777 ./sonarqube/logs && mkdir -p -m 777 ./sonarqube/extensions\n```\n\n### 2. docker-compose.yml\n\n```\nversion: \"3.5\"\nservices:\n    postgresql:\n                container_name: \"postgresql\"\n                image: \"postgres\"\n                ports:\n                - \"5432:5432\"\n                volumes:\n                - \"/postgresql:/var/lib/postgresql/data\"\n                environment:\n                - \"POSTGRES_USER=sonar\"\n                - \"POSTGRES_PASSWORD=sonar\"\n                restart: always\n    sonarqube:\n                container_name: \"sonarqube\"\n                image: \"sonarqube:7.7-community\"\n                ports:\n                - \"9000:9000\"\n                volumes:\n                - \"/sonarqube/conf:/opt/sonarqube/conf\"\n                - \"/sonarqube/data:/opt/sonarqube/data\"\n                - \"/sonarqube/logs:/opt/sonarqube/logs\"\n                - \"/sonarqube/extensions:/opt/sonarqube/extensions\"\n                environment:\n                - \"sonar.jdbc.username=sonar\"\n                - \"sonar.jdbc.password=sonar\"\n                - \"sonar.jdbc.url=jdbc:postgresql://postgresql/sonar\"\n                links:\n                - \"postgresql:postgresql\"\n                restart: always\n\n```\n\n### ADserver 設定\n\n> [設定](https://docs.sonarqube.org/latest/instance-administration/delegated-auth/)\n> [LDAP Plugin](https://docs.sonarqube.org/display/SONARQUBE67/LDAP+Plugin)\n> [团队环境：代码质量管理SonarQube安装](https://blog.frognew.com/2017/05/install-sonarqube.html)\n\n#### 1. 將 sonar.properties 放置 SONARQUBE_HOME/conf/sonar.properties\n\n```bash=\n\n# General Configuration\n# LDAP configuration\nsonar.security.realm=LDAP\nsonar.authenticator.createUsers=true\nsonar.security.savePassword=true\nsonar.security.updateUserAttributes=true\n\nldap.url=ldap://YourAdServer\nldap.bindDn=bindDn\nldap.bindPassword=bindPassword\n\n# User Configuration\nldap.user.baseDn=baseDn\nldap.user.request=(&(objectClass=user)(sAMAccountName={login}))\n\n```\n\n#參考\n* [sonarqube-postgres-docker.md](https://gist.github.com/ceduliocezar/b3bf93125024482b5f2f479696842046)\n* [postgres docker](https://hub.docker.com/_/postgres)\n* [sonarqube docker](https://hub.docker.com/_/sonarqube/)","source":"_posts/SonarQube-Server-on-Docker.md","raw":"---\ntitle: SonarQube Server on Docker\ndate: 2019-01-15 16:34:30\ncategories:\n- SonarQube\ntags:\n- SonarQube\n- Docker\n- docker-compose\n- PostgreSql\n---\n\n## SonarQube Server on Docker\n\n### 1. 建立持久層資料夾\n\n```\nmkdir -p -m 777 ./sonarqube && mkdir -p -m 777 ./sonarqube/conf && mkdir -p -m 777 ./sonarqube/data && mkdir -p -m 777 ./sonarqube/logs && mkdir -p -m 777 ./sonarqube/extensions\n```\n\n### 2. docker-compose.yml\n\n```\nversion: \"3.5\"\nservices:\n    postgresql:\n                container_name: \"postgresql\"\n                image: \"postgres\"\n                ports:\n                - \"5432:5432\"\n                volumes:\n                - \"/postgresql:/var/lib/postgresql/data\"\n                environment:\n                - \"POSTGRES_USER=sonar\"\n                - \"POSTGRES_PASSWORD=sonar\"\n                restart: always\n    sonarqube:\n                container_name: \"sonarqube\"\n                image: \"sonarqube:7.7-community\"\n                ports:\n                - \"9000:9000\"\n                volumes:\n                - \"/sonarqube/conf:/opt/sonarqube/conf\"\n                - \"/sonarqube/data:/opt/sonarqube/data\"\n                - \"/sonarqube/logs:/opt/sonarqube/logs\"\n                - \"/sonarqube/extensions:/opt/sonarqube/extensions\"\n                environment:\n                - \"sonar.jdbc.username=sonar\"\n                - \"sonar.jdbc.password=sonar\"\n                - \"sonar.jdbc.url=jdbc:postgresql://postgresql/sonar\"\n                links:\n                - \"postgresql:postgresql\"\n                restart: always\n\n```\n\n### ADserver 設定\n\n> [設定](https://docs.sonarqube.org/latest/instance-administration/delegated-auth/)\n> [LDAP Plugin](https://docs.sonarqube.org/display/SONARQUBE67/LDAP+Plugin)\n> [团队环境：代码质量管理SonarQube安装](https://blog.frognew.com/2017/05/install-sonarqube.html)\n\n#### 1. 將 sonar.properties 放置 SONARQUBE_HOME/conf/sonar.properties\n\n```bash=\n\n# General Configuration\n# LDAP configuration\nsonar.security.realm=LDAP\nsonar.authenticator.createUsers=true\nsonar.security.savePassword=true\nsonar.security.updateUserAttributes=true\n\nldap.url=ldap://YourAdServer\nldap.bindDn=bindDn\nldap.bindPassword=bindPassword\n\n# User Configuration\nldap.user.baseDn=baseDn\nldap.user.request=(&(objectClass=user)(sAMAccountName={login}))\n\n```\n\n#參考\n* [sonarqube-postgres-docker.md](https://gist.github.com/ceduliocezar/b3bf93125024482b5f2f479696842046)\n* [postgres docker](https://hub.docker.com/_/postgres)\n* [sonarqube docker](https://hub.docker.com/_/sonarqube/)","slug":"SonarQube-Server-on-Docker","published":1,"updated":"2019-06-03T01:52:24.701Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xvb00451q22uqa9upli","content":"<h2 id=\"SonarQube-Server-on-Docker\"><a href=\"#SonarQube-Server-on-Docker\" class=\"headerlink\" title=\"SonarQube Server on Docker\"></a>SonarQube Server on Docker</h2><h3 id=\"1-建立持久層資料夾\"><a href=\"#1-建立持久層資料夾\" class=\"headerlink\" title=\"1. 建立持久層資料夾\"></a>1. 建立持久層資料夾</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p -m 777 ./sonarqube &amp;&amp; mkdir -p -m 777 ./sonarqube/conf &amp;&amp; mkdir -p -m 777 ./sonarqube/data &amp;&amp; mkdir -p -m 777 ./sonarqube/logs &amp;&amp; mkdir -p -m 777 ./sonarqube/extensions</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-docker-compose-yml\"><a href=\"#2-docker-compose-yml\" class=\"headerlink\" title=\"2. docker-compose.yml\"></a>2. docker-compose.yml</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: &quot;3.5&quot;</span><br><span class=\"line\">services:</span><br><span class=\"line\">    postgresql:</span><br><span class=\"line\">                container_name: &quot;postgresql&quot;</span><br><span class=\"line\">                image: &quot;postgres&quot;</span><br><span class=\"line\">                ports:</span><br><span class=\"line\">                - &quot;5432:5432&quot;</span><br><span class=\"line\">                volumes:</span><br><span class=\"line\">                - &quot;/postgresql:/var/lib/postgresql/data&quot;</span><br><span class=\"line\">                environment:</span><br><span class=\"line\">                - &quot;POSTGRES_USER=sonar&quot;</span><br><span class=\"line\">                - &quot;POSTGRES_PASSWORD=sonar&quot;</span><br><span class=\"line\">                restart: always</span><br><span class=\"line\">    sonarqube:</span><br><span class=\"line\">                container_name: &quot;sonarqube&quot;</span><br><span class=\"line\">                image: &quot;sonarqube:7.7-community&quot;</span><br><span class=\"line\">                ports:</span><br><span class=\"line\">                - &quot;9000:9000&quot;</span><br><span class=\"line\">                volumes:</span><br><span class=\"line\">                - &quot;/sonarqube/conf:/opt/sonarqube/conf&quot;</span><br><span class=\"line\">                - &quot;/sonarqube/data:/opt/sonarqube/data&quot;</span><br><span class=\"line\">                - &quot;/sonarqube/logs:/opt/sonarqube/logs&quot;</span><br><span class=\"line\">                - &quot;/sonarqube/extensions:/opt/sonarqube/extensions&quot;</span><br><span class=\"line\">                environment:</span><br><span class=\"line\">                - &quot;sonar.jdbc.username=sonar&quot;</span><br><span class=\"line\">                - &quot;sonar.jdbc.password=sonar&quot;</span><br><span class=\"line\">                - &quot;sonar.jdbc.url=jdbc:postgresql://postgresql/sonar&quot;</span><br><span class=\"line\">                links:</span><br><span class=\"line\">                - &quot;postgresql:postgresql&quot;</span><br><span class=\"line\">                restart: always</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"ADserver-設定\"><a href=\"#ADserver-設定\" class=\"headerlink\" title=\"ADserver 設定\"></a>ADserver 設定</h3><blockquote>\n<p><a href=\"https://docs.sonarqube.org/latest/instance-administration/delegated-auth/\" target=\"_blank\" rel=\"noopener\">設定</a><br><a href=\"https://docs.sonarqube.org/display/SONARQUBE67/LDAP+Plugin\" target=\"_blank\" rel=\"noopener\">LDAP Plugin</a><br><a href=\"https://blog.frognew.com/2017/05/install-sonarqube.html\" target=\"_blank\" rel=\"noopener\">团队环境：代码质量管理SonarQube安装</a></p>\n</blockquote>\n<h4 id=\"1-將-sonar-properties-放置-SONARQUBE-HOME-conf-sonar-properties\"><a href=\"#1-將-sonar-properties-放置-SONARQUBE-HOME-conf-sonar-properties\" class=\"headerlink\" title=\"1. 將 sonar.properties 放置 SONARQUBE_HOME/conf/sonar.properties\"></a>1. 將 sonar.properties 放置 SONARQUBE_HOME/conf/sonar.properties</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># General Configuration</span></span><br><span class=\"line\"><span class=\"comment\"># LDAP configuration</span></span><br><span class=\"line\">sonar.security.realm=LDAP</span><br><span class=\"line\">sonar.authenticator.createUsers=<span class=\"literal\">true</span></span><br><span class=\"line\">sonar.security.savePassword=<span class=\"literal\">true</span></span><br><span class=\"line\">sonar.security.updateUserAttributes=<span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\">ldap.url=ldap://YourAdServer</span><br><span class=\"line\">ldap.bindDn=bindDn</span><br><span class=\"line\">ldap.bindPassword=bindPassword</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># User Configuration</span></span><br><span class=\"line\">ldap.user.baseDn=baseDn</span><br><span class=\"line\">ldap.user.request=(&amp;(objectClass=user)(sAMAccountName=&#123;login&#125;))</span><br></pre></td></tr></table></figure>\n\n<p>#參考</p>\n<ul>\n<li><a href=\"https://gist.github.com/ceduliocezar/b3bf93125024482b5f2f479696842046\" target=\"_blank\" rel=\"noopener\">sonarqube-postgres-docker.md</a></li>\n<li><a href=\"https://hub.docker.com/_/postgres\" target=\"_blank\" rel=\"noopener\">postgres docker</a></li>\n<li><a href=\"https://hub.docker.com/_/sonarqube/\" target=\"_blank\" rel=\"noopener\">sonarqube docker</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"SonarQube-Server-on-Docker\"><a href=\"#SonarQube-Server-on-Docker\" class=\"headerlink\" title=\"SonarQube Server on Docker\"></a>SonarQube Server on Docker</h2><h3 id=\"1-建立持久層資料夾\"><a href=\"#1-建立持久層資料夾\" class=\"headerlink\" title=\"1. 建立持久層資料夾\"></a>1. 建立持久層資料夾</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p -m 777 ./sonarqube &amp;&amp; mkdir -p -m 777 ./sonarqube/conf &amp;&amp; mkdir -p -m 777 ./sonarqube/data &amp;&amp; mkdir -p -m 777 ./sonarqube/logs &amp;&amp; mkdir -p -m 777 ./sonarqube/extensions</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-docker-compose-yml\"><a href=\"#2-docker-compose-yml\" class=\"headerlink\" title=\"2. docker-compose.yml\"></a>2. docker-compose.yml</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: &quot;3.5&quot;</span><br><span class=\"line\">services:</span><br><span class=\"line\">    postgresql:</span><br><span class=\"line\">                container_name: &quot;postgresql&quot;</span><br><span class=\"line\">                image: &quot;postgres&quot;</span><br><span class=\"line\">                ports:</span><br><span class=\"line\">                - &quot;5432:5432&quot;</span><br><span class=\"line\">                volumes:</span><br><span class=\"line\">                - &quot;/postgresql:/var/lib/postgresql/data&quot;</span><br><span class=\"line\">                environment:</span><br><span class=\"line\">                - &quot;POSTGRES_USER=sonar&quot;</span><br><span class=\"line\">                - &quot;POSTGRES_PASSWORD=sonar&quot;</span><br><span class=\"line\">                restart: always</span><br><span class=\"line\">    sonarqube:</span><br><span class=\"line\">                container_name: &quot;sonarqube&quot;</span><br><span class=\"line\">                image: &quot;sonarqube:7.7-community&quot;</span><br><span class=\"line\">                ports:</span><br><span class=\"line\">                - &quot;9000:9000&quot;</span><br><span class=\"line\">                volumes:</span><br><span class=\"line\">                - &quot;/sonarqube/conf:/opt/sonarqube/conf&quot;</span><br><span class=\"line\">                - &quot;/sonarqube/data:/opt/sonarqube/data&quot;</span><br><span class=\"line\">                - &quot;/sonarqube/logs:/opt/sonarqube/logs&quot;</span><br><span class=\"line\">                - &quot;/sonarqube/extensions:/opt/sonarqube/extensions&quot;</span><br><span class=\"line\">                environment:</span><br><span class=\"line\">                - &quot;sonar.jdbc.username=sonar&quot;</span><br><span class=\"line\">                - &quot;sonar.jdbc.password=sonar&quot;</span><br><span class=\"line\">                - &quot;sonar.jdbc.url=jdbc:postgresql://postgresql/sonar&quot;</span><br><span class=\"line\">                links:</span><br><span class=\"line\">                - &quot;postgresql:postgresql&quot;</span><br><span class=\"line\">                restart: always</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"ADserver-設定\"><a href=\"#ADserver-設定\" class=\"headerlink\" title=\"ADserver 設定\"></a>ADserver 設定</h3><blockquote>\n<p><a href=\"https://docs.sonarqube.org/latest/instance-administration/delegated-auth/\" target=\"_blank\" rel=\"noopener\">設定</a><br><a href=\"https://docs.sonarqube.org/display/SONARQUBE67/LDAP+Plugin\" target=\"_blank\" rel=\"noopener\">LDAP Plugin</a><br><a href=\"https://blog.frognew.com/2017/05/install-sonarqube.html\" target=\"_blank\" rel=\"noopener\">团队环境：代码质量管理SonarQube安装</a></p>\n</blockquote>\n<h4 id=\"1-將-sonar-properties-放置-SONARQUBE-HOME-conf-sonar-properties\"><a href=\"#1-將-sonar-properties-放置-SONARQUBE-HOME-conf-sonar-properties\" class=\"headerlink\" title=\"1. 將 sonar.properties 放置 SONARQUBE_HOME/conf/sonar.properties\"></a>1. 將 sonar.properties 放置 SONARQUBE_HOME/conf/sonar.properties</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># General Configuration</span></span><br><span class=\"line\"><span class=\"comment\"># LDAP configuration</span></span><br><span class=\"line\">sonar.security.realm=LDAP</span><br><span class=\"line\">sonar.authenticator.createUsers=<span class=\"literal\">true</span></span><br><span class=\"line\">sonar.security.savePassword=<span class=\"literal\">true</span></span><br><span class=\"line\">sonar.security.updateUserAttributes=<span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\">ldap.url=ldap://YourAdServer</span><br><span class=\"line\">ldap.bindDn=bindDn</span><br><span class=\"line\">ldap.bindPassword=bindPassword</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># User Configuration</span></span><br><span class=\"line\">ldap.user.baseDn=baseDn</span><br><span class=\"line\">ldap.user.request=(&amp;(objectClass=user)(sAMAccountName=&#123;login&#125;))</span><br></pre></td></tr></table></figure>\n\n<p>#參考</p>\n<ul>\n<li><a href=\"https://gist.github.com/ceduliocezar/b3bf93125024482b5f2f479696842046\" target=\"_blank\" rel=\"noopener\">sonarqube-postgres-docker.md</a></li>\n<li><a href=\"https://hub.docker.com/_/postgres\" target=\"_blank\" rel=\"noopener\">postgres docker</a></li>\n<li><a href=\"https://hub.docker.com/_/sonarqube/\" target=\"_blank\" rel=\"noopener\">sonarqube docker</a></li>\n</ul>\n"},{"title":"SonarQube Server pluin StyleCop","date":"2019-01-18T05:56:52.000Z","_content":"\n# SonarQube Server pluin SyleCop Pluin\n\n### 1. 下載外掛\n\n#### [官網下載](http://www.sonarplugins.com/stylecop)\n\n![](https://i.imgur.com/RS5OUM4.png)\n\n#### 指令下載\n\n```\nwget http://downloads.sonarsource.com/plugins/org/codehaus/sonar-plugins/stylecop/sonar-stylecop-plugin/1.1/sonar-stylecop-plugin-1.1.jar\n```\n\n### 2.下載到 /extensions/plugins 資料夾底下，然後重新啟動\n\n```\ndocker restart sonarqube\ndocker logs sonarqube\n```\n![](https://i.imgur.com/nFq3qfv.png)","source":"_posts/SonarQube-Server-pluin-StyleCop.md","raw":"---\ntitle: SonarQube Server pluin StyleCop\ndate: 2019-01-18 13:56:52\ncategories:\n- SonarQube\ntags:\n- SonarQube\n- SyleCop\n---\n\n# SonarQube Server pluin SyleCop Pluin\n\n### 1. 下載外掛\n\n#### [官網下載](http://www.sonarplugins.com/stylecop)\n\n![](https://i.imgur.com/RS5OUM4.png)\n\n#### 指令下載\n\n```\nwget http://downloads.sonarsource.com/plugins/org/codehaus/sonar-plugins/stylecop/sonar-stylecop-plugin/1.1/sonar-stylecop-plugin-1.1.jar\n```\n\n### 2.下載到 /extensions/plugins 資料夾底下，然後重新啟動\n\n```\ndocker restart sonarqube\ndocker logs sonarqube\n```\n![](https://i.imgur.com/nFq3qfv.png)","slug":"SonarQube-Server-pluin-StyleCop","published":1,"updated":"2019-06-03T01:52:24.701Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xvc00471q227jj7v6cf","content":"<h1 id=\"SonarQube-Server-pluin-SyleCop-Pluin\"><a href=\"#SonarQube-Server-pluin-SyleCop-Pluin\" class=\"headerlink\" title=\"SonarQube Server pluin SyleCop Pluin\"></a>SonarQube Server pluin SyleCop Pluin</h1><h3 id=\"1-下載外掛\"><a href=\"#1-下載外掛\" class=\"headerlink\" title=\"1. 下載外掛\"></a>1. 下載外掛</h3><h4 id=\"官網下載\"><a href=\"#官網下載\" class=\"headerlink\" title=\"官網下載\"></a><a href=\"http://www.sonarplugins.com/stylecop\" target=\"_blank\" rel=\"noopener\">官網下載</a></h4><p><img src=\"https://i.imgur.com/RS5OUM4.png\" alt></p>\n<h4 id=\"指令下載\"><a href=\"#指令下載\" class=\"headerlink\" title=\"指令下載\"></a>指令下載</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://downloads.sonarsource.com/plugins/org/codehaus/sonar-plugins/stylecop/sonar-stylecop-plugin/1.1/sonar-stylecop-plugin-1.1.jar</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-下載到-extensions-plugins-資料夾底下，然後重新啟動\"><a href=\"#2-下載到-extensions-plugins-資料夾底下，然後重新啟動\" class=\"headerlink\" title=\"2.下載到 /extensions/plugins 資料夾底下，然後重新啟動\"></a>2.下載到 /extensions/plugins 資料夾底下，然後重新啟動</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker restart sonarqube</span><br><span class=\"line\">docker logs sonarqube</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/nFq3qfv.png\" alt></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"SonarQube-Server-pluin-SyleCop-Pluin\"><a href=\"#SonarQube-Server-pluin-SyleCop-Pluin\" class=\"headerlink\" title=\"SonarQube Server pluin SyleCop Pluin\"></a>SonarQube Server pluin SyleCop Pluin</h1><h3 id=\"1-下載外掛\"><a href=\"#1-下載外掛\" class=\"headerlink\" title=\"1. 下載外掛\"></a>1. 下載外掛</h3><h4 id=\"官網下載\"><a href=\"#官網下載\" class=\"headerlink\" title=\"官網下載\"></a><a href=\"http://www.sonarplugins.com/stylecop\" target=\"_blank\" rel=\"noopener\">官網下載</a></h4><p><img src=\"https://i.imgur.com/RS5OUM4.png\" alt></p>\n<h4 id=\"指令下載\"><a href=\"#指令下載\" class=\"headerlink\" title=\"指令下載\"></a>指令下載</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://downloads.sonarsource.com/plugins/org/codehaus/sonar-plugins/stylecop/sonar-stylecop-plugin/1.1/sonar-stylecop-plugin-1.1.jar</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-下載到-extensions-plugins-資料夾底下，然後重新啟動\"><a href=\"#2-下載到-extensions-plugins-資料夾底下，然後重新啟動\" class=\"headerlink\" title=\"2.下載到 /extensions/plugins 資料夾底下，然後重新啟動\"></a>2.下載到 /extensions/plugins 資料夾底下，然後重新啟動</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker restart sonarqube</span><br><span class=\"line\">docker logs sonarqube</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/nFq3qfv.png\" alt></p>\n"},{"title":"SonarQube 程式碼品質分析工具","date":"2018-11-20T02:03:25.000Z","_content":"\n## 建立 SonarQube Server\n\n### 下載 [SonarQube](https://www.sonarqube.org/downloads/)\n![](https://i.imgur.com/VYxvKTz.png)\n\n### 下載最新的 [Java jre](https://www.oracle.com/technetwork/java/javase/downloads/jre8-downloads-2133155.html)\n![](https://i.imgur.com/m4f7K2k.png)\n\n\n### 執行 StartSonar.bat\n![](https://i.imgur.com/l9Qe4Tx.png)\n\n![](https://i.imgur.com/OnvhdDR.png)\n\n\n### 進入 http://localhost:9000 就可以看到啟動成功\n\n![](https://i.imgur.com/0nZCYF9.png)\n\n\n### 新增一個專案\n\n![](https://i.imgur.com/h7qM0QX.png)\n![](https://i.imgur.com/yiT3Ca5.png)\n![](https://i.imgur.com/Pw3ekAH.png)\n![](https://i.imgur.com/IrHmCyG.png)\n![](https://i.imgur.com/3DsIYqs.png)\n> 這時候就會產生一個專案的key 給掃描驗證使用 4e4602940368f811feba160cc8797ac455ca65d8\n\n## 掃描自己的程式(Analyzing with SonarScanner for MSBuild)\n\n### 下載 [Analyzing with SonarScanner for MSBuild](https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner+for+MSBuild)\n![](https://i.imgur.com/OMWi3KS.png)\n\n### 先設定環境變數\n\n```\nD:\\sonarqube-7.4\\bin\\sonar-scanner-msbuild-4.4.2.1543-net46\n```\n![](https://i.imgur.com/qvTXqjF.png)\n\n![](https://i.imgur.com/MRfmYMW.png)\n\n![](https://i.imgur.com/icY2raU.png)\n\n![](https://i.imgur.com/HFT14QA.png)\n\n### 建立 SonaQube 專案，它會在專案目錄底下建立 .sonarqube 資料夾\n\n>k:\"{Project Index}\" 在 sonarquble 上面建立的 key\n> n:\"{Project Name}\" 要掃描的專案名稱\n```\nSonarQube.Scanner.MSBuild.exe begin /k:\"4e4602940368f811feba160cc8797ac455ca65d8\" /n:\"MyConsolTest\" /v:\"1.0\"\n```\n![](https://i.imgur.com/bTou3P8.png)\n\n### 執行 Msbuild\n```\n\"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\amd64\\msbuild.exe\" MyConsolTest.sln /t:Rebuild\n```\n![](https://i.imgur.com/yLj7IAj.png)\n\n### 執行掃描\n```\nSonarQube.Scanner.MSBuild.exe end\n```\n![](https://i.imgur.com/wZsXqhA.png)\n\n![](https://i.imgur.com/yCmU7y8.png)\n\n\n# 參考\n\n* [SonarQube](https://zh.wikipedia.org/wiki/SonarQube)\n* [https://www.sonarqube.org/](https://www.sonarqube.org/)","source":"_posts/SonarQube-程式碼品質分析工具.md","raw":"---\ntitle: SonarQube 程式碼品質分析工具\ndate: 2018-11-20 10:03:25\ncategories:\n- SonarQube\ntags:\n- SonarQube\n---\n\n## 建立 SonarQube Server\n\n### 下載 [SonarQube](https://www.sonarqube.org/downloads/)\n![](https://i.imgur.com/VYxvKTz.png)\n\n### 下載最新的 [Java jre](https://www.oracle.com/technetwork/java/javase/downloads/jre8-downloads-2133155.html)\n![](https://i.imgur.com/m4f7K2k.png)\n\n\n### 執行 StartSonar.bat\n![](https://i.imgur.com/l9Qe4Tx.png)\n\n![](https://i.imgur.com/OnvhdDR.png)\n\n\n### 進入 http://localhost:9000 就可以看到啟動成功\n\n![](https://i.imgur.com/0nZCYF9.png)\n\n\n### 新增一個專案\n\n![](https://i.imgur.com/h7qM0QX.png)\n![](https://i.imgur.com/yiT3Ca5.png)\n![](https://i.imgur.com/Pw3ekAH.png)\n![](https://i.imgur.com/IrHmCyG.png)\n![](https://i.imgur.com/3DsIYqs.png)\n> 這時候就會產生一個專案的key 給掃描驗證使用 4e4602940368f811feba160cc8797ac455ca65d8\n\n## 掃描自己的程式(Analyzing with SonarScanner for MSBuild)\n\n### 下載 [Analyzing with SonarScanner for MSBuild](https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner+for+MSBuild)\n![](https://i.imgur.com/OMWi3KS.png)\n\n### 先設定環境變數\n\n```\nD:\\sonarqube-7.4\\bin\\sonar-scanner-msbuild-4.4.2.1543-net46\n```\n![](https://i.imgur.com/qvTXqjF.png)\n\n![](https://i.imgur.com/MRfmYMW.png)\n\n![](https://i.imgur.com/icY2raU.png)\n\n![](https://i.imgur.com/HFT14QA.png)\n\n### 建立 SonaQube 專案，它會在專案目錄底下建立 .sonarqube 資料夾\n\n>k:\"{Project Index}\" 在 sonarquble 上面建立的 key\n> n:\"{Project Name}\" 要掃描的專案名稱\n```\nSonarQube.Scanner.MSBuild.exe begin /k:\"4e4602940368f811feba160cc8797ac455ca65d8\" /n:\"MyConsolTest\" /v:\"1.0\"\n```\n![](https://i.imgur.com/bTou3P8.png)\n\n### 執行 Msbuild\n```\n\"C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\amd64\\msbuild.exe\" MyConsolTest.sln /t:Rebuild\n```\n![](https://i.imgur.com/yLj7IAj.png)\n\n### 執行掃描\n```\nSonarQube.Scanner.MSBuild.exe end\n```\n![](https://i.imgur.com/wZsXqhA.png)\n\n![](https://i.imgur.com/yCmU7y8.png)\n\n\n# 參考\n\n* [SonarQube](https://zh.wikipedia.org/wiki/SonarQube)\n* [https://www.sonarqube.org/](https://www.sonarqube.org/)","slug":"SonarQube-程式碼品質分析工具","published":1,"updated":"2019-06-03T01:52:24.702Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xve00491q22xwsku6kz","content":"<h2 id=\"建立-SonarQube-Server\"><a href=\"#建立-SonarQube-Server\" class=\"headerlink\" title=\"建立 SonarQube Server\"></a>建立 SonarQube Server</h2><h3 id=\"下載-SonarQube\"><a href=\"#下載-SonarQube\" class=\"headerlink\" title=\"下載 SonarQube\"></a>下載 <a href=\"https://www.sonarqube.org/downloads/\" target=\"_blank\" rel=\"noopener\">SonarQube</a></h3><p><img src=\"https://i.imgur.com/VYxvKTz.png\" alt></p>\n<h3 id=\"下載最新的-Java-jre\"><a href=\"#下載最新的-Java-jre\" class=\"headerlink\" title=\"下載最新的 Java jre\"></a>下載最新的 <a href=\"https://www.oracle.com/technetwork/java/javase/downloads/jre8-downloads-2133155.html\" target=\"_blank\" rel=\"noopener\">Java jre</a></h3><p><img src=\"https://i.imgur.com/m4f7K2k.png\" alt></p>\n<h3 id=\"執行-StartSonar-bat\"><a href=\"#執行-StartSonar-bat\" class=\"headerlink\" title=\"執行 StartSonar.bat\"></a>執行 StartSonar.bat</h3><p><img src=\"https://i.imgur.com/l9Qe4Tx.png\" alt></p>\n<p><img src=\"https://i.imgur.com/OnvhdDR.png\" alt></p>\n<h3 id=\"進入-http-localhost-9000-就可以看到啟動成功\"><a href=\"#進入-http-localhost-9000-就可以看到啟動成功\" class=\"headerlink\" title=\"進入 http://localhost:9000 就可以看到啟動成功\"></a>進入 <a href=\"http://localhost:9000\" target=\"_blank\" rel=\"noopener\">http://localhost:9000</a> 就可以看到啟動成功</h3><p><img src=\"https://i.imgur.com/0nZCYF9.png\" alt></p>\n<h3 id=\"新增一個專案\"><a href=\"#新增一個專案\" class=\"headerlink\" title=\"新增一個專案\"></a>新增一個專案</h3><p><img src=\"https://i.imgur.com/h7qM0QX.png\" alt><br><img src=\"https://i.imgur.com/yiT3Ca5.png\" alt><br><img src=\"https://i.imgur.com/Pw3ekAH.png\" alt><br><img src=\"https://i.imgur.com/IrHmCyG.png\" alt><br><img src=\"https://i.imgur.com/3DsIYqs.png\" alt></p>\n<blockquote>\n<p>這時候就會產生一個專案的key 給掃描驗證使用 4e4602940368f811feba160cc8797ac455ca65d8</p>\n</blockquote>\n<h2 id=\"掃描自己的程式-Analyzing-with-SonarScanner-for-MSBuild\"><a href=\"#掃描自己的程式-Analyzing-with-SonarScanner-for-MSBuild\" class=\"headerlink\" title=\"掃描自己的程式(Analyzing with SonarScanner for MSBuild)\"></a>掃描自己的程式(Analyzing with SonarScanner for MSBuild)</h2><h3 id=\"下載-Analyzing-with-SonarScanner-for-MSBuild\"><a href=\"#下載-Analyzing-with-SonarScanner-for-MSBuild\" class=\"headerlink\" title=\"下載 Analyzing with SonarScanner for MSBuild\"></a>下載 <a href=\"https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner+for+MSBuild\" target=\"_blank\" rel=\"noopener\">Analyzing with SonarScanner for MSBuild</a></h3><p><img src=\"https://i.imgur.com/OMWi3KS.png\" alt></p>\n<h3 id=\"先設定環境變數\"><a href=\"#先設定環境變數\" class=\"headerlink\" title=\"先設定環境變數\"></a>先設定環境變數</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">D:\\sonarqube-7.4\\bin\\sonar-scanner-msbuild-4.4.2.1543-net46</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/qvTXqjF.png\" alt></p>\n<p><img src=\"https://i.imgur.com/MRfmYMW.png\" alt></p>\n<p><img src=\"https://i.imgur.com/icY2raU.png\" alt></p>\n<p><img src=\"https://i.imgur.com/HFT14QA.png\" alt></p>\n<h3 id=\"建立-SonaQube-專案，它會在專案目錄底下建立-sonarqube-資料夾\"><a href=\"#建立-SonaQube-專案，它會在專案目錄底下建立-sonarqube-資料夾\" class=\"headerlink\" title=\"建立 SonaQube 專案，它會在專案目錄底下建立 .sonarqube 資料夾\"></a>建立 SonaQube 專案，它會在專案目錄底下建立 .sonarqube 資料夾</h3><blockquote>\n<p>k:”{Project Index}” 在 sonarquble 上面建立的 key<br>n:”{Project Name}” 要掃描的專案名稱</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SonarQube.Scanner.MSBuild.exe begin /k:&quot;4e4602940368f811feba160cc8797ac455ca65d8&quot; /n:&quot;MyConsolTest&quot; /v:&quot;1.0&quot;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/bTou3P8.png\" alt></p>\n<h3 id=\"執行-Msbuild\"><a href=\"#執行-Msbuild\" class=\"headerlink\" title=\"執行 Msbuild\"></a>執行 Msbuild</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\amd64\\msbuild.exe&quot; MyConsolTest.sln /t:Rebuild</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/yLj7IAj.png\" alt></p>\n<h3 id=\"執行掃描\"><a href=\"#執行掃描\" class=\"headerlink\" title=\"執行掃描\"></a>執行掃描</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SonarQube.Scanner.MSBuild.exe end</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/wZsXqhA.png\" alt></p>\n<p><img src=\"https://i.imgur.com/yCmU7y8.png\" alt></p>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://zh.wikipedia.org/wiki/SonarQube\" target=\"_blank\" rel=\"noopener\">SonarQube</a></li>\n<li><a href=\"https://www.sonarqube.org/\" target=\"_blank\" rel=\"noopener\">https://www.sonarqube.org/</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"建立-SonarQube-Server\"><a href=\"#建立-SonarQube-Server\" class=\"headerlink\" title=\"建立 SonarQube Server\"></a>建立 SonarQube Server</h2><h3 id=\"下載-SonarQube\"><a href=\"#下載-SonarQube\" class=\"headerlink\" title=\"下載 SonarQube\"></a>下載 <a href=\"https://www.sonarqube.org/downloads/\" target=\"_blank\" rel=\"noopener\">SonarQube</a></h3><p><img src=\"https://i.imgur.com/VYxvKTz.png\" alt></p>\n<h3 id=\"下載最新的-Java-jre\"><a href=\"#下載最新的-Java-jre\" class=\"headerlink\" title=\"下載最新的 Java jre\"></a>下載最新的 <a href=\"https://www.oracle.com/technetwork/java/javase/downloads/jre8-downloads-2133155.html\" target=\"_blank\" rel=\"noopener\">Java jre</a></h3><p><img src=\"https://i.imgur.com/m4f7K2k.png\" alt></p>\n<h3 id=\"執行-StartSonar-bat\"><a href=\"#執行-StartSonar-bat\" class=\"headerlink\" title=\"執行 StartSonar.bat\"></a>執行 StartSonar.bat</h3><p><img src=\"https://i.imgur.com/l9Qe4Tx.png\" alt></p>\n<p><img src=\"https://i.imgur.com/OnvhdDR.png\" alt></p>\n<h3 id=\"進入-http-localhost-9000-就可以看到啟動成功\"><a href=\"#進入-http-localhost-9000-就可以看到啟動成功\" class=\"headerlink\" title=\"進入 http://localhost:9000 就可以看到啟動成功\"></a>進入 <a href=\"http://localhost:9000\" target=\"_blank\" rel=\"noopener\">http://localhost:9000</a> 就可以看到啟動成功</h3><p><img src=\"https://i.imgur.com/0nZCYF9.png\" alt></p>\n<h3 id=\"新增一個專案\"><a href=\"#新增一個專案\" class=\"headerlink\" title=\"新增一個專案\"></a>新增一個專案</h3><p><img src=\"https://i.imgur.com/h7qM0QX.png\" alt><br><img src=\"https://i.imgur.com/yiT3Ca5.png\" alt><br><img src=\"https://i.imgur.com/Pw3ekAH.png\" alt><br><img src=\"https://i.imgur.com/IrHmCyG.png\" alt><br><img src=\"https://i.imgur.com/3DsIYqs.png\" alt></p>\n<blockquote>\n<p>這時候就會產生一個專案的key 給掃描驗證使用 4e4602940368f811feba160cc8797ac455ca65d8</p>\n</blockquote>\n<h2 id=\"掃描自己的程式-Analyzing-with-SonarScanner-for-MSBuild\"><a href=\"#掃描自己的程式-Analyzing-with-SonarScanner-for-MSBuild\" class=\"headerlink\" title=\"掃描自己的程式(Analyzing with SonarScanner for MSBuild)\"></a>掃描自己的程式(Analyzing with SonarScanner for MSBuild)</h2><h3 id=\"下載-Analyzing-with-SonarScanner-for-MSBuild\"><a href=\"#下載-Analyzing-with-SonarScanner-for-MSBuild\" class=\"headerlink\" title=\"下載 Analyzing with SonarScanner for MSBuild\"></a>下載 <a href=\"https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner+for+MSBuild\" target=\"_blank\" rel=\"noopener\">Analyzing with SonarScanner for MSBuild</a></h3><p><img src=\"https://i.imgur.com/OMWi3KS.png\" alt></p>\n<h3 id=\"先設定環境變數\"><a href=\"#先設定環境變數\" class=\"headerlink\" title=\"先設定環境變數\"></a>先設定環境變數</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">D:\\sonarqube-7.4\\bin\\sonar-scanner-msbuild-4.4.2.1543-net46</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/qvTXqjF.png\" alt></p>\n<p><img src=\"https://i.imgur.com/MRfmYMW.png\" alt></p>\n<p><img src=\"https://i.imgur.com/icY2raU.png\" alt></p>\n<p><img src=\"https://i.imgur.com/HFT14QA.png\" alt></p>\n<h3 id=\"建立-SonaQube-專案，它會在專案目錄底下建立-sonarqube-資料夾\"><a href=\"#建立-SonaQube-專案，它會在專案目錄底下建立-sonarqube-資料夾\" class=\"headerlink\" title=\"建立 SonaQube 專案，它會在專案目錄底下建立 .sonarqube 資料夾\"></a>建立 SonaQube 專案，它會在專案目錄底下建立 .sonarqube 資料夾</h3><blockquote>\n<p>k:”{Project Index}” 在 sonarquble 上面建立的 key<br>n:”{Project Name}” 要掃描的專案名稱</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SonarQube.Scanner.MSBuild.exe begin /k:&quot;4e4602940368f811feba160cc8797ac455ca65d8&quot; /n:&quot;MyConsolTest&quot; /v:&quot;1.0&quot;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/bTou3P8.png\" alt></p>\n<h3 id=\"執行-Msbuild\"><a href=\"#執行-Msbuild\" class=\"headerlink\" title=\"執行 Msbuild\"></a>執行 Msbuild</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;C:\\Program Files (x86)\\MSBuild\\14.0\\bin\\amd64\\msbuild.exe&quot; MyConsolTest.sln /t:Rebuild</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/yLj7IAj.png\" alt></p>\n<h3 id=\"執行掃描\"><a href=\"#執行掃描\" class=\"headerlink\" title=\"執行掃描\"></a>執行掃描</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SonarQube.Scanner.MSBuild.exe end</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/wZsXqhA.png\" alt></p>\n<p><img src=\"https://i.imgur.com/yCmU7y8.png\" alt></p>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://zh.wikipedia.org/wiki/SonarQube\" target=\"_blank\" rel=\"noopener\">SonarQube</a></li>\n<li><a href=\"https://www.sonarqube.org/\" target=\"_blank\" rel=\"noopener\">https://www.sonarqube.org/</a></li>\n</ul>\n"},{"title":"SonarQubeScanner for MSBuild 使用 Jenkins Plugin","date":"2018-11-21T02:09:37.000Z","_content":"\n### 在 Jenkins 外掛中心 找到 SonarQube Scanner 把它安裝起來\n\n![Jenkins](https://i.imgur.com/MGOpSwT.png)\n\n### 檢查是否安裝完成\n\n![檢查是否安裝完成](https://i.imgur.com/VOpA38L.png)\n\n### 管理 Jenkins > 設定系統 > SonarQube servers\n\n![Jenkins](https://i.imgur.com/W69D8aY.png)\n\n![Jenkins](https://i.imgur.com/djQB5ye.png)\n\n### 啟用並且設定Sonarqube server\n\n![Sonarqube server](https://i.imgur.com/j0Gj3jM.png)\n\n### Global Tool Configuration\n\n![Global](https://i.imgur.com/jKyGsJC.png)\n\n![Global](https://i.imgur.com/iOBJvyD.png)\n\n### 建置步驟 >依序加入 樣板\n\n![建置步驟](https://i.imgur.com/pbY24W3.png)\n\n![建置步驟](https://i.imgur.com/CVv8mss.png)\n\n### 將參數設定上去\n\n![忽略掃描](https://i.imgur.com/Uaejl96.png)\n\n> 忽略掃描 sonar.exclusions=obj\\\\*,bin\\\\*,packages\\\\**,Properties\\\\* \n\n### 建置專案就會開始掃描\n\n![建置專案就會開始掃描](https://i.imgur.com/uNnnE9D.png)\n\n### 掃描成功\n\n![掃描成功](https://i.imgur.com/h15iB8R.png)\n\n![掃描成功](https://i.imgur.com/TTqBhsQ.png)\n\n# 參考\n\n* [如何使用 SonarQube 檢查 PHP 專案？](https://oomusou.io/sonarqube/php/)","source":"_posts/SonarQubeScanner for MSBuild 使用 Jenkins Plugin.md","raw":"---\ntitle: 'SonarQubeScanner for MSBuild 使用 Jenkins Plugin'\ndate: 2018-11-21 10:09:37\ncategories:\n- SonarQube\ntags:\n- SonarQube\n- Jenkins\n---\n\n### 在 Jenkins 外掛中心 找到 SonarQube Scanner 把它安裝起來\n\n![Jenkins](https://i.imgur.com/MGOpSwT.png)\n\n### 檢查是否安裝完成\n\n![檢查是否安裝完成](https://i.imgur.com/VOpA38L.png)\n\n### 管理 Jenkins > 設定系統 > SonarQube servers\n\n![Jenkins](https://i.imgur.com/W69D8aY.png)\n\n![Jenkins](https://i.imgur.com/djQB5ye.png)\n\n### 啟用並且設定Sonarqube server\n\n![Sonarqube server](https://i.imgur.com/j0Gj3jM.png)\n\n### Global Tool Configuration\n\n![Global](https://i.imgur.com/jKyGsJC.png)\n\n![Global](https://i.imgur.com/iOBJvyD.png)\n\n### 建置步驟 >依序加入 樣板\n\n![建置步驟](https://i.imgur.com/pbY24W3.png)\n\n![建置步驟](https://i.imgur.com/CVv8mss.png)\n\n### 將參數設定上去\n\n![忽略掃描](https://i.imgur.com/Uaejl96.png)\n\n> 忽略掃描 sonar.exclusions=obj\\\\*,bin\\\\*,packages\\\\**,Properties\\\\* \n\n### 建置專案就會開始掃描\n\n![建置專案就會開始掃描](https://i.imgur.com/uNnnE9D.png)\n\n### 掃描成功\n\n![掃描成功](https://i.imgur.com/h15iB8R.png)\n\n![掃描成功](https://i.imgur.com/TTqBhsQ.png)\n\n# 參考\n\n* [如何使用 SonarQube 檢查 PHP 專案？](https://oomusou.io/sonarqube/php/)","slug":"SonarQubeScanner for MSBuild 使用 Jenkins Plugin","published":1,"updated":"2019-06-03T01:52:24.702Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xvf004c1q22khjqunwz","content":"<h3 id=\"在-Jenkins-外掛中心-找到-SonarQube-Scanner-把它安裝起來\"><a href=\"#在-Jenkins-外掛中心-找到-SonarQube-Scanner-把它安裝起來\" class=\"headerlink\" title=\"在 Jenkins 外掛中心 找到 SonarQube Scanner 把它安裝起來\"></a>在 Jenkins 外掛中心 找到 SonarQube Scanner 把它安裝起來</h3><p><img src=\"https://i.imgur.com/MGOpSwT.png\" alt=\"Jenkins\"></p>\n<h3 id=\"檢查是否安裝完成\"><a href=\"#檢查是否安裝完成\" class=\"headerlink\" title=\"檢查是否安裝完成\"></a>檢查是否安裝完成</h3><p><img src=\"https://i.imgur.com/VOpA38L.png\" alt=\"檢查是否安裝完成\"></p>\n<h3 id=\"管理-Jenkins-gt-設定系統-gt-SonarQube-servers\"><a href=\"#管理-Jenkins-gt-設定系統-gt-SonarQube-servers\" class=\"headerlink\" title=\"管理 Jenkins &gt; 設定系統 &gt; SonarQube servers\"></a>管理 Jenkins &gt; 設定系統 &gt; SonarQube servers</h3><p><img src=\"https://i.imgur.com/W69D8aY.png\" alt=\"Jenkins\"></p>\n<p><img src=\"https://i.imgur.com/djQB5ye.png\" alt=\"Jenkins\"></p>\n<h3 id=\"啟用並且設定Sonarqube-server\"><a href=\"#啟用並且設定Sonarqube-server\" class=\"headerlink\" title=\"啟用並且設定Sonarqube server\"></a>啟用並且設定Sonarqube server</h3><p><img src=\"https://i.imgur.com/j0Gj3jM.png\" alt=\"Sonarqube server\"></p>\n<h3 id=\"Global-Tool-Configuration\"><a href=\"#Global-Tool-Configuration\" class=\"headerlink\" title=\"Global Tool Configuration\"></a>Global Tool Configuration</h3><p><img src=\"https://i.imgur.com/jKyGsJC.png\" alt=\"Global\"></p>\n<p><img src=\"https://i.imgur.com/iOBJvyD.png\" alt=\"Global\"></p>\n<h3 id=\"建置步驟-gt-依序加入-樣板\"><a href=\"#建置步驟-gt-依序加入-樣板\" class=\"headerlink\" title=\"建置步驟 &gt;依序加入 樣板\"></a>建置步驟 &gt;依序加入 樣板</h3><p><img src=\"https://i.imgur.com/pbY24W3.png\" alt=\"建置步驟\"></p>\n<p><img src=\"https://i.imgur.com/CVv8mss.png\" alt=\"建置步驟\"></p>\n<h3 id=\"將參數設定上去\"><a href=\"#將參數設定上去\" class=\"headerlink\" title=\"將參數設定上去\"></a>將參數設定上去</h3><p><img src=\"https://i.imgur.com/Uaejl96.png\" alt=\"忽略掃描\"></p>\n<blockquote>\n<p>忽略掃描 sonar.exclusions=obj\\<em>,bin\\</em>,packages\\<em>*,Properties\\</em> </p>\n</blockquote>\n<h3 id=\"建置專案就會開始掃描\"><a href=\"#建置專案就會開始掃描\" class=\"headerlink\" title=\"建置專案就會開始掃描\"></a>建置專案就會開始掃描</h3><p><img src=\"https://i.imgur.com/uNnnE9D.png\" alt=\"建置專案就會開始掃描\"></p>\n<h3 id=\"掃描成功\"><a href=\"#掃描成功\" class=\"headerlink\" title=\"掃描成功\"></a>掃描成功</h3><p><img src=\"https://i.imgur.com/h15iB8R.png\" alt=\"掃描成功\"></p>\n<p><img src=\"https://i.imgur.com/TTqBhsQ.png\" alt=\"掃描成功\"></p>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://oomusou.io/sonarqube/php/\" target=\"_blank\" rel=\"noopener\">如何使用 SonarQube 檢查 PHP 專案？</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"在-Jenkins-外掛中心-找到-SonarQube-Scanner-把它安裝起來\"><a href=\"#在-Jenkins-外掛中心-找到-SonarQube-Scanner-把它安裝起來\" class=\"headerlink\" title=\"在 Jenkins 外掛中心 找到 SonarQube Scanner 把它安裝起來\"></a>在 Jenkins 外掛中心 找到 SonarQube Scanner 把它安裝起來</h3><p><img src=\"https://i.imgur.com/MGOpSwT.png\" alt=\"Jenkins\"></p>\n<h3 id=\"檢查是否安裝完成\"><a href=\"#檢查是否安裝完成\" class=\"headerlink\" title=\"檢查是否安裝完成\"></a>檢查是否安裝完成</h3><p><img src=\"https://i.imgur.com/VOpA38L.png\" alt=\"檢查是否安裝完成\"></p>\n<h3 id=\"管理-Jenkins-gt-設定系統-gt-SonarQube-servers\"><a href=\"#管理-Jenkins-gt-設定系統-gt-SonarQube-servers\" class=\"headerlink\" title=\"管理 Jenkins &gt; 設定系統 &gt; SonarQube servers\"></a>管理 Jenkins &gt; 設定系統 &gt; SonarQube servers</h3><p><img src=\"https://i.imgur.com/W69D8aY.png\" alt=\"Jenkins\"></p>\n<p><img src=\"https://i.imgur.com/djQB5ye.png\" alt=\"Jenkins\"></p>\n<h3 id=\"啟用並且設定Sonarqube-server\"><a href=\"#啟用並且設定Sonarqube-server\" class=\"headerlink\" title=\"啟用並且設定Sonarqube server\"></a>啟用並且設定Sonarqube server</h3><p><img src=\"https://i.imgur.com/j0Gj3jM.png\" alt=\"Sonarqube server\"></p>\n<h3 id=\"Global-Tool-Configuration\"><a href=\"#Global-Tool-Configuration\" class=\"headerlink\" title=\"Global Tool Configuration\"></a>Global Tool Configuration</h3><p><img src=\"https://i.imgur.com/jKyGsJC.png\" alt=\"Global\"></p>\n<p><img src=\"https://i.imgur.com/iOBJvyD.png\" alt=\"Global\"></p>\n<h3 id=\"建置步驟-gt-依序加入-樣板\"><a href=\"#建置步驟-gt-依序加入-樣板\" class=\"headerlink\" title=\"建置步驟 &gt;依序加入 樣板\"></a>建置步驟 &gt;依序加入 樣板</h3><p><img src=\"https://i.imgur.com/pbY24W3.png\" alt=\"建置步驟\"></p>\n<p><img src=\"https://i.imgur.com/CVv8mss.png\" alt=\"建置步驟\"></p>\n<h3 id=\"將參數設定上去\"><a href=\"#將參數設定上去\" class=\"headerlink\" title=\"將參數設定上去\"></a>將參數設定上去</h3><p><img src=\"https://i.imgur.com/Uaejl96.png\" alt=\"忽略掃描\"></p>\n<blockquote>\n<p>忽略掃描 sonar.exclusions=obj\\<em>,bin\\</em>,packages\\<em>*,Properties\\</em> </p>\n</blockquote>\n<h3 id=\"建置專案就會開始掃描\"><a href=\"#建置專案就會開始掃描\" class=\"headerlink\" title=\"建置專案就會開始掃描\"></a>建置專案就會開始掃描</h3><p><img src=\"https://i.imgur.com/uNnnE9D.png\" alt=\"建置專案就會開始掃描\"></p>\n<h3 id=\"掃描成功\"><a href=\"#掃描成功\" class=\"headerlink\" title=\"掃描成功\"></a>掃描成功</h3><p><img src=\"https://i.imgur.com/h15iB8R.png\" alt=\"掃描成功\"></p>\n<p><img src=\"https://i.imgur.com/TTqBhsQ.png\" alt=\"掃描成功\"></p>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://oomusou.io/sonarqube/php/\" target=\"_blank\" rel=\"noopener\">如何使用 SonarQube 檢查 PHP 專案？</a></li>\n</ul>\n"},{"title":"SonarQubeScanner & UnitTest 使用 Jenkins Pipeline","date":"2019-01-15T07:55:17.000Z","_content":"## SonarQubeScanner & UnitTest 使用 Jenkins Pipeline\n\n> 使用 Jenkins Plugin 可以參考[這篇](https://ste5022424.github.io/2018/11/21/SonarQube-%E7%A8%8B%E5%BC%8F%E7%A2%BC%E5%93%81%E8%B3%AA%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7-%E4%BD%BF%E7%94%A8-Jenkins/)，此篇是使用 Pipeline 來實現 SonarQube 掃描\n\n### .net framework\n\n#### 1. 下載 [sonar-scanner-msbuild-4.4.2.1543-net46](https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner+for+MSBuild)\n\n#### 2. 下載 [Opencover Tool](https://github.com/opencover/opencover/releases)\n\n#### 3. Pipeline\n\n```bash\nnode {\n\n   VERSION = VersionNumber([projectStartDate: '2015-01-01', versionNumberString: '${YEARS_SINCE_PROJECT_START}.${BUILD_MONTH}.${BUILD_DAY}.${BUILDS_TODAY}', versionPrefix: '', worstResultForIncrement: 'NOT_BUILT'])\n   TheJobName =\"${env.JOB_NAME}\"\n\n    stage('Sonarqube Scan Begin'){\n        echo \"Sonarqube Scan Begin Start\"\n        bat \"D:\\\\tools\\\\sonar-scanner-msbuild-4.4.2.1543-net46\\\\SonarQube.Scanner.MSBuild.exe begin /k:${TheJobName} /n:${TheJobNopame} /v:${VERSION} /d:sonar.exclusions=obj\\\\*,bin\\\\*,packages\\\\**,Properties\\\\*\"\n        echo \"Sonarqube Scan Begin OK\"\n   }\n   stage('Msbuild'){\n       echo \"Msbuild Start\"\n       bat \"\\\"C:/Program Files (x86)/MSBuild/14.0/bin/amd64/msbuild.exe\\\" ${TheJobName}.sln /t:Rebuild /p:Configuration=Release\"\n       echo \"Msbuild OK\"\n   }\n   stage('OpenCover') {\n       echo \"OpenCover Start\"\n       bat  \"%LOCALAPPDATA%\\\\Apps\\\\OpenCover\\\\OpenCover.Console.exe -output:\\\"%CD%\\\\opencover.xml\\\" -register:user -target:\\\"C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\2017\\\\Enterprise\\\\Common7\\\\IDE\\\\CommonExtensions\\\\Microsoft\\\\TestWindow\\\\vstest.console.exe\\\" -targetargs:\\\"${TheJobName}.Test\\\\bin\\\\Release \\\\${TheJobName}.Test.dll \\\"/logger:trx\\\"\"\n       echo \"OpenCover OK\"\n   }\n   stage('Sonarqube Scan End'){\n       echo \"Sonarqube Scan End Start\"\n        bat \"D:\\\\tools\\\\sonar-scanner-msbuild-4.4.2.1543-net46\\\\SonarQube.Scanner.MSBuild.exe end\"\n        echo \"Sonarqube Scan End OK\"\n   }\n}\n\n```\n\n### .Net Core\n\n#### 1. 專案安裝 coverlet.msbuild，因為要產生 coverage.opencover.xm\n\n```bash\ndotnet add package coverlet.msbuild\n```\n\n#### 2. jenkins Server 安裝 dotnet-sonarscanner\n\n```bash\ndotnet tool install --global dotnet-sonarscanner --version 4.3.1\n```\n\n#### 3. pipeline\n\n```bash\nnode {\n\n   VERSION = VersionNumber([projectStartDate: '2015-01-01', versionNumberString: '${YEARS_SINCE_PROJECT_START}.${BUILD_MONTH}.${BUILD_DAY}.${BUILDS_TODAY}', versionPrefix: '', worstResultForIncrement: 'NOT_BUILT'])\n   TheJobName =\"${env.JOB_NAME}\"\n\n    stage('dotnet sonarscanner begin') {\n        echo \"dotnet sonarscanner begin Start\"\n        bat  \"dotnet sonarscanner begin /k:${TheJobName} /n:${TheJobName} /v:${VERSION} /d:sonar.exclusions=obj\\\\*,bin\\\\*,packages\\\\**,Properties\\\\* /d:sonar.cs.opencover.reportsPaths=\\\"${TheJobName}.Test\\\\coverage.opencover.xml\\\" \"\n        echo \"dotnet sonarscanner begin OK\"\n    }\n    stage('dotnet sonarscanner build') {\n        echo \"dotnet sonarscanner build Start\"\n        bat  \"dotnet build ${TheJobName}.sln -c Release -p:Version=${VERSION}\"\n        echo \"dotnet sonarscanner build OK\"\n    }\n   stage('dotnet test') {\n       echo \"dotnet test Start\"\n       bat  \"dotnet test ${TheJobName}.Test --logger:trx /p:CollectCoverage=true /p:CoverletOutputFormat=opencover\"\n       echo \"dotnet test OK\"\n   }\n    stage(\"dotnet sonarscanner end\") {\n        echo \"dotnet sonarscanner end Start\"\n        bat  \"dotnet sonarscanner end\"\n        echo \"dotnet sonarscanner end OK\"\n    }\n}\n\n```\n\n## 參考\n\n* [Analyzing with SonarScanner for MSBuild](https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner+for+MSBuild)\n* [Code Coverage Results Import (C#, VB.NET)](https://docs.sonarqube.org/pages/viewpage.action?pageId=6389770)\n* [Cross platform code coverage arrives for .NET Core](http://tattoocoder.com/cross-platform-code-coverage-arrives-for-net-core/)\n* [Collecting test coverage using Coverlet and SonarQube for a .net core project](https://medium.com/agilix/collecting-test-coverage-using-coverlet-and-sonarqube-for-a-net-core-project-ef4a507d4b28)\n* [Code Coverage Results Import (C#, VB.NET)](https://docs.sonarqube.org/pages/viewpage.action?pageId=6389770#CodeCoverageResultsImport(C#,VB.NET)-OpenCover)\n* [C# unit testing on a jenkins pipeline](https://medium.com/@toja/c-unit-testing-on-a-jenkins-pipeline-532e6d5dd133)","source":"_posts/SonarQubeScanner-for-MSBuild-使用-Jenkins-Pipeline.md","raw":"---\ntitle: SonarQubeScanner & UnitTest 使用 Jenkins Pipeline\ndate: 2019-01-15 15:55:17\ncategories:\n- SonarQube\ntags:\n- SonarQube\n- Jenkins\n- Pipeline\n---\n## SonarQubeScanner & UnitTest 使用 Jenkins Pipeline\n\n> 使用 Jenkins Plugin 可以參考[這篇](https://ste5022424.github.io/2018/11/21/SonarQube-%E7%A8%8B%E5%BC%8F%E7%A2%BC%E5%93%81%E8%B3%AA%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7-%E4%BD%BF%E7%94%A8-Jenkins/)，此篇是使用 Pipeline 來實現 SonarQube 掃描\n\n### .net framework\n\n#### 1. 下載 [sonar-scanner-msbuild-4.4.2.1543-net46](https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner+for+MSBuild)\n\n#### 2. 下載 [Opencover Tool](https://github.com/opencover/opencover/releases)\n\n#### 3. Pipeline\n\n```bash\nnode {\n\n   VERSION = VersionNumber([projectStartDate: '2015-01-01', versionNumberString: '${YEARS_SINCE_PROJECT_START}.${BUILD_MONTH}.${BUILD_DAY}.${BUILDS_TODAY}', versionPrefix: '', worstResultForIncrement: 'NOT_BUILT'])\n   TheJobName =\"${env.JOB_NAME}\"\n\n    stage('Sonarqube Scan Begin'){\n        echo \"Sonarqube Scan Begin Start\"\n        bat \"D:\\\\tools\\\\sonar-scanner-msbuild-4.4.2.1543-net46\\\\SonarQube.Scanner.MSBuild.exe begin /k:${TheJobName} /n:${TheJobNopame} /v:${VERSION} /d:sonar.exclusions=obj\\\\*,bin\\\\*,packages\\\\**,Properties\\\\*\"\n        echo \"Sonarqube Scan Begin OK\"\n   }\n   stage('Msbuild'){\n       echo \"Msbuild Start\"\n       bat \"\\\"C:/Program Files (x86)/MSBuild/14.0/bin/amd64/msbuild.exe\\\" ${TheJobName}.sln /t:Rebuild /p:Configuration=Release\"\n       echo \"Msbuild OK\"\n   }\n   stage('OpenCover') {\n       echo \"OpenCover Start\"\n       bat  \"%LOCALAPPDATA%\\\\Apps\\\\OpenCover\\\\OpenCover.Console.exe -output:\\\"%CD%\\\\opencover.xml\\\" -register:user -target:\\\"C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\2017\\\\Enterprise\\\\Common7\\\\IDE\\\\CommonExtensions\\\\Microsoft\\\\TestWindow\\\\vstest.console.exe\\\" -targetargs:\\\"${TheJobName}.Test\\\\bin\\\\Release \\\\${TheJobName}.Test.dll \\\"/logger:trx\\\"\"\n       echo \"OpenCover OK\"\n   }\n   stage('Sonarqube Scan End'){\n       echo \"Sonarqube Scan End Start\"\n        bat \"D:\\\\tools\\\\sonar-scanner-msbuild-4.4.2.1543-net46\\\\SonarQube.Scanner.MSBuild.exe end\"\n        echo \"Sonarqube Scan End OK\"\n   }\n}\n\n```\n\n### .Net Core\n\n#### 1. 專案安裝 coverlet.msbuild，因為要產生 coverage.opencover.xm\n\n```bash\ndotnet add package coverlet.msbuild\n```\n\n#### 2. jenkins Server 安裝 dotnet-sonarscanner\n\n```bash\ndotnet tool install --global dotnet-sonarscanner --version 4.3.1\n```\n\n#### 3. pipeline\n\n```bash\nnode {\n\n   VERSION = VersionNumber([projectStartDate: '2015-01-01', versionNumberString: '${YEARS_SINCE_PROJECT_START}.${BUILD_MONTH}.${BUILD_DAY}.${BUILDS_TODAY}', versionPrefix: '', worstResultForIncrement: 'NOT_BUILT'])\n   TheJobName =\"${env.JOB_NAME}\"\n\n    stage('dotnet sonarscanner begin') {\n        echo \"dotnet sonarscanner begin Start\"\n        bat  \"dotnet sonarscanner begin /k:${TheJobName} /n:${TheJobName} /v:${VERSION} /d:sonar.exclusions=obj\\\\*,bin\\\\*,packages\\\\**,Properties\\\\* /d:sonar.cs.opencover.reportsPaths=\\\"${TheJobName}.Test\\\\coverage.opencover.xml\\\" \"\n        echo \"dotnet sonarscanner begin OK\"\n    }\n    stage('dotnet sonarscanner build') {\n        echo \"dotnet sonarscanner build Start\"\n        bat  \"dotnet build ${TheJobName}.sln -c Release -p:Version=${VERSION}\"\n        echo \"dotnet sonarscanner build OK\"\n    }\n   stage('dotnet test') {\n       echo \"dotnet test Start\"\n       bat  \"dotnet test ${TheJobName}.Test --logger:trx /p:CollectCoverage=true /p:CoverletOutputFormat=opencover\"\n       echo \"dotnet test OK\"\n   }\n    stage(\"dotnet sonarscanner end\") {\n        echo \"dotnet sonarscanner end Start\"\n        bat  \"dotnet sonarscanner end\"\n        echo \"dotnet sonarscanner end OK\"\n    }\n}\n\n```\n\n## 參考\n\n* [Analyzing with SonarScanner for MSBuild](https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner+for+MSBuild)\n* [Code Coverage Results Import (C#, VB.NET)](https://docs.sonarqube.org/pages/viewpage.action?pageId=6389770)\n* [Cross platform code coverage arrives for .NET Core](http://tattoocoder.com/cross-platform-code-coverage-arrives-for-net-core/)\n* [Collecting test coverage using Coverlet and SonarQube for a .net core project](https://medium.com/agilix/collecting-test-coverage-using-coverlet-and-sonarqube-for-a-net-core-project-ef4a507d4b28)\n* [Code Coverage Results Import (C#, VB.NET)](https://docs.sonarqube.org/pages/viewpage.action?pageId=6389770#CodeCoverageResultsImport(C#,VB.NET)-OpenCover)\n* [C# unit testing on a jenkins pipeline](https://medium.com/@toja/c-unit-testing-on-a-jenkins-pipeline-532e6d5dd133)","slug":"SonarQubeScanner-for-MSBuild-使用-Jenkins-Pipeline","published":1,"updated":"2019-06-03T01:52:24.703Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xvg004d1q22xo0bjzg7","content":"<h2 id=\"SonarQubeScanner-amp-UnitTest-使用-Jenkins-Pipeline\"><a href=\"#SonarQubeScanner-amp-UnitTest-使用-Jenkins-Pipeline\" class=\"headerlink\" title=\"SonarQubeScanner &amp; UnitTest 使用 Jenkins Pipeline\"></a>SonarQubeScanner &amp; UnitTest 使用 Jenkins Pipeline</h2><blockquote>\n<p>使用 Jenkins Plugin 可以參考<a href=\"https://ste5022424.github.io/2018/11/21/SonarQube-%E7%A8%8B%E5%BC%8F%E7%A2%BC%E5%93%81%E8%B3%AA%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7-%E4%BD%BF%E7%94%A8-Jenkins/\">這篇</a>，此篇是使用 Pipeline 來實現 SonarQube 掃描</p>\n</blockquote>\n<h3 id=\"net-framework\"><a href=\"#net-framework\" class=\"headerlink\" title=\".net framework\"></a>.net framework</h3><h4 id=\"1-下載-sonar-scanner-msbuild-4-4-2-1543-net46\"><a href=\"#1-下載-sonar-scanner-msbuild-4-4-2-1543-net46\" class=\"headerlink\" title=\"1. 下載 sonar-scanner-msbuild-4.4.2.1543-net46\"></a>1. 下載 <a href=\"https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner+for+MSBuild\" target=\"_blank\" rel=\"noopener\">sonar-scanner-msbuild-4.4.2.1543-net46</a></h4><h4 id=\"2-下載-Opencover-Tool\"><a href=\"#2-下載-Opencover-Tool\" class=\"headerlink\" title=\"2. 下載 Opencover Tool\"></a>2. 下載 <a href=\"https://github.com/opencover/opencover/releases\" target=\"_blank\" rel=\"noopener\">Opencover Tool</a></h4><h4 id=\"3-Pipeline\"><a href=\"#3-Pipeline\" class=\"headerlink\" title=\"3. Pipeline\"></a>3. Pipeline</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   VERSION = VersionNumber([projectStartDate: <span class=\"string\">'2015-01-01'</span>, versionNumberString: <span class=\"string\">'$&#123;YEARS_SINCE_PROJECT_START&#125;.$&#123;BUILD_MONTH&#125;.$&#123;BUILD_DAY&#125;.$&#123;BUILDS_TODAY&#125;'</span>, versionPrefix: <span class=\"string\">''</span>, worstResultForIncrement: <span class=\"string\">'NOT_BUILT'</span>])</span><br><span class=\"line\">   TheJobName =<span class=\"string\">\"<span class=\"variable\">$&#123;env.JOB_NAME&#125;</span>\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    stage(<span class=\"string\">'Sonarqube Scan Begin'</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"Sonarqube Scan Begin Start\"</span></span><br><span class=\"line\">        bat <span class=\"string\">\"D:\\\\tools\\\\sonar-scanner-msbuild-4.4.2.1543-net46\\\\SonarQube.Scanner.MSBuild.exe begin /k:<span class=\"variable\">$&#123;TheJobName&#125;</span> /n:<span class=\"variable\">$&#123;TheJobNopame&#125;</span> /v:<span class=\"variable\">$&#123;VERSION&#125;</span> /d:sonar.exclusions=obj\\\\*,bin\\\\*,packages\\\\**,Properties\\\\*\"</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"Sonarqube Scan Begin OK\"</span></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   stage(<span class=\"string\">'Msbuild'</span>)&#123;</span><br><span class=\"line\">       <span class=\"built_in\">echo</span> <span class=\"string\">\"Msbuild Start\"</span></span><br><span class=\"line\">       bat <span class=\"string\">\"\\\"C:/Program Files (x86)/MSBuild/14.0/bin/amd64/msbuild.exe\\\" <span class=\"variable\">$&#123;TheJobName&#125;</span>.sln /t:Rebuild /p:Configuration=Release\"</span></span><br><span class=\"line\">       <span class=\"built_in\">echo</span> <span class=\"string\">\"Msbuild OK\"</span></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   stage(<span class=\"string\">'OpenCover'</span>) &#123;</span><br><span class=\"line\">       <span class=\"built_in\">echo</span> <span class=\"string\">\"OpenCover Start\"</span></span><br><span class=\"line\">       bat  <span class=\"string\">\"%LOCALAPPDATA%\\\\Apps\\\\OpenCover\\\\OpenCover.Console.exe -output:\\\"%CD%\\\\opencover.xml\\\" -register:user -target:\\\"C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\2017\\\\Enterprise\\\\Common7\\\\IDE\\\\CommonExtensions\\\\Microsoft\\\\TestWindow\\\\vstest.console.exe\\\" -targetargs:\\\"<span class=\"variable\">$&#123;TheJobName&#125;</span>.Test\\\\bin\\\\Release \\\\<span class=\"variable\">$&#123;TheJobName&#125;</span>.Test.dll \\\"/logger:trx\\\"\"</span></span><br><span class=\"line\">       <span class=\"built_in\">echo</span> <span class=\"string\">\"OpenCover OK\"</span></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   stage(<span class=\"string\">'Sonarqube Scan End'</span>)&#123;</span><br><span class=\"line\">       <span class=\"built_in\">echo</span> <span class=\"string\">\"Sonarqube Scan End Start\"</span></span><br><span class=\"line\">        bat <span class=\"string\">\"D:\\\\tools\\\\sonar-scanner-msbuild-4.4.2.1543-net46\\\\SonarQube.Scanner.MSBuild.exe end\"</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"Sonarqube Scan End OK\"</span></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Net-Core\"><a href=\"#Net-Core\" class=\"headerlink\" title=\".Net Core\"></a>.Net Core</h3><h4 id=\"1-專案安裝-coverlet-msbuild，因為要產生-coverage-opencover-xm\"><a href=\"#1-專案安裝-coverlet-msbuild，因為要產生-coverage-opencover-xm\" class=\"headerlink\" title=\"1. 專案安裝 coverlet.msbuild，因為要產生 coverage.opencover.xm\"></a>1. 專案安裝 coverlet.msbuild，因為要產生 coverage.opencover.xm</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dotnet add package coverlet.msbuild</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-jenkins-Server-安裝-dotnet-sonarscanner\"><a href=\"#2-jenkins-Server-安裝-dotnet-sonarscanner\" class=\"headerlink\" title=\"2. jenkins Server 安裝 dotnet-sonarscanner\"></a>2. jenkins Server 安裝 dotnet-sonarscanner</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dotnet tool install --global dotnet-sonarscanner --version 4.3.1</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-pipeline\"><a href=\"#3-pipeline\" class=\"headerlink\" title=\"3. pipeline\"></a>3. pipeline</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   VERSION = VersionNumber([projectStartDate: <span class=\"string\">'2015-01-01'</span>, versionNumberString: <span class=\"string\">'$&#123;YEARS_SINCE_PROJECT_START&#125;.$&#123;BUILD_MONTH&#125;.$&#123;BUILD_DAY&#125;.$&#123;BUILDS_TODAY&#125;'</span>, versionPrefix: <span class=\"string\">''</span>, worstResultForIncrement: <span class=\"string\">'NOT_BUILT'</span>])</span><br><span class=\"line\">   TheJobName =<span class=\"string\">\"<span class=\"variable\">$&#123;env.JOB_NAME&#125;</span>\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    stage(<span class=\"string\">'dotnet sonarscanner begin'</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"dotnet sonarscanner begin Start\"</span></span><br><span class=\"line\">        bat  <span class=\"string\">\"dotnet sonarscanner begin /k:<span class=\"variable\">$&#123;TheJobName&#125;</span> /n:<span class=\"variable\">$&#123;TheJobName&#125;</span> /v:<span class=\"variable\">$&#123;VERSION&#125;</span> /d:sonar.exclusions=obj\\\\*,bin\\\\*,packages\\\\**,Properties\\\\* /d:sonar.cs.opencover.reportsPaths=\\\"<span class=\"variable\">$&#123;TheJobName&#125;</span>.Test\\\\coverage.opencover.xml\\\" \"</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"dotnet sonarscanner begin OK\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    stage(<span class=\"string\">'dotnet sonarscanner build'</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"dotnet sonarscanner build Start\"</span></span><br><span class=\"line\">        bat  <span class=\"string\">\"dotnet build <span class=\"variable\">$&#123;TheJobName&#125;</span>.sln -c Release -p:Version=<span class=\"variable\">$&#123;VERSION&#125;</span>\"</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"dotnet sonarscanner build OK\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">   stage(<span class=\"string\">'dotnet test'</span>) &#123;</span><br><span class=\"line\">       <span class=\"built_in\">echo</span> <span class=\"string\">\"dotnet test Start\"</span></span><br><span class=\"line\">       bat  <span class=\"string\">\"dotnet test <span class=\"variable\">$&#123;TheJobName&#125;</span>.Test --logger:trx /p:CollectCoverage=true /p:CoverletOutputFormat=opencover\"</span></span><br><span class=\"line\">       <span class=\"built_in\">echo</span> <span class=\"string\">\"dotnet test OK\"</span></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">    stage(<span class=\"string\">\"dotnet sonarscanner end\"</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"dotnet sonarscanner end Start\"</span></span><br><span class=\"line\">        bat  <span class=\"string\">\"dotnet sonarscanner end\"</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"dotnet sonarscanner end OK\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h2><ul>\n<li><a href=\"https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner+for+MSBuild\" target=\"_blank\" rel=\"noopener\">Analyzing with SonarScanner for MSBuild</a></li>\n<li><a href=\"https://docs.sonarqube.org/pages/viewpage.action?pageId=6389770\" target=\"_blank\" rel=\"noopener\">Code Coverage Results Import (C#, VB.NET)</a></li>\n<li><a href=\"http://tattoocoder.com/cross-platform-code-coverage-arrives-for-net-core/\" target=\"_blank\" rel=\"noopener\">Cross platform code coverage arrives for .NET Core</a></li>\n<li><a href=\"https://medium.com/agilix/collecting-test-coverage-using-coverlet-and-sonarqube-for-a-net-core-project-ef4a507d4b28\" target=\"_blank\" rel=\"noopener\">Collecting test coverage using Coverlet and SonarQube for a .net core project</a></li>\n<li><a href=\"https://docs.sonarqube.org/pages/viewpage.action?pageId=6389770#CodeCoverageResultsImport(C#,VB.NET)-OpenCover\" target=\"_blank\" rel=\"noopener\">Code Coverage Results Import (C#, VB.NET)</a></li>\n<li><a href=\"https://medium.com/@toja/c-unit-testing-on-a-jenkins-pipeline-532e6d5dd133\" target=\"_blank\" rel=\"noopener\">C# unit testing on a jenkins pipeline</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"SonarQubeScanner-amp-UnitTest-使用-Jenkins-Pipeline\"><a href=\"#SonarQubeScanner-amp-UnitTest-使用-Jenkins-Pipeline\" class=\"headerlink\" title=\"SonarQubeScanner &amp; UnitTest 使用 Jenkins Pipeline\"></a>SonarQubeScanner &amp; UnitTest 使用 Jenkins Pipeline</h2><blockquote>\n<p>使用 Jenkins Plugin 可以參考<a href=\"https://ste5022424.github.io/2018/11/21/SonarQube-%E7%A8%8B%E5%BC%8F%E7%A2%BC%E5%93%81%E8%B3%AA%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7-%E4%BD%BF%E7%94%A8-Jenkins/\">這篇</a>，此篇是使用 Pipeline 來實現 SonarQube 掃描</p>\n</blockquote>\n<h3 id=\"net-framework\"><a href=\"#net-framework\" class=\"headerlink\" title=\".net framework\"></a>.net framework</h3><h4 id=\"1-下載-sonar-scanner-msbuild-4-4-2-1543-net46\"><a href=\"#1-下載-sonar-scanner-msbuild-4-4-2-1543-net46\" class=\"headerlink\" title=\"1. 下載 sonar-scanner-msbuild-4.4.2.1543-net46\"></a>1. 下載 <a href=\"https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner+for+MSBuild\" target=\"_blank\" rel=\"noopener\">sonar-scanner-msbuild-4.4.2.1543-net46</a></h4><h4 id=\"2-下載-Opencover-Tool\"><a href=\"#2-下載-Opencover-Tool\" class=\"headerlink\" title=\"2. 下載 Opencover Tool\"></a>2. 下載 <a href=\"https://github.com/opencover/opencover/releases\" target=\"_blank\" rel=\"noopener\">Opencover Tool</a></h4><h4 id=\"3-Pipeline\"><a href=\"#3-Pipeline\" class=\"headerlink\" title=\"3. Pipeline\"></a>3. Pipeline</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   VERSION = VersionNumber([projectStartDate: <span class=\"string\">'2015-01-01'</span>, versionNumberString: <span class=\"string\">'$&#123;YEARS_SINCE_PROJECT_START&#125;.$&#123;BUILD_MONTH&#125;.$&#123;BUILD_DAY&#125;.$&#123;BUILDS_TODAY&#125;'</span>, versionPrefix: <span class=\"string\">''</span>, worstResultForIncrement: <span class=\"string\">'NOT_BUILT'</span>])</span><br><span class=\"line\">   TheJobName =<span class=\"string\">\"<span class=\"variable\">$&#123;env.JOB_NAME&#125;</span>\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    stage(<span class=\"string\">'Sonarqube Scan Begin'</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"Sonarqube Scan Begin Start\"</span></span><br><span class=\"line\">        bat <span class=\"string\">\"D:\\\\tools\\\\sonar-scanner-msbuild-4.4.2.1543-net46\\\\SonarQube.Scanner.MSBuild.exe begin /k:<span class=\"variable\">$&#123;TheJobName&#125;</span> /n:<span class=\"variable\">$&#123;TheJobNopame&#125;</span> /v:<span class=\"variable\">$&#123;VERSION&#125;</span> /d:sonar.exclusions=obj\\\\*,bin\\\\*,packages\\\\**,Properties\\\\*\"</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"Sonarqube Scan Begin OK\"</span></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   stage(<span class=\"string\">'Msbuild'</span>)&#123;</span><br><span class=\"line\">       <span class=\"built_in\">echo</span> <span class=\"string\">\"Msbuild Start\"</span></span><br><span class=\"line\">       bat <span class=\"string\">\"\\\"C:/Program Files (x86)/MSBuild/14.0/bin/amd64/msbuild.exe\\\" <span class=\"variable\">$&#123;TheJobName&#125;</span>.sln /t:Rebuild /p:Configuration=Release\"</span></span><br><span class=\"line\">       <span class=\"built_in\">echo</span> <span class=\"string\">\"Msbuild OK\"</span></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   stage(<span class=\"string\">'OpenCover'</span>) &#123;</span><br><span class=\"line\">       <span class=\"built_in\">echo</span> <span class=\"string\">\"OpenCover Start\"</span></span><br><span class=\"line\">       bat  <span class=\"string\">\"%LOCALAPPDATA%\\\\Apps\\\\OpenCover\\\\OpenCover.Console.exe -output:\\\"%CD%\\\\opencover.xml\\\" -register:user -target:\\\"C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\2017\\\\Enterprise\\\\Common7\\\\IDE\\\\CommonExtensions\\\\Microsoft\\\\TestWindow\\\\vstest.console.exe\\\" -targetargs:\\\"<span class=\"variable\">$&#123;TheJobName&#125;</span>.Test\\\\bin\\\\Release \\\\<span class=\"variable\">$&#123;TheJobName&#125;</span>.Test.dll \\\"/logger:trx\\\"\"</span></span><br><span class=\"line\">       <span class=\"built_in\">echo</span> <span class=\"string\">\"OpenCover OK\"</span></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   stage(<span class=\"string\">'Sonarqube Scan End'</span>)&#123;</span><br><span class=\"line\">       <span class=\"built_in\">echo</span> <span class=\"string\">\"Sonarqube Scan End Start\"</span></span><br><span class=\"line\">        bat <span class=\"string\">\"D:\\\\tools\\\\sonar-scanner-msbuild-4.4.2.1543-net46\\\\SonarQube.Scanner.MSBuild.exe end\"</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"Sonarqube Scan End OK\"</span></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Net-Core\"><a href=\"#Net-Core\" class=\"headerlink\" title=\".Net Core\"></a>.Net Core</h3><h4 id=\"1-專案安裝-coverlet-msbuild，因為要產生-coverage-opencover-xm\"><a href=\"#1-專案安裝-coverlet-msbuild，因為要產生-coverage-opencover-xm\" class=\"headerlink\" title=\"1. 專案安裝 coverlet.msbuild，因為要產生 coverage.opencover.xm\"></a>1. 專案安裝 coverlet.msbuild，因為要產生 coverage.opencover.xm</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dotnet add package coverlet.msbuild</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-jenkins-Server-安裝-dotnet-sonarscanner\"><a href=\"#2-jenkins-Server-安裝-dotnet-sonarscanner\" class=\"headerlink\" title=\"2. jenkins Server 安裝 dotnet-sonarscanner\"></a>2. jenkins Server 安裝 dotnet-sonarscanner</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dotnet tool install --global dotnet-sonarscanner --version 4.3.1</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-pipeline\"><a href=\"#3-pipeline\" class=\"headerlink\" title=\"3. pipeline\"></a>3. pipeline</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   VERSION = VersionNumber([projectStartDate: <span class=\"string\">'2015-01-01'</span>, versionNumberString: <span class=\"string\">'$&#123;YEARS_SINCE_PROJECT_START&#125;.$&#123;BUILD_MONTH&#125;.$&#123;BUILD_DAY&#125;.$&#123;BUILDS_TODAY&#125;'</span>, versionPrefix: <span class=\"string\">''</span>, worstResultForIncrement: <span class=\"string\">'NOT_BUILT'</span>])</span><br><span class=\"line\">   TheJobName =<span class=\"string\">\"<span class=\"variable\">$&#123;env.JOB_NAME&#125;</span>\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    stage(<span class=\"string\">'dotnet sonarscanner begin'</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"dotnet sonarscanner begin Start\"</span></span><br><span class=\"line\">        bat  <span class=\"string\">\"dotnet sonarscanner begin /k:<span class=\"variable\">$&#123;TheJobName&#125;</span> /n:<span class=\"variable\">$&#123;TheJobName&#125;</span> /v:<span class=\"variable\">$&#123;VERSION&#125;</span> /d:sonar.exclusions=obj\\\\*,bin\\\\*,packages\\\\**,Properties\\\\* /d:sonar.cs.opencover.reportsPaths=\\\"<span class=\"variable\">$&#123;TheJobName&#125;</span>.Test\\\\coverage.opencover.xml\\\" \"</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"dotnet sonarscanner begin OK\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    stage(<span class=\"string\">'dotnet sonarscanner build'</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"dotnet sonarscanner build Start\"</span></span><br><span class=\"line\">        bat  <span class=\"string\">\"dotnet build <span class=\"variable\">$&#123;TheJobName&#125;</span>.sln -c Release -p:Version=<span class=\"variable\">$&#123;VERSION&#125;</span>\"</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"dotnet sonarscanner build OK\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">   stage(<span class=\"string\">'dotnet test'</span>) &#123;</span><br><span class=\"line\">       <span class=\"built_in\">echo</span> <span class=\"string\">\"dotnet test Start\"</span></span><br><span class=\"line\">       bat  <span class=\"string\">\"dotnet test <span class=\"variable\">$&#123;TheJobName&#125;</span>.Test --logger:trx /p:CollectCoverage=true /p:CoverletOutputFormat=opencover\"</span></span><br><span class=\"line\">       <span class=\"built_in\">echo</span> <span class=\"string\">\"dotnet test OK\"</span></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">    stage(<span class=\"string\">\"dotnet sonarscanner end\"</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"dotnet sonarscanner end Start\"</span></span><br><span class=\"line\">        bat  <span class=\"string\">\"dotnet sonarscanner end\"</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"dotnet sonarscanner end OK\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h2><ul>\n<li><a href=\"https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner+for+MSBuild\" target=\"_blank\" rel=\"noopener\">Analyzing with SonarScanner for MSBuild</a></li>\n<li><a href=\"https://docs.sonarqube.org/pages/viewpage.action?pageId=6389770\" target=\"_blank\" rel=\"noopener\">Code Coverage Results Import (C#, VB.NET)</a></li>\n<li><a href=\"http://tattoocoder.com/cross-platform-code-coverage-arrives-for-net-core/\" target=\"_blank\" rel=\"noopener\">Cross platform code coverage arrives for .NET Core</a></li>\n<li><a href=\"https://medium.com/agilix/collecting-test-coverage-using-coverlet-and-sonarqube-for-a-net-core-project-ef4a507d4b28\" target=\"_blank\" rel=\"noopener\">Collecting test coverage using Coverlet and SonarQube for a .net core project</a></li>\n<li><a href=\"https://docs.sonarqube.org/pages/viewpage.action?pageId=6389770#CodeCoverageResultsImport(C#,VB.NET)-OpenCover\" target=\"_blank\" rel=\"noopener\">Code Coverage Results Import (C#, VB.NET)</a></li>\n<li><a href=\"https://medium.com/@toja/c-unit-testing-on-a-jenkins-pipeline-532e6d5dd133\" target=\"_blank\" rel=\"noopener\">C# unit testing on a jenkins pipeline</a></li>\n</ul>\n"},{"title":"Sonarqube in visual studio SonarLint","date":"2019-04-15T07:42:39.000Z","_content":"\n# SonarLint 安裝\n\n## 1. 工具 > 擴充功能和更新\n\n![擴充功能和更新](https://i.imgur.com/oNK4QfK.png)\n\n## 2. 搜尋 >  SonarLint > 下載 > 重新啟動 Visual Studio\n\n![搜尋](https://i.imgur.com/CG2E0Ov.png)\n\n![搜尋](https://i.imgur.com/Qa542je.png)\n\n## 3. 建置 > 針對方案執行程式碼分析 (Alt+ F11)\n\n![建置](https://i.imgur.com/qsu1tEZ.png)\n\n## 4. 錯誤清單 > 組件 + IntelliSense\n\n> 這邊就可以看到要修改的項目(S開頭的為sonrquebe的規則)\n\n![IntelliSense](https://i.imgur.com/No8kYss.png)\n\n## 5. 修改程式碼\n\n> 程式碼就會顯示 綠色的蚯蚓 alt+. 就會出現建議\n![綠色的蚯蚓](https://i.imgur.com/VFtLN7i.png)\n\n![alt+.](https://i.imgur.com/9LVPM3t.png)\n\n# 參考\n\n* [www.sonarlint.org](https://www.sonarlint.org/)\n* [如何在 Visual Studio 使用 SonarLint ?](https://oomusou.io/sonarqube/sonarlint-vs/) ","source":"_posts/Sonarqube-in-visual-studio-SonarLint.md","raw":"---\ntitle: Sonarqube in visual studio SonarLint\ndate: 2019-04-15 15:42:39\ncategories:\n- sonarlint\ntags:\n- sonarlint\n- sonarqube\n- Visual Studio\n---\n\n# SonarLint 安裝\n\n## 1. 工具 > 擴充功能和更新\n\n![擴充功能和更新](https://i.imgur.com/oNK4QfK.png)\n\n## 2. 搜尋 >  SonarLint > 下載 > 重新啟動 Visual Studio\n\n![搜尋](https://i.imgur.com/CG2E0Ov.png)\n\n![搜尋](https://i.imgur.com/Qa542je.png)\n\n## 3. 建置 > 針對方案執行程式碼分析 (Alt+ F11)\n\n![建置](https://i.imgur.com/qsu1tEZ.png)\n\n## 4. 錯誤清單 > 組件 + IntelliSense\n\n> 這邊就可以看到要修改的項目(S開頭的為sonrquebe的規則)\n\n![IntelliSense](https://i.imgur.com/No8kYss.png)\n\n## 5. 修改程式碼\n\n> 程式碼就會顯示 綠色的蚯蚓 alt+. 就會出現建議\n![綠色的蚯蚓](https://i.imgur.com/VFtLN7i.png)\n\n![alt+.](https://i.imgur.com/9LVPM3t.png)\n\n# 參考\n\n* [www.sonarlint.org](https://www.sonarlint.org/)\n* [如何在 Visual Studio 使用 SonarLint ?](https://oomusou.io/sonarqube/sonarlint-vs/) ","slug":"Sonarqube-in-visual-studio-SonarLint","published":1,"updated":"2019-06-03T01:52:24.703Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xvh004g1q22st78k597","content":"<h1 id=\"SonarLint-安裝\"><a href=\"#SonarLint-安裝\" class=\"headerlink\" title=\"SonarLint 安裝\"></a>SonarLint 安裝</h1><h2 id=\"1-工具-gt-擴充功能和更新\"><a href=\"#1-工具-gt-擴充功能和更新\" class=\"headerlink\" title=\"1. 工具 &gt; 擴充功能和更新\"></a>1. 工具 &gt; 擴充功能和更新</h2><p><img src=\"https://i.imgur.com/oNK4QfK.png\" alt=\"擴充功能和更新\"></p>\n<h2 id=\"2-搜尋-gt-SonarLint-gt-下載-gt-重新啟動-Visual-Studio\"><a href=\"#2-搜尋-gt-SonarLint-gt-下載-gt-重新啟動-Visual-Studio\" class=\"headerlink\" title=\"2. 搜尋 &gt;  SonarLint &gt; 下載 &gt; 重新啟動 Visual Studio\"></a>2. 搜尋 &gt;  SonarLint &gt; 下載 &gt; 重新啟動 Visual Studio</h2><p><img src=\"https://i.imgur.com/CG2E0Ov.png\" alt=\"搜尋\"></p>\n<p><img src=\"https://i.imgur.com/Qa542je.png\" alt=\"搜尋\"></p>\n<h2 id=\"3-建置-gt-針對方案執行程式碼分析-Alt-F11\"><a href=\"#3-建置-gt-針對方案執行程式碼分析-Alt-F11\" class=\"headerlink\" title=\"3. 建置 &gt; 針對方案執行程式碼分析 (Alt+ F11)\"></a>3. 建置 &gt; 針對方案執行程式碼分析 (Alt+ F11)</h2><p><img src=\"https://i.imgur.com/qsu1tEZ.png\" alt=\"建置\"></p>\n<h2 id=\"4-錯誤清單-gt-組件-IntelliSense\"><a href=\"#4-錯誤清單-gt-組件-IntelliSense\" class=\"headerlink\" title=\"4. 錯誤清單 &gt; 組件 + IntelliSense\"></a>4. 錯誤清單 &gt; 組件 + IntelliSense</h2><blockquote>\n<p>這邊就可以看到要修改的項目(S開頭的為sonrquebe的規則)</p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/No8kYss.png\" alt=\"IntelliSense\"></p>\n<h2 id=\"5-修改程式碼\"><a href=\"#5-修改程式碼\" class=\"headerlink\" title=\"5. 修改程式碼\"></a>5. 修改程式碼</h2><blockquote>\n<p>程式碼就會顯示 綠色的蚯蚓 alt+. 就會出現建議<br><img src=\"https://i.imgur.com/VFtLN7i.png\" alt=\"綠色的蚯蚓\"></p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/9LVPM3t.png\" alt=\"alt+.\"></p>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://www.sonarlint.org/\" target=\"_blank\" rel=\"noopener\">www.sonarlint.org</a></li>\n<li><a href=\"https://oomusou.io/sonarqube/sonarlint-vs/\" target=\"_blank\" rel=\"noopener\">如何在 Visual Studio 使用 SonarLint ?</a> </li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"SonarLint-安裝\"><a href=\"#SonarLint-安裝\" class=\"headerlink\" title=\"SonarLint 安裝\"></a>SonarLint 安裝</h1><h2 id=\"1-工具-gt-擴充功能和更新\"><a href=\"#1-工具-gt-擴充功能和更新\" class=\"headerlink\" title=\"1. 工具 &gt; 擴充功能和更新\"></a>1. 工具 &gt; 擴充功能和更新</h2><p><img src=\"https://i.imgur.com/oNK4QfK.png\" alt=\"擴充功能和更新\"></p>\n<h2 id=\"2-搜尋-gt-SonarLint-gt-下載-gt-重新啟動-Visual-Studio\"><a href=\"#2-搜尋-gt-SonarLint-gt-下載-gt-重新啟動-Visual-Studio\" class=\"headerlink\" title=\"2. 搜尋 &gt;  SonarLint &gt; 下載 &gt; 重新啟動 Visual Studio\"></a>2. 搜尋 &gt;  SonarLint &gt; 下載 &gt; 重新啟動 Visual Studio</h2><p><img src=\"https://i.imgur.com/CG2E0Ov.png\" alt=\"搜尋\"></p>\n<p><img src=\"https://i.imgur.com/Qa542je.png\" alt=\"搜尋\"></p>\n<h2 id=\"3-建置-gt-針對方案執行程式碼分析-Alt-F11\"><a href=\"#3-建置-gt-針對方案執行程式碼分析-Alt-F11\" class=\"headerlink\" title=\"3. 建置 &gt; 針對方案執行程式碼分析 (Alt+ F11)\"></a>3. 建置 &gt; 針對方案執行程式碼分析 (Alt+ F11)</h2><p><img src=\"https://i.imgur.com/qsu1tEZ.png\" alt=\"建置\"></p>\n<h2 id=\"4-錯誤清單-gt-組件-IntelliSense\"><a href=\"#4-錯誤清單-gt-組件-IntelliSense\" class=\"headerlink\" title=\"4. 錯誤清單 &gt; 組件 + IntelliSense\"></a>4. 錯誤清單 &gt; 組件 + IntelliSense</h2><blockquote>\n<p>這邊就可以看到要修改的項目(S開頭的為sonrquebe的規則)</p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/No8kYss.png\" alt=\"IntelliSense\"></p>\n<h2 id=\"5-修改程式碼\"><a href=\"#5-修改程式碼\" class=\"headerlink\" title=\"5. 修改程式碼\"></a>5. 修改程式碼</h2><blockquote>\n<p>程式碼就會顯示 綠色的蚯蚓 alt+. 就會出現建議<br><img src=\"https://i.imgur.com/VFtLN7i.png\" alt=\"綠色的蚯蚓\"></p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/9LVPM3t.png\" alt=\"alt+.\"></p>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://www.sonarlint.org/\" target=\"_blank\" rel=\"noopener\">www.sonarlint.org</a></li>\n<li><a href=\"https://oomusou.io/sonarqube/sonarlint-vs/\" target=\"_blank\" rel=\"noopener\">如何在 Visual Studio 使用 SonarLint ?</a> </li>\n</ul>\n"},{"title":"Sonarqube 權限設定","date":"2019-04-17T09:24:42.000Z","_content":"\n# Sonarqube 權限設定\n\n\n## 1. Security > Groups\n\n![](https://i.imgur.com/ZE2UULr.png)\n\n## 2. Creat User\n\n![](https://i.imgur.com/8o64ZlP.png)\n\n![](https://i.imgur.com/SwB8qc0.png)\n\n## 2. Creat Group\n\n![](https://i.imgur.com/BNm8DBx.png)\n\n![](https://i.imgur.com/NcDNMCt.png)\n\n\n## 3. Add Group\n\n![](https://i.imgur.com/8dGnOBt.png)\n\n![](https://i.imgur.com/oPvWa8L.png)\n\n## 4. Security > Permission Templates\n\n![](https://i.imgur.com/4nRwc0r.png)\n\n![](https://i.imgur.com/LrnCSae.png)\n\n![](https://i.imgur.com/DAsjNsw.png)\n\n![](https://i.imgur.com/a0Hwttx.png)\n\n\n## 4. Projects > Management > Creat Project\n\n![](https://i.imgur.com/pHepo8g.png)\n\n![](https://i.imgur.com/jyRQcpz.png)\n\n## 5. Projects > Management > Apply Permission Templates\n\n![](https://i.imgur.com/J6Jnqb4.png)\n\n![](https://i.imgur.com/Oizm86d.png)\n\n## 6. Check\n\n![](https://i.imgur.com/BNDj9Jx.png)\n\n![](https://i.imgur.com/aO6BETu.png)","source":"_posts/Sonarqube-權限設定.md","raw":"---\ntitle: Sonarqube 權限設定\ndate: 2019-04-17 17:24:42\ncategories:\n- SonarQube\ntags:\n- SonarQube\n---\n\n# Sonarqube 權限設定\n\n\n## 1. Security > Groups\n\n![](https://i.imgur.com/ZE2UULr.png)\n\n## 2. Creat User\n\n![](https://i.imgur.com/8o64ZlP.png)\n\n![](https://i.imgur.com/SwB8qc0.png)\n\n## 2. Creat Group\n\n![](https://i.imgur.com/BNm8DBx.png)\n\n![](https://i.imgur.com/NcDNMCt.png)\n\n\n## 3. Add Group\n\n![](https://i.imgur.com/8dGnOBt.png)\n\n![](https://i.imgur.com/oPvWa8L.png)\n\n## 4. Security > Permission Templates\n\n![](https://i.imgur.com/4nRwc0r.png)\n\n![](https://i.imgur.com/LrnCSae.png)\n\n![](https://i.imgur.com/DAsjNsw.png)\n\n![](https://i.imgur.com/a0Hwttx.png)\n\n\n## 4. Projects > Management > Creat Project\n\n![](https://i.imgur.com/pHepo8g.png)\n\n![](https://i.imgur.com/jyRQcpz.png)\n\n## 5. Projects > Management > Apply Permission Templates\n\n![](https://i.imgur.com/J6Jnqb4.png)\n\n![](https://i.imgur.com/Oizm86d.png)\n\n## 6. Check\n\n![](https://i.imgur.com/BNDj9Jx.png)\n\n![](https://i.imgur.com/aO6BETu.png)","slug":"Sonarqube-權限設定","published":1,"updated":"2019-06-03T01:52:24.703Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xvi004j1q22labr06ia","content":"<h1 id=\"Sonarqube-權限設定\"><a href=\"#Sonarqube-權限設定\" class=\"headerlink\" title=\"Sonarqube 權限設定\"></a>Sonarqube 權限設定</h1><h2 id=\"1-Security-gt-Groups\"><a href=\"#1-Security-gt-Groups\" class=\"headerlink\" title=\"1. Security &gt; Groups\"></a>1. Security &gt; Groups</h2><p><img src=\"https://i.imgur.com/ZE2UULr.png\" alt></p>\n<h2 id=\"2-Creat-User\"><a href=\"#2-Creat-User\" class=\"headerlink\" title=\"2. Creat User\"></a>2. Creat User</h2><p><img src=\"https://i.imgur.com/8o64ZlP.png\" alt></p>\n<p><img src=\"https://i.imgur.com/SwB8qc0.png\" alt></p>\n<h2 id=\"2-Creat-Group\"><a href=\"#2-Creat-Group\" class=\"headerlink\" title=\"2. Creat Group\"></a>2. Creat Group</h2><p><img src=\"https://i.imgur.com/BNm8DBx.png\" alt></p>\n<p><img src=\"https://i.imgur.com/NcDNMCt.png\" alt></p>\n<h2 id=\"3-Add-Group\"><a href=\"#3-Add-Group\" class=\"headerlink\" title=\"3. Add Group\"></a>3. Add Group</h2><p><img src=\"https://i.imgur.com/8dGnOBt.png\" alt></p>\n<p><img src=\"https://i.imgur.com/oPvWa8L.png\" alt></p>\n<h2 id=\"4-Security-gt-Permission-Templates\"><a href=\"#4-Security-gt-Permission-Templates\" class=\"headerlink\" title=\"4. Security &gt; Permission Templates\"></a>4. Security &gt; Permission Templates</h2><p><img src=\"https://i.imgur.com/4nRwc0r.png\" alt></p>\n<p><img src=\"https://i.imgur.com/LrnCSae.png\" alt></p>\n<p><img src=\"https://i.imgur.com/DAsjNsw.png\" alt></p>\n<p><img src=\"https://i.imgur.com/a0Hwttx.png\" alt></p>\n<h2 id=\"4-Projects-gt-Management-gt-Creat-Project\"><a href=\"#4-Projects-gt-Management-gt-Creat-Project\" class=\"headerlink\" title=\"4. Projects &gt; Management &gt; Creat Project\"></a>4. Projects &gt; Management &gt; Creat Project</h2><p><img src=\"https://i.imgur.com/pHepo8g.png\" alt></p>\n<p><img src=\"https://i.imgur.com/jyRQcpz.png\" alt></p>\n<h2 id=\"5-Projects-gt-Management-gt-Apply-Permission-Templates\"><a href=\"#5-Projects-gt-Management-gt-Apply-Permission-Templates\" class=\"headerlink\" title=\"5. Projects &gt; Management &gt; Apply Permission Templates\"></a>5. Projects &gt; Management &gt; Apply Permission Templates</h2><p><img src=\"https://i.imgur.com/J6Jnqb4.png\" alt></p>\n<p><img src=\"https://i.imgur.com/Oizm86d.png\" alt></p>\n<h2 id=\"6-Check\"><a href=\"#6-Check\" class=\"headerlink\" title=\"6. Check\"></a>6. Check</h2><p><img src=\"https://i.imgur.com/BNDj9Jx.png\" alt></p>\n<p><img src=\"https://i.imgur.com/aO6BETu.png\" alt></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Sonarqube-權限設定\"><a href=\"#Sonarqube-權限設定\" class=\"headerlink\" title=\"Sonarqube 權限設定\"></a>Sonarqube 權限設定</h1><h2 id=\"1-Security-gt-Groups\"><a href=\"#1-Security-gt-Groups\" class=\"headerlink\" title=\"1. Security &gt; Groups\"></a>1. Security &gt; Groups</h2><p><img src=\"https://i.imgur.com/ZE2UULr.png\" alt></p>\n<h2 id=\"2-Creat-User\"><a href=\"#2-Creat-User\" class=\"headerlink\" title=\"2. Creat User\"></a>2. Creat User</h2><p><img src=\"https://i.imgur.com/8o64ZlP.png\" alt></p>\n<p><img src=\"https://i.imgur.com/SwB8qc0.png\" alt></p>\n<h2 id=\"2-Creat-Group\"><a href=\"#2-Creat-Group\" class=\"headerlink\" title=\"2. Creat Group\"></a>2. Creat Group</h2><p><img src=\"https://i.imgur.com/BNm8DBx.png\" alt></p>\n<p><img src=\"https://i.imgur.com/NcDNMCt.png\" alt></p>\n<h2 id=\"3-Add-Group\"><a href=\"#3-Add-Group\" class=\"headerlink\" title=\"3. Add Group\"></a>3. Add Group</h2><p><img src=\"https://i.imgur.com/8dGnOBt.png\" alt></p>\n<p><img src=\"https://i.imgur.com/oPvWa8L.png\" alt></p>\n<h2 id=\"4-Security-gt-Permission-Templates\"><a href=\"#4-Security-gt-Permission-Templates\" class=\"headerlink\" title=\"4. Security &gt; Permission Templates\"></a>4. Security &gt; Permission Templates</h2><p><img src=\"https://i.imgur.com/4nRwc0r.png\" alt></p>\n<p><img src=\"https://i.imgur.com/LrnCSae.png\" alt></p>\n<p><img src=\"https://i.imgur.com/DAsjNsw.png\" alt></p>\n<p><img src=\"https://i.imgur.com/a0Hwttx.png\" alt></p>\n<h2 id=\"4-Projects-gt-Management-gt-Creat-Project\"><a href=\"#4-Projects-gt-Management-gt-Creat-Project\" class=\"headerlink\" title=\"4. Projects &gt; Management &gt; Creat Project\"></a>4. Projects &gt; Management &gt; Creat Project</h2><p><img src=\"https://i.imgur.com/pHepo8g.png\" alt></p>\n<p><img src=\"https://i.imgur.com/jyRQcpz.png\" alt></p>\n<h2 id=\"5-Projects-gt-Management-gt-Apply-Permission-Templates\"><a href=\"#5-Projects-gt-Management-gt-Apply-Permission-Templates\" class=\"headerlink\" title=\"5. Projects &gt; Management &gt; Apply Permission Templates\"></a>5. Projects &gt; Management &gt; Apply Permission Templates</h2><p><img src=\"https://i.imgur.com/J6Jnqb4.png\" alt></p>\n<p><img src=\"https://i.imgur.com/Oizm86d.png\" alt></p>\n<h2 id=\"6-Check\"><a href=\"#6-Check\" class=\"headerlink\" title=\"6. Check\"></a>6. Check</h2><p><img src=\"https://i.imgur.com/BNDj9Jx.png\" alt></p>\n<p><img src=\"https://i.imgur.com/aO6BETu.png\" alt></p>\n"},{"title":"Visual Studio Code 存檔自動排版","date":"2019-05-15T03:38:49.000Z","_content":"\n# Visual Studio Code 存檔自動排版\n\n## 1. 開啟 setting (Ctrl + ,)\n\n![setting](https://i.imgur.com/AGKHwWU.png)\n\n## 2. 輸入 \"Format On Save\" > 將它打勾 ， 這樣存檔的時候就會自動排了\n\n![Format](https://i.imgur.com/uSnUZl7.png)","source":"_posts/Visual-Studio-Code-存檔自動排版.md","raw":"---\ntitle: Visual Studio Code 存檔自動排版\ndate: 2019-05-15 11:38:49\ncategories:\n- Visual Studio Code\ntags:\n- Visual Studio Code 存檔自動排版\n- 筆記\n---\n\n# Visual Studio Code 存檔自動排版\n\n## 1. 開啟 setting (Ctrl + ,)\n\n![setting](https://i.imgur.com/AGKHwWU.png)\n\n## 2. 輸入 \"Format On Save\" > 將它打勾 ， 這樣存檔的時候就會自動排了\n\n![Format](https://i.imgur.com/uSnUZl7.png)","slug":"Visual-Studio-Code-存檔自動排版","published":1,"updated":"2019-06-03T01:52:24.703Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xvj004n1q22d1j078w2","content":"<h1 id=\"Visual-Studio-Code-存檔自動排版\"><a href=\"#Visual-Studio-Code-存檔自動排版\" class=\"headerlink\" title=\"Visual Studio Code 存檔自動排版\"></a>Visual Studio Code 存檔自動排版</h1><h2 id=\"1-開啟-setting-Ctrl\"><a href=\"#1-開啟-setting-Ctrl\" class=\"headerlink\" title=\"1. 開啟 setting (Ctrl + ,)\"></a>1. 開啟 setting (Ctrl + ,)</h2><p><img src=\"https://i.imgur.com/AGKHwWU.png\" alt=\"setting\"></p>\n<h2 id=\"2-輸入-“Format-On-Save”-gt-將它打勾-，-這樣存檔的時候就會自動排了\"><a href=\"#2-輸入-“Format-On-Save”-gt-將它打勾-，-這樣存檔的時候就會自動排了\" class=\"headerlink\" title=\"2. 輸入 “Format On Save” &gt; 將它打勾 ， 這樣存檔的時候就會自動排了\"></a>2. 輸入 “Format On Save” &gt; 將它打勾 ， 這樣存檔的時候就會自動排了</h2><p><img src=\"https://i.imgur.com/uSnUZl7.png\" alt=\"Format\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Visual-Studio-Code-存檔自動排版\"><a href=\"#Visual-Studio-Code-存檔自動排版\" class=\"headerlink\" title=\"Visual Studio Code 存檔自動排版\"></a>Visual Studio Code 存檔自動排版</h1><h2 id=\"1-開啟-setting-Ctrl\"><a href=\"#1-開啟-setting-Ctrl\" class=\"headerlink\" title=\"1. 開啟 setting (Ctrl + ,)\"></a>1. 開啟 setting (Ctrl + ,)</h2><p><img src=\"https://i.imgur.com/AGKHwWU.png\" alt=\"setting\"></p>\n<h2 id=\"2-輸入-“Format-On-Save”-gt-將它打勾-，-這樣存檔的時候就會自動排了\"><a href=\"#2-輸入-“Format-On-Save”-gt-將它打勾-，-這樣存檔的時候就會自動排了\" class=\"headerlink\" title=\"2. 輸入 “Format On Save” &gt; 將它打勾 ， 這樣存檔的時候就會自動排了\"></a>2. 輸入 “Format On Save” &gt; 將它打勾 ， 這樣存檔的時候就會自動排了</h2><p><img src=\"https://i.imgur.com/uSnUZl7.png\" alt=\"Format\"></p>\n"},{"title":"Vue js Hello World!","date":"2019-05-20T03:41:47.000Z","_content":"\n# Vue js Hello World!\n\n> 記得先安裝 [node js](https://nodejs.org/en/)\n\n## 1.安裝 [Vue Cli](https://cli.vuejs.org/guide/installation.html)\n\n```bash\nnpm install -g @vue/cli\n```\n\n![install](https://i.imgur.com/9BA3FgD.png)\n\n## 2. [Creat hello-world](https://cli.vuejs.org/guide/creating-a-project.html#vue-create)\n\n```bash\nvue create hello-world\n```\n\n![](https://i.imgur.com/hIAruHf.png)\n\n## 3. Run Server\n\n```bash\ncd hello-world\nnpm run serve\n```\n\n![hello](https://i.imgur.com/fxckdrA.png)\n\n## 4. <http://localhost:8081/>\n\n![localhost](https://i.imgur.com/Ue0UbN9.png)\n\n# 參考\n\n* [Vue js](https://vuejs.org/)\n* [Vue-create](https://cli.vuejs.org/guide/creating-a-project.html#vue-create)\n* [Vue cli](https://cli.vuejs.org/guide/installation.html)\n* [node js](https://nodejs.org/en/)","source":"_posts/Vue-js-Hello-World.md","raw":"---\ntitle: Vue js Hello World!\ndate: 2019-05-20 11:41:47\ncategories:\n- Vue js \ntags:\n- Vue js\n- VsCode\n---\n\n# Vue js Hello World!\n\n> 記得先安裝 [node js](https://nodejs.org/en/)\n\n## 1.安裝 [Vue Cli](https://cli.vuejs.org/guide/installation.html)\n\n```bash\nnpm install -g @vue/cli\n```\n\n![install](https://i.imgur.com/9BA3FgD.png)\n\n## 2. [Creat hello-world](https://cli.vuejs.org/guide/creating-a-project.html#vue-create)\n\n```bash\nvue create hello-world\n```\n\n![](https://i.imgur.com/hIAruHf.png)\n\n## 3. Run Server\n\n```bash\ncd hello-world\nnpm run serve\n```\n\n![hello](https://i.imgur.com/fxckdrA.png)\n\n## 4. <http://localhost:8081/>\n\n![localhost](https://i.imgur.com/Ue0UbN9.png)\n\n# 參考\n\n* [Vue js](https://vuejs.org/)\n* [Vue-create](https://cli.vuejs.org/guide/creating-a-project.html#vue-create)\n* [Vue cli](https://cli.vuejs.org/guide/installation.html)\n* [node js](https://nodejs.org/en/)","slug":"Vue-js-Hello-World","published":1,"updated":"2019-06-03T01:52:24.704Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xvk004q1q22ia88hxd3","content":"<h1 id=\"Vue-js-Hello-World\"><a href=\"#Vue-js-Hello-World\" class=\"headerlink\" title=\"Vue js Hello World!\"></a>Vue js Hello World!</h1><blockquote>\n<p>記得先安裝 <a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">node js</a></p>\n</blockquote>\n<h2 id=\"1-安裝-Vue-Cli\"><a href=\"#1-安裝-Vue-Cli\" class=\"headerlink\" title=\"1.安裝 Vue Cli\"></a>1.安裝 <a href=\"https://cli.vuejs.org/guide/installation.html\" target=\"_blank\" rel=\"noopener\">Vue Cli</a></h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g @vue/cli</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/9BA3FgD.png\" alt=\"install\"></p>\n<h2 id=\"2-Creat-hello-world\"><a href=\"#2-Creat-hello-world\" class=\"headerlink\" title=\"2. Creat hello-world\"></a>2. <a href=\"https://cli.vuejs.org/guide/creating-a-project.html#vue-create\" target=\"_blank\" rel=\"noopener\">Creat hello-world</a></h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue create hello-world</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/hIAruHf.png\" alt></p>\n<h2 id=\"3-Run-Server\"><a href=\"#3-Run-Server\" class=\"headerlink\" title=\"3. Run Server\"></a>3. Run Server</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> hello-world</span><br><span class=\"line\">npm run serve</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/fxckdrA.png\" alt=\"hello\"></p>\n<h2 id=\"4-http-localhost-8081\"><a href=\"#4-http-localhost-8081\" class=\"headerlink\" title=\"4. http://localhost:8081/\"></a>4. <a href=\"http://localhost:8081/\" target=\"_blank\" rel=\"noopener\">http://localhost:8081/</a></h2><p><img src=\"https://i.imgur.com/Ue0UbN9.png\" alt=\"localhost\"></p>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://vuejs.org/\" target=\"_blank\" rel=\"noopener\">Vue js</a></li>\n<li><a href=\"https://cli.vuejs.org/guide/creating-a-project.html#vue-create\" target=\"_blank\" rel=\"noopener\">Vue-create</a></li>\n<li><a href=\"https://cli.vuejs.org/guide/installation.html\" target=\"_blank\" rel=\"noopener\">Vue cli</a></li>\n<li><a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">node js</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Vue-js-Hello-World\"><a href=\"#Vue-js-Hello-World\" class=\"headerlink\" title=\"Vue js Hello World!\"></a>Vue js Hello World!</h1><blockquote>\n<p>記得先安裝 <a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">node js</a></p>\n</blockquote>\n<h2 id=\"1-安裝-Vue-Cli\"><a href=\"#1-安裝-Vue-Cli\" class=\"headerlink\" title=\"1.安裝 Vue Cli\"></a>1.安裝 <a href=\"https://cli.vuejs.org/guide/installation.html\" target=\"_blank\" rel=\"noopener\">Vue Cli</a></h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g @vue/cli</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/9BA3FgD.png\" alt=\"install\"></p>\n<h2 id=\"2-Creat-hello-world\"><a href=\"#2-Creat-hello-world\" class=\"headerlink\" title=\"2. Creat hello-world\"></a>2. <a href=\"https://cli.vuejs.org/guide/creating-a-project.html#vue-create\" target=\"_blank\" rel=\"noopener\">Creat hello-world</a></h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue create hello-world</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/hIAruHf.png\" alt></p>\n<h2 id=\"3-Run-Server\"><a href=\"#3-Run-Server\" class=\"headerlink\" title=\"3. Run Server\"></a>3. Run Server</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> hello-world</span><br><span class=\"line\">npm run serve</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/fxckdrA.png\" alt=\"hello\"></p>\n<h2 id=\"4-http-localhost-8081\"><a href=\"#4-http-localhost-8081\" class=\"headerlink\" title=\"4. http://localhost:8081/\"></a>4. <a href=\"http://localhost:8081/\" target=\"_blank\" rel=\"noopener\">http://localhost:8081/</a></h2><p><img src=\"https://i.imgur.com/Ue0UbN9.png\" alt=\"localhost\"></p>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://vuejs.org/\" target=\"_blank\" rel=\"noopener\">Vue js</a></li>\n<li><a href=\"https://cli.vuejs.org/guide/creating-a-project.html#vue-create\" target=\"_blank\" rel=\"noopener\">Vue-create</a></li>\n<li><a href=\"https://cli.vuejs.org/guide/installation.html\" target=\"_blank\" rel=\"noopener\">Vue cli</a></li>\n<li><a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">node js</a></li>\n</ul>\n"},{"title":"android 遠程調試 WebView","date":"2019-05-06T10:40:24.000Z","_content":"\n# android 遠程調試 WebView\n\n## 1. 安卓 應用程式 加入 允許 debug\n\n```\nWebView.setWebContentsDebuggingEnabled(true);\n```\n## 2. 開啟 chrome >輸入網址 [chrome://inspect/#devices](chrome://inspect/#devices)\n\n![SB 偵錯 ](https://i.imgur.com/lz9QidS.png)\n\n## 3. 手機 > 設定 > 啟用 USB 偵錯\n\n![](https://i.imgur.com/6GQYCax.png)\n\n## 4. 手機進入 Webbview > 點選 inspect > 就可以針對 Webbview　進行偵錯\n\n![](https://i.imgur.com/rsYvNdu.png)\n\n# 參考\n* [遠程調試 WebView](https://developers.google.com/web/tools/chrome-devtools/remote-debugging/webviews?hl=zh-tw)","source":"_posts/android-遠程調試-WebView.md","raw":"---\ntitle: android 遠程調試 WebView\ndate: 2019-05-06 18:40:24\ncategories:\n- android\ntags:\n- android\n- WebView\n---\n\n# android 遠程調試 WebView\n\n## 1. 安卓 應用程式 加入 允許 debug\n\n```\nWebView.setWebContentsDebuggingEnabled(true);\n```\n## 2. 開啟 chrome >輸入網址 [chrome://inspect/#devices](chrome://inspect/#devices)\n\n![SB 偵錯 ](https://i.imgur.com/lz9QidS.png)\n\n## 3. 手機 > 設定 > 啟用 USB 偵錯\n\n![](https://i.imgur.com/6GQYCax.png)\n\n## 4. 手機進入 Webbview > 點選 inspect > 就可以針對 Webbview　進行偵錯\n\n![](https://i.imgur.com/rsYvNdu.png)\n\n# 參考\n* [遠程調試 WebView](https://developers.google.com/web/tools/chrome-devtools/remote-debugging/webviews?hl=zh-tw)","slug":"android-遠程調試-WebView","published":1,"updated":"2019-06-03T01:52:24.704Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xvm004u1q22zmd8x79a","content":"<h1 id=\"android-遠程調試-WebView\"><a href=\"#android-遠程調試-WebView\" class=\"headerlink\" title=\"android 遠程調試 WebView\"></a>android 遠程調試 WebView</h1><h2 id=\"1-安卓-應用程式-加入-允許-debug\"><a href=\"#1-安卓-應用程式-加入-允許-debug\" class=\"headerlink\" title=\"1. 安卓 應用程式 加入 允許 debug\"></a>1. 安卓 應用程式 加入 允許 debug</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">WebView.setWebContentsDebuggingEnabled(true);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-開啟-chrome-gt-輸入網址-chrome-inspect-devices\"><a href=\"#2-開啟-chrome-gt-輸入網址-chrome-inspect-devices\" class=\"headerlink\" title=\"2. 開啟 chrome &gt;輸入網址 chrome://inspect/#devices\"></a>2. 開啟 chrome &gt;輸入網址 <a href=\"chrome://inspect/#devices\" target=\"_blank\" rel=\"noopener\">chrome://inspect/#devices</a></h2><p><img src=\"https://i.imgur.com/lz9QidS.png\" alt=\"SB 偵錯 \"></p>\n<h2 id=\"3-手機-gt-設定-gt-啟用-USB-偵錯\"><a href=\"#3-手機-gt-設定-gt-啟用-USB-偵錯\" class=\"headerlink\" title=\"3. 手機 &gt; 設定 &gt; 啟用 USB 偵錯\"></a>3. 手機 &gt; 設定 &gt; 啟用 USB 偵錯</h2><p><img src=\"https://i.imgur.com/6GQYCax.png\" alt></p>\n<h2 id=\"4-手機進入-Webbview-gt-點選-inspect-gt-就可以針對-Webbview-進行偵錯\"><a href=\"#4-手機進入-Webbview-gt-點選-inspect-gt-就可以針對-Webbview-進行偵錯\" class=\"headerlink\" title=\"4. 手機進入 Webbview &gt; 點選 inspect &gt; 就可以針對 Webbview　進行偵錯\"></a>4. 手機進入 Webbview &gt; 點選 inspect &gt; 就可以針對 Webbview　進行偵錯</h2><p><img src=\"https://i.imgur.com/rsYvNdu.png\" alt></p>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://developers.google.com/web/tools/chrome-devtools/remote-debugging/webviews?hl=zh-tw\" target=\"_blank\" rel=\"noopener\">遠程調試 WebView</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"android-遠程調試-WebView\"><a href=\"#android-遠程調試-WebView\" class=\"headerlink\" title=\"android 遠程調試 WebView\"></a>android 遠程調試 WebView</h1><h2 id=\"1-安卓-應用程式-加入-允許-debug\"><a href=\"#1-安卓-應用程式-加入-允許-debug\" class=\"headerlink\" title=\"1. 安卓 應用程式 加入 允許 debug\"></a>1. 安卓 應用程式 加入 允許 debug</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">WebView.setWebContentsDebuggingEnabled(true);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-開啟-chrome-gt-輸入網址-chrome-inspect-devices\"><a href=\"#2-開啟-chrome-gt-輸入網址-chrome-inspect-devices\" class=\"headerlink\" title=\"2. 開啟 chrome &gt;輸入網址 chrome://inspect/#devices\"></a>2. 開啟 chrome &gt;輸入網址 <a href=\"chrome://inspect/#devices\" target=\"_blank\" rel=\"noopener\">chrome://inspect/#devices</a></h2><p><img src=\"https://i.imgur.com/lz9QidS.png\" alt=\"SB 偵錯 \"></p>\n<h2 id=\"3-手機-gt-設定-gt-啟用-USB-偵錯\"><a href=\"#3-手機-gt-設定-gt-啟用-USB-偵錯\" class=\"headerlink\" title=\"3. 手機 &gt; 設定 &gt; 啟用 USB 偵錯\"></a>3. 手機 &gt; 設定 &gt; 啟用 USB 偵錯</h2><p><img src=\"https://i.imgur.com/6GQYCax.png\" alt></p>\n<h2 id=\"4-手機進入-Webbview-gt-點選-inspect-gt-就可以針對-Webbview-進行偵錯\"><a href=\"#4-手機進入-Webbview-gt-點選-inspect-gt-就可以針對-Webbview-進行偵錯\" class=\"headerlink\" title=\"4. 手機進入 Webbview &gt; 點選 inspect &gt; 就可以針對 Webbview　進行偵錯\"></a>4. 手機進入 Webbview &gt; 點選 inspect &gt; 就可以針對 Webbview　進行偵錯</h2><p><img src=\"https://i.imgur.com/rsYvNdu.png\" alt></p>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://developers.google.com/web/tools/chrome-devtools/remote-debugging/webviews?hl=zh-tw\" target=\"_blank\" rel=\"noopener\">遠程調試 WebView</a></li>\n</ul>\n"},{"title":"curl for windows","date":"2019-03-07T08:27:11.000Z","_content":"# curl for windows\n\n1.[下載](https://curl.haxx.se/windows/)\n\n![下載](https://i.imgur.com/D5lAz3S.png)\n\n2.curl.exe\n\n![curl.exe](https://i.imgur.com/7Wy9H5C.png)\n\n3.測試\n\n```bash\ncurl -X get \"www.google.com\"\n```\n\n![測試](https://i.imgur.com/ElnCkzf.png)\n\n# 參考\n* [curl 7.64.0 for Windows](https://curl.haxx.se/windows/)\n* [curl online](https://onlinecurl.com/)","source":"_posts/curl-for-windows.md","raw":"---\ntitle: curl for windows\ndate: 2019-03-07 16:27:11\ncategories:\n- curl\ntags:\n- curl\n---\n# curl for windows\n\n1.[下載](https://curl.haxx.se/windows/)\n\n![下載](https://i.imgur.com/D5lAz3S.png)\n\n2.curl.exe\n\n![curl.exe](https://i.imgur.com/7Wy9H5C.png)\n\n3.測試\n\n```bash\ncurl -X get \"www.google.com\"\n```\n\n![測試](https://i.imgur.com/ElnCkzf.png)\n\n# 參考\n* [curl 7.64.0 for Windows](https://curl.haxx.se/windows/)\n* [curl online](https://onlinecurl.com/)","slug":"curl-for-windows","published":1,"updated":"2019-06-03T01:52:24.705Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xvn004x1q22rxjic1jx","content":"<h1 id=\"curl-for-windows\"><a href=\"#curl-for-windows\" class=\"headerlink\" title=\"curl for windows\"></a>curl for windows</h1><p>1.<a href=\"https://curl.haxx.se/windows/\" target=\"_blank\" rel=\"noopener\">下載</a></p>\n<p><img src=\"https://i.imgur.com/D5lAz3S.png\" alt=\"下載\"></p>\n<p>2.curl.exe</p>\n<p><img src=\"https://i.imgur.com/7Wy9H5C.png\" alt=\"curl.exe\"></p>\n<p>3.測試</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -X get <span class=\"string\">\"www.google.com\"</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/ElnCkzf.png\" alt=\"測試\"></p>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://curl.haxx.se/windows/\" target=\"_blank\" rel=\"noopener\">curl 7.64.0 for Windows</a></li>\n<li><a href=\"https://onlinecurl.com/\" target=\"_blank\" rel=\"noopener\">curl online</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"curl-for-windows\"><a href=\"#curl-for-windows\" class=\"headerlink\" title=\"curl for windows\"></a>curl for windows</h1><p>1.<a href=\"https://curl.haxx.se/windows/\" target=\"_blank\" rel=\"noopener\">下載</a></p>\n<p><img src=\"https://i.imgur.com/D5lAz3S.png\" alt=\"下載\"></p>\n<p>2.curl.exe</p>\n<p><img src=\"https://i.imgur.com/7Wy9H5C.png\" alt=\"curl.exe\"></p>\n<p>3.測試</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -X get <span class=\"string\">\"www.google.com\"</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/ElnCkzf.png\" alt=\"測試\"></p>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://curl.haxx.se/windows/\" target=\"_blank\" rel=\"noopener\">curl 7.64.0 for Windows</a></li>\n<li><a href=\"https://onlinecurl.com/\" target=\"_blank\" rel=\"noopener\">curl online</a></li>\n</ul>\n"},{"title":"docker-compose run ELK","date":"2019-04-02T08:32:39.000Z","_content":"\n# docker-comepost run ELK\n\n## 1. 新增 elasticsearch 持久層資料夾\n\n```bash\nmkdir -m 777 /data/elasticsearch & mkdir -m 777 /data/elasticsearch2 & cp -r logstash /data/logstash\n```\n\n## logstash.conf\n\n```conf\nfile {\n    path => \"/usr/share/logstash/Log/*\"\n    type => \"file\"\n    start_position => \"beginning\"\n   }\n }\n\nfilter {\n    grok {\n           match => [\"message\", \"%{TIMESTAMP_ISO8601:[@metadata][timestamp]} %{NUMBER:threadid} %{LOGLEVEL:loglevel} %{NOTSPACE:logger} %{GREEDYDATA:message}\"]\n           overwrite => [ \"message\" ]\n        }\n}\n\noutput {\n  elasticsearch {\n    hosts => [\"elasticsearch:9200\"]\n    index => \"logstash-test\"  \n   }\n  stdout { codec => rubydebug}\n}\n```\n\n## docker-compose.yaml\n\n```bash\nversion: '3.2'\nservices:\n  elasticsearch:\n    image: docker.elastic.co/elasticsearch/elasticsearch:6.7.0\n    container_name: elasticsearch\n    environment:\n      - cluster.name=docker-cluster\n      - bootstrap.memory_lock=true\n      - \"ES_JAVA_OPTS=-Xms512m -Xmx512m\"\n    ulimits:\n      memlock:\n        soft: -1\n        hard: -1\n    volumes:\n      - /data/elasticsearch:/usr/share/elasticsearch/data\n    ports:\n      - 9200:9200\n    networks:\n      - esnet\n  elasticsearch2:\n    image: docker.elastic.co/elasticsearch/elasticsearch:6.7.0\n    container_name: elasticsearch2\n    environment:\n      - cluster.name=docker-cluster\n      - bootstrap.memory_lock=true\n      - \"ES_JAVA_OPTS=-Xms512m -Xmx512m\"\n      - \"discovery.zen.ping.unicast.hosts=elasticsearch\"\n    ulimits:\n      memlock:\n        soft: -1\n        hard: -1\n    volumes:\n      - /data/elasticsearch2:/usr/share/elasticsearch/data\n    networks:\n      - esnet\n    restart: always\n  kibana:\n    image: docker.elastic.co/kibana/kibana:6.7.0\n    container_name: kibana\n    ports:\n    - \"5601:5601\"\n    restart: always\n    networks:\n      - esnet\n  logstash:\n    image: docker.elastic.co/logstash/logstash:6.7.0\n    container_name: logstash\n    volumes:\n    - /tmp/Log/:/usr/share/logstash/Log\n    - /data/logstash/pipeline:/usr/share/logstash/pipeline/\n    restart: always\n    networks:\n      - esnet\nnetworks:\n  esnet:\n\n```\n\n## 2. docker-compose\n\n> 全部啟動\n> \n```bash\ndocker-compose up -d\n```\n\n> 全部關閉\n\n```bash\ndocker-compose  down\n```\n\n\n#參考\n\n* [ELK-Stack.git](https://github.com/ste5022424/ELK-Stack.git)\n* [elasticsearch](https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html)\n* [logstash](https://www.elastic.co/guide/en/logstash/current/docker.html)\n* [kibana](https://www.elastic.co/guide/en/kibana/current/docker.html)\n* [filebeat](https://www.elastic.co/guide/en/beats/filebeat/current/running-on-docker.html)","source":"_posts/docker-compose-run-ELK.md","raw":"---\ntitle: docker-compose run ELK\ndate: 2019-04-02 16:32:39\ncategories:\n- ELK Stack\ntags:\n- ELK Stack\n---\n\n# docker-comepost run ELK\n\n## 1. 新增 elasticsearch 持久層資料夾\n\n```bash\nmkdir -m 777 /data/elasticsearch & mkdir -m 777 /data/elasticsearch2 & cp -r logstash /data/logstash\n```\n\n## logstash.conf\n\n```conf\nfile {\n    path => \"/usr/share/logstash/Log/*\"\n    type => \"file\"\n    start_position => \"beginning\"\n   }\n }\n\nfilter {\n    grok {\n           match => [\"message\", \"%{TIMESTAMP_ISO8601:[@metadata][timestamp]} %{NUMBER:threadid} %{LOGLEVEL:loglevel} %{NOTSPACE:logger} %{GREEDYDATA:message}\"]\n           overwrite => [ \"message\" ]\n        }\n}\n\noutput {\n  elasticsearch {\n    hosts => [\"elasticsearch:9200\"]\n    index => \"logstash-test\"  \n   }\n  stdout { codec => rubydebug}\n}\n```\n\n## docker-compose.yaml\n\n```bash\nversion: '3.2'\nservices:\n  elasticsearch:\n    image: docker.elastic.co/elasticsearch/elasticsearch:6.7.0\n    container_name: elasticsearch\n    environment:\n      - cluster.name=docker-cluster\n      - bootstrap.memory_lock=true\n      - \"ES_JAVA_OPTS=-Xms512m -Xmx512m\"\n    ulimits:\n      memlock:\n        soft: -1\n        hard: -1\n    volumes:\n      - /data/elasticsearch:/usr/share/elasticsearch/data\n    ports:\n      - 9200:9200\n    networks:\n      - esnet\n  elasticsearch2:\n    image: docker.elastic.co/elasticsearch/elasticsearch:6.7.0\n    container_name: elasticsearch2\n    environment:\n      - cluster.name=docker-cluster\n      - bootstrap.memory_lock=true\n      - \"ES_JAVA_OPTS=-Xms512m -Xmx512m\"\n      - \"discovery.zen.ping.unicast.hosts=elasticsearch\"\n    ulimits:\n      memlock:\n        soft: -1\n        hard: -1\n    volumes:\n      - /data/elasticsearch2:/usr/share/elasticsearch/data\n    networks:\n      - esnet\n    restart: always\n  kibana:\n    image: docker.elastic.co/kibana/kibana:6.7.0\n    container_name: kibana\n    ports:\n    - \"5601:5601\"\n    restart: always\n    networks:\n      - esnet\n  logstash:\n    image: docker.elastic.co/logstash/logstash:6.7.0\n    container_name: logstash\n    volumes:\n    - /tmp/Log/:/usr/share/logstash/Log\n    - /data/logstash/pipeline:/usr/share/logstash/pipeline/\n    restart: always\n    networks:\n      - esnet\nnetworks:\n  esnet:\n\n```\n\n## 2. docker-compose\n\n> 全部啟動\n> \n```bash\ndocker-compose up -d\n```\n\n> 全部關閉\n\n```bash\ndocker-compose  down\n```\n\n\n#參考\n\n* [ELK-Stack.git](https://github.com/ste5022424/ELK-Stack.git)\n* [elasticsearch](https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html)\n* [logstash](https://www.elastic.co/guide/en/logstash/current/docker.html)\n* [kibana](https://www.elastic.co/guide/en/kibana/current/docker.html)\n* [filebeat](https://www.elastic.co/guide/en/beats/filebeat/current/running-on-docker.html)","slug":"docker-compose-run-ELK","published":1,"updated":"2019-06-03T01:52:24.706Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xvn00501q228obc8cre","content":"<h1 id=\"docker-comepost-run-ELK\"><a href=\"#docker-comepost-run-ELK\" class=\"headerlink\" title=\"docker-comepost run ELK\"></a>docker-comepost run ELK</h1><h2 id=\"1-新增-elasticsearch-持久層資料夾\"><a href=\"#1-新增-elasticsearch-持久層資料夾\" class=\"headerlink\" title=\"1. 新增 elasticsearch 持久層資料夾\"></a>1. 新增 elasticsearch 持久層資料夾</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -m 777 /data/elasticsearch &amp; mkdir -m 777 /data/elasticsearch2 &amp; cp -r logstash /data/logstash</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"logstash-conf\"><a href=\"#logstash-conf\" class=\"headerlink\" title=\"logstash.conf\"></a>logstash.conf</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file &#123;</span><br><span class=\"line\">    path =&gt; &quot;/usr/share/logstash/Log/*&quot;</span><br><span class=\"line\">    type =&gt; &quot;file&quot;</span><br><span class=\"line\">    start_position =&gt; &quot;beginning&quot;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">filter &#123;</span><br><span class=\"line\">    grok &#123;</span><br><span class=\"line\">           match =&gt; [&quot;message&quot;, &quot;%&#123;TIMESTAMP_ISO8601:[@metadata][timestamp]&#125; %&#123;NUMBER:threadid&#125; %&#123;LOGLEVEL:loglevel&#125; %&#123;NOTSPACE:logger&#125; %&#123;GREEDYDATA:message&#125;&quot;]</span><br><span class=\"line\">           overwrite =&gt; [ &quot;message&quot; ]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">output &#123;</span><br><span class=\"line\">  elasticsearch &#123;</span><br><span class=\"line\">    hosts =&gt; [&quot;elasticsearch:9200&quot;]</span><br><span class=\"line\">    index =&gt; &quot;logstash-test&quot;  </span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">  stdout &#123; codec =&gt; rubydebug&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"docker-compose-yaml\"><a href=\"#docker-compose-yaml\" class=\"headerlink\" title=\"docker-compose.yaml\"></a>docker-compose.yaml</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: <span class=\"string\">'3.2'</span></span><br><span class=\"line\">services:</span><br><span class=\"line\">  elasticsearch:</span><br><span class=\"line\">    image: docker.elastic.co/elasticsearch/elasticsearch:6.7.0</span><br><span class=\"line\">    container_name: elasticsearch</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      - cluster.name=docker-cluster</span><br><span class=\"line\">      - bootstrap.memory_lock=<span class=\"literal\">true</span></span><br><span class=\"line\">      - <span class=\"string\">\"ES_JAVA_OPTS=-Xms512m -Xmx512m\"</span></span><br><span class=\"line\">    ulimits:</span><br><span class=\"line\">      memlock:</span><br><span class=\"line\">        soft: -1</span><br><span class=\"line\">        hard: -1</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - /data/elasticsearch:/usr/share/elasticsearch/data</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - 9200:9200</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - esnet</span><br><span class=\"line\">  elasticsearch2:</span><br><span class=\"line\">    image: docker.elastic.co/elasticsearch/elasticsearch:6.7.0</span><br><span class=\"line\">    container_name: elasticsearch2</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      - cluster.name=docker-cluster</span><br><span class=\"line\">      - bootstrap.memory_lock=<span class=\"literal\">true</span></span><br><span class=\"line\">      - <span class=\"string\">\"ES_JAVA_OPTS=-Xms512m -Xmx512m\"</span></span><br><span class=\"line\">      - <span class=\"string\">\"discovery.zen.ping.unicast.hosts=elasticsearch\"</span></span><br><span class=\"line\">    ulimits:</span><br><span class=\"line\">      memlock:</span><br><span class=\"line\">        soft: -1</span><br><span class=\"line\">        hard: -1</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - /data/elasticsearch2:/usr/share/elasticsearch/data</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - esnet</span><br><span class=\"line\">    restart: always</span><br><span class=\"line\">  kibana:</span><br><span class=\"line\">    image: docker.elastic.co/kibana/kibana:6.7.0</span><br><span class=\"line\">    container_name: kibana</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">    - <span class=\"string\">\"5601:5601\"</span></span><br><span class=\"line\">    restart: always</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - esnet</span><br><span class=\"line\">  logstash:</span><br><span class=\"line\">    image: docker.elastic.co/logstash/logstash:6.7.0</span><br><span class=\"line\">    container_name: logstash</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">    - /tmp/Log/:/usr/share/logstash/Log</span><br><span class=\"line\">    - /data/logstash/pipeline:/usr/share/logstash/pipeline/</span><br><span class=\"line\">    restart: always</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - esnet</span><br><span class=\"line\">networks:</span><br><span class=\"line\">  esnet:</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-docker-compose\"><a href=\"#2-docker-compose\" class=\"headerlink\" title=\"2. docker-compose\"></a>2. docker-compose</h2><blockquote>\n<p>全部啟動</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>全部關閉</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose  down</span><br></pre></td></tr></table></figure>\n\n<p>#參考</p>\n<ul>\n<li><a href=\"https://github.com/ste5022424/ELK-Stack.git\" target=\"_blank\" rel=\"noopener\">ELK-Stack.git</a></li>\n<li><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html\" target=\"_blank\" rel=\"noopener\">elasticsearch</a></li>\n<li><a href=\"https://www.elastic.co/guide/en/logstash/current/docker.html\" target=\"_blank\" rel=\"noopener\">logstash</a></li>\n<li><a href=\"https://www.elastic.co/guide/en/kibana/current/docker.html\" target=\"_blank\" rel=\"noopener\">kibana</a></li>\n<li><a href=\"https://www.elastic.co/guide/en/beats/filebeat/current/running-on-docker.html\" target=\"_blank\" rel=\"noopener\">filebeat</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"docker-comepost-run-ELK\"><a href=\"#docker-comepost-run-ELK\" class=\"headerlink\" title=\"docker-comepost run ELK\"></a>docker-comepost run ELK</h1><h2 id=\"1-新增-elasticsearch-持久層資料夾\"><a href=\"#1-新增-elasticsearch-持久層資料夾\" class=\"headerlink\" title=\"1. 新增 elasticsearch 持久層資料夾\"></a>1. 新增 elasticsearch 持久層資料夾</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -m 777 /data/elasticsearch &amp; mkdir -m 777 /data/elasticsearch2 &amp; cp -r logstash /data/logstash</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"logstash-conf\"><a href=\"#logstash-conf\" class=\"headerlink\" title=\"logstash.conf\"></a>logstash.conf</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file &#123;</span><br><span class=\"line\">    path =&gt; &quot;/usr/share/logstash/Log/*&quot;</span><br><span class=\"line\">    type =&gt; &quot;file&quot;</span><br><span class=\"line\">    start_position =&gt; &quot;beginning&quot;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">filter &#123;</span><br><span class=\"line\">    grok &#123;</span><br><span class=\"line\">           match =&gt; [&quot;message&quot;, &quot;%&#123;TIMESTAMP_ISO8601:[@metadata][timestamp]&#125; %&#123;NUMBER:threadid&#125; %&#123;LOGLEVEL:loglevel&#125; %&#123;NOTSPACE:logger&#125; %&#123;GREEDYDATA:message&#125;&quot;]</span><br><span class=\"line\">           overwrite =&gt; [ &quot;message&quot; ]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">output &#123;</span><br><span class=\"line\">  elasticsearch &#123;</span><br><span class=\"line\">    hosts =&gt; [&quot;elasticsearch:9200&quot;]</span><br><span class=\"line\">    index =&gt; &quot;logstash-test&quot;  </span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">  stdout &#123; codec =&gt; rubydebug&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"docker-compose-yaml\"><a href=\"#docker-compose-yaml\" class=\"headerlink\" title=\"docker-compose.yaml\"></a>docker-compose.yaml</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: <span class=\"string\">'3.2'</span></span><br><span class=\"line\">services:</span><br><span class=\"line\">  elasticsearch:</span><br><span class=\"line\">    image: docker.elastic.co/elasticsearch/elasticsearch:6.7.0</span><br><span class=\"line\">    container_name: elasticsearch</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      - cluster.name=docker-cluster</span><br><span class=\"line\">      - bootstrap.memory_lock=<span class=\"literal\">true</span></span><br><span class=\"line\">      - <span class=\"string\">\"ES_JAVA_OPTS=-Xms512m -Xmx512m\"</span></span><br><span class=\"line\">    ulimits:</span><br><span class=\"line\">      memlock:</span><br><span class=\"line\">        soft: -1</span><br><span class=\"line\">        hard: -1</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - /data/elasticsearch:/usr/share/elasticsearch/data</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - 9200:9200</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - esnet</span><br><span class=\"line\">  elasticsearch2:</span><br><span class=\"line\">    image: docker.elastic.co/elasticsearch/elasticsearch:6.7.0</span><br><span class=\"line\">    container_name: elasticsearch2</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      - cluster.name=docker-cluster</span><br><span class=\"line\">      - bootstrap.memory_lock=<span class=\"literal\">true</span></span><br><span class=\"line\">      - <span class=\"string\">\"ES_JAVA_OPTS=-Xms512m -Xmx512m\"</span></span><br><span class=\"line\">      - <span class=\"string\">\"discovery.zen.ping.unicast.hosts=elasticsearch\"</span></span><br><span class=\"line\">    ulimits:</span><br><span class=\"line\">      memlock:</span><br><span class=\"line\">        soft: -1</span><br><span class=\"line\">        hard: -1</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - /data/elasticsearch2:/usr/share/elasticsearch/data</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - esnet</span><br><span class=\"line\">    restart: always</span><br><span class=\"line\">  kibana:</span><br><span class=\"line\">    image: docker.elastic.co/kibana/kibana:6.7.0</span><br><span class=\"line\">    container_name: kibana</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">    - <span class=\"string\">\"5601:5601\"</span></span><br><span class=\"line\">    restart: always</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - esnet</span><br><span class=\"line\">  logstash:</span><br><span class=\"line\">    image: docker.elastic.co/logstash/logstash:6.7.0</span><br><span class=\"line\">    container_name: logstash</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">    - /tmp/Log/:/usr/share/logstash/Log</span><br><span class=\"line\">    - /data/logstash/pipeline:/usr/share/logstash/pipeline/</span><br><span class=\"line\">    restart: always</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - esnet</span><br><span class=\"line\">networks:</span><br><span class=\"line\">  esnet:</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-docker-compose\"><a href=\"#2-docker-compose\" class=\"headerlink\" title=\"2. docker-compose\"></a>2. docker-compose</h2><blockquote>\n<p>全部啟動</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>全部關閉</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose  down</span><br></pre></td></tr></table></figure>\n\n<p>#參考</p>\n<ul>\n<li><a href=\"https://github.com/ste5022424/ELK-Stack.git\" target=\"_blank\" rel=\"noopener\">ELK-Stack.git</a></li>\n<li><a href=\"https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html\" target=\"_blank\" rel=\"noopener\">elasticsearch</a></li>\n<li><a href=\"https://www.elastic.co/guide/en/logstash/current/docker.html\" target=\"_blank\" rel=\"noopener\">logstash</a></li>\n<li><a href=\"https://www.elastic.co/guide/en/kibana/current/docker.html\" target=\"_blank\" rel=\"noopener\">kibana</a></li>\n<li><a href=\"https://www.elastic.co/guide/en/beats/filebeat/current/running-on-docker.html\" target=\"_blank\" rel=\"noopener\">filebeat</a></li>\n</ul>\n"},{"title":"kubectl 常用指令","date":"2019-03-15T03:15:23.000Z","_content":"\n# kubectl 常用指令\n\n## 以下列舉常用指令\n\n* version :查看 kubectl 版本\n\n```bash=\nkubectl version\n```\n\n* cluster-info :顯示叢集資訊\n\n```bash\nkubectl cluster-info\n```\n\n* top :查看CPU、記憶體狀態\n\n```bash\nkubectl top pod\nkubectl top node\n```\n\n\n* get :取得K8s相關資訊\n\n```bash=\nkubectl get pods\nkubectl get service\n```\n\n* run :執行容器\n\n```bash=\nkubectl run [your-name] --image gcr.io/[your-projectid]/netcorewebapi:v1 --port 80\n```\n\n* logs :查看容器log\n\n```bash=\nkubectl logs [pod-name]\n```\n\n* exec :對容器下指令\n\n```bash=\nkubectl exec -it [pod-name] bash\n```\n\n* apply :使用 yaml 更新 K8s\n\n```bash=\nkubectl apply [youtrname].yaml \n```\n\n* config view :查看 kubectl 設定\n\n```bash=\nkubectl config view\n```\n\n# 參考\n\n* [kubectl-commands](https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands)\n* [K8S指令](https://blog.csdn.net/xingwangc2014/article/details/51204224)","source":"_posts/kubectl-常用指令.md","raw":"---\ntitle: 'kubectl 常用指令'\ndate: 2019-03-15 11:15:23\ncategories:\n- Kubernetes\ntags:\n- Kubernetes\n- kubectl\n- Docker\n---\n\n# kubectl 常用指令\n\n## 以下列舉常用指令\n\n* version :查看 kubectl 版本\n\n```bash=\nkubectl version\n```\n\n* cluster-info :顯示叢集資訊\n\n```bash\nkubectl cluster-info\n```\n\n* top :查看CPU、記憶體狀態\n\n```bash\nkubectl top pod\nkubectl top node\n```\n\n\n* get :取得K8s相關資訊\n\n```bash=\nkubectl get pods\nkubectl get service\n```\n\n* run :執行容器\n\n```bash=\nkubectl run [your-name] --image gcr.io/[your-projectid]/netcorewebapi:v1 --port 80\n```\n\n* logs :查看容器log\n\n```bash=\nkubectl logs [pod-name]\n```\n\n* exec :對容器下指令\n\n```bash=\nkubectl exec -it [pod-name] bash\n```\n\n* apply :使用 yaml 更新 K8s\n\n```bash=\nkubectl apply [youtrname].yaml \n```\n\n* config view :查看 kubectl 設定\n\n```bash=\nkubectl config view\n```\n\n# 參考\n\n* [kubectl-commands](https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands)\n* [K8S指令](https://blog.csdn.net/xingwangc2014/article/details/51204224)","slug":"kubectl-常用指令","published":1,"updated":"2019-06-03T01:52:24.706Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xvo00531q22en2xb3ld","content":"<h1 id=\"kubectl-常用指令\"><a href=\"#kubectl-常用指令\" class=\"headerlink\" title=\"kubectl 常用指令\"></a>kubectl 常用指令</h1><h2 id=\"以下列舉常用指令\"><a href=\"#以下列舉常用指令\" class=\"headerlink\" title=\"以下列舉常用指令\"></a>以下列舉常用指令</h2><ul>\n<li>version :查看 kubectl 版本</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl version</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>cluster-info :顯示叢集資訊</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl cluster-info</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>top :查看CPU、記憶體狀態</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl top pod</span><br><span class=\"line\">kubectl top node</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>get :取得K8s相關資訊</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl get pods</span><br><span class=\"line\">kubectl get service</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>run :執行容器</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl run [your-name] --image gcr.io/[your-projectid]/netcorewebapi:v1 --port 80</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>logs :查看容器log</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl logs [pod-name]</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>exec :對容器下指令</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl <span class=\"built_in\">exec</span> -it [pod-name] bash</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>apply :使用 yaml 更新 K8s</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl apply [youtrname].yaml</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>config view :查看 kubectl 設定</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl config view</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands\" target=\"_blank\" rel=\"noopener\">kubectl-commands</a></li>\n<li><a href=\"https://blog.csdn.net/xingwangc2014/article/details/51204224\" target=\"_blank\" rel=\"noopener\">K8S指令</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"kubectl-常用指令\"><a href=\"#kubectl-常用指令\" class=\"headerlink\" title=\"kubectl 常用指令\"></a>kubectl 常用指令</h1><h2 id=\"以下列舉常用指令\"><a href=\"#以下列舉常用指令\" class=\"headerlink\" title=\"以下列舉常用指令\"></a>以下列舉常用指令</h2><ul>\n<li>version :查看 kubectl 版本</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl version</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>cluster-info :顯示叢集資訊</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl cluster-info</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>top :查看CPU、記憶體狀態</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl top pod</span><br><span class=\"line\">kubectl top node</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>get :取得K8s相關資訊</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl get pods</span><br><span class=\"line\">kubectl get service</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>run :執行容器</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl run [your-name] --image gcr.io/[your-projectid]/netcorewebapi:v1 --port 80</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>logs :查看容器log</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl logs [pod-name]</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>exec :對容器下指令</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl <span class=\"built_in\">exec</span> -it [pod-name] bash</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>apply :使用 yaml 更新 K8s</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl apply [youtrname].yaml</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>config view :查看 kubectl 設定</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl config view</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands\" target=\"_blank\" rel=\"noopener\">kubectl-commands</a></li>\n<li><a href=\"https://blog.csdn.net/xingwangc2014/article/details/51204224\" target=\"_blank\" rel=\"noopener\">K8S指令</a></li>\n</ul>\n"},{"title":"mac code.","date":"2019-02-27T06:55:36.000Z","_content":"\n```bash\n >shell command\n```\n\n![shell command](https://i.imgur.com/oVKx5XV.png)\n\n# 參考\n\n* [“code .” Not working in Command Line for Visual Code Studio on OSX/Mac](https://stackoverflow.com/questions/29955500/code-not-working-in-command-line-for-visual-code-studio-on-osx-mac)","source":"_posts/mac-code.md","raw":"---\ntitle: mac code.\ndate: 2019-02-27 14:55:36\ncategories:\n- mac\ntags:\n- mac\n---\n\n```bash\n >shell command\n```\n\n![shell command](https://i.imgur.com/oVKx5XV.png)\n\n# 參考\n\n* [“code .” Not working in Command Line for Visual Code Studio on OSX/Mac](https://stackoverflow.com/questions/29955500/code-not-working-in-command-line-for-visual-code-studio-on-osx-mac)","slug":"mac-code","published":1,"updated":"2019-06-03T01:52:24.707Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xvq00551q22na552y5m","content":"<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;shell <span class=\"built_in\">command</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/oVKx5XV.png\" alt=\"shell command\"></p>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://stackoverflow.com/questions/29955500/code-not-working-in-command-line-for-visual-code-studio-on-osx-mac\" target=\"_blank\" rel=\"noopener\">“code .” Not working in Command Line for Visual Code Studio on OSX/Mac</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;shell <span class=\"built_in\">command</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/oVKx5XV.png\" alt=\"shell command\"></p>\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://stackoverflow.com/questions/29955500/code-not-working-in-command-line-for-visual-code-studio-on-osx-mac\" target=\"_blank\" rel=\"noopener\">“code .” Not working in Command Line for Visual Code Studio on OSX/Mac</a></li>\n</ul>\n"},{"title":"mac ll","date":"2018-12-26T03:54:12.000Z","_content":"\n新增一個　.bash_profile\n/Users/YOUR_USER_NAME/.bash_profile\n\n```bash\nalias ll='ls -lG'\n```\n\n# 參考\n* [How can I install the `ll` command on Mac OS X?](https://unix.stackexchange.com/questions/28425/how-can-i-install-the-ll-command-on-mac-os-x)","source":"_posts/mac-ll.md","raw":"---\ntitle: mac ll\ndate: 2018-12-26 11:54:12\ncategories:\n- mac\ntags:\n- mac\n---\n\n新增一個　.bash_profile\n/Users/YOUR_USER_NAME/.bash_profile\n\n```bash\nalias ll='ls -lG'\n```\n\n# 參考\n* [How can I install the `ll` command on Mac OS X?](https://unix.stackexchange.com/questions/28425/how-can-i-install-the-ll-command-on-mac-os-x)","slug":"mac-ll","published":1,"updated":"2019-06-03T01:52:24.707Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xvr005a1q22fatuk7cr","content":"<p>新增一個　.bash_profile<br>/Users/YOUR_USER_NAME/.bash_profile</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">alias</span> ll=<span class=\"string\">'ls -lG'</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://unix.stackexchange.com/questions/28425/how-can-i-install-the-ll-command-on-mac-os-x\" target=\"_blank\" rel=\"noopener\">How can I install the <code>ll</code> command on Mac OS X?</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>新增一個　.bash_profile<br>/Users/YOUR_USER_NAME/.bash_profile</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">alias</span> ll=<span class=\"string\">'ls -lG'</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"參考\"><a href=\"#參考\" class=\"headerlink\" title=\"參考\"></a>參考</h1><ul>\n<li><a href=\"https://unix.stackexchange.com/questions/28425/how-can-i-install-the-ll-command-on-mac-os-x\" target=\"_blank\" rel=\"noopener\">How can I install the <code>ll</code> command on Mac OS X?</a></li>\n</ul>\n"},{"title":"redis lua script","date":"2018-12-24T10:30:29.000Z","_content":"","source":"_posts/redis-lua-script.md","raw":"---\ntitle: redis lua script\ndate: 2018-12-24 18:30:29\ncategories:\n- redis\ntags:\n- redis lua script\n- redis\n---\n","slug":"redis-lua-script","published":1,"updated":"2019-03-07T09:02:28.592Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xvs005d1q22rvjgulun","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Surge 免費靜態網頁空間","date":"2018-11-02T06:39:54.000Z","_content":"\n# Surge\n免費靜態網頁空間\n\n### 安裝 \n\n```\nnpm install --global surge\n```\n>請先安裝 Node.js\n\n### 新增一個網頁\n\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Document</title>\n</head>\n<body>\n    <P>Hello! world</P>\n</body>\n</html>\n```\n![](https://i.imgur.com/C2AqlfU.png)\n\n### 輸入 surge 指令\n\n```\nsurge\n```\n![](https://i.imgur.com/nalP9TX.png)\n\n> 請自行輸入email 跟 密碼，還可以自訂Domain\n \n\n### 上傳成功就可以看到網頁\n\n![](https://i.imgur.com/DLoh5KV.png)\n\n[http://ste5022424.surge.sh/index.html](http://ste5022424.surge.sh/index.html)\n\n\n### 部屬到自己定義的網址\n\n```\nsurge --domain ste5022424.surge.sh\n```\n\n![](https://i.imgur.com/OFKTSrX.png)\n\n### 設定 https\n\n```\nsurge --domain https://ste5022424.surge.sh\n```\n![](https://i.imgur.com/SxhyGA7.png)\n\n\n\n# 參考網址\n* [Surge](https://www.minwt.com/website/server/17359.html)","source":"_posts/surge.md","raw":"---\ntitle: Surge 免費靜態網頁空間\ndate: 2018-11-02 14:39:54\ncategories:\n- surge\ntags:\n- Surge\n---\n\n# Surge\n免費靜態網頁空間\n\n### 安裝 \n\n```\nnpm install --global surge\n```\n>請先安裝 Node.js\n\n### 新增一個網頁\n\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Document</title>\n</head>\n<body>\n    <P>Hello! world</P>\n</body>\n</html>\n```\n![](https://i.imgur.com/C2AqlfU.png)\n\n### 輸入 surge 指令\n\n```\nsurge\n```\n![](https://i.imgur.com/nalP9TX.png)\n\n> 請自行輸入email 跟 密碼，還可以自訂Domain\n \n\n### 上傳成功就可以看到網頁\n\n![](https://i.imgur.com/DLoh5KV.png)\n\n[http://ste5022424.surge.sh/index.html](http://ste5022424.surge.sh/index.html)\n\n\n### 部屬到自己定義的網址\n\n```\nsurge --domain ste5022424.surge.sh\n```\n\n![](https://i.imgur.com/OFKTSrX.png)\n\n### 設定 https\n\n```\nsurge --domain https://ste5022424.surge.sh\n```\n![](https://i.imgur.com/SxhyGA7.png)\n\n\n\n# 參考網址\n* [Surge](https://www.minwt.com/website/server/17359.html)","slug":"surge","published":1,"updated":"2019-06-03T01:52:24.707Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xvt005h1q22kf6lon20","content":"<h1 id=\"Surge\"><a href=\"#Surge\" class=\"headerlink\" title=\"Surge\"></a>Surge</h1><p>免費靜態網頁空間</p>\n<h3 id=\"安裝\"><a href=\"#安裝\" class=\"headerlink\" title=\"安裝\"></a>安裝</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --global surge</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>請先安裝 Node.js</p>\n</blockquote>\n<h3 id=\"新增一個網頁\"><a href=\"#新增一個網頁\" class=\"headerlink\" title=\"新增一個網頁\"></a>新增一個網頁</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=&quot;en&quot;&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class=\"line\">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span><br><span class=\"line\">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">    &lt;P&gt;Hello! world&lt;/P&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/C2AqlfU.png\" alt></p>\n<h3 id=\"輸入-surge-指令\"><a href=\"#輸入-surge-指令\" class=\"headerlink\" title=\"輸入 surge 指令\"></a>輸入 surge 指令</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">surge</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/nalP9TX.png\" alt></p>\n<blockquote>\n<p>請自行輸入email 跟 密碼，還可以自訂Domain</p>\n</blockquote>\n<h3 id=\"上傳成功就可以看到網頁\"><a href=\"#上傳成功就可以看到網頁\" class=\"headerlink\" title=\"上傳成功就可以看到網頁\"></a>上傳成功就可以看到網頁</h3><p><img src=\"https://i.imgur.com/DLoh5KV.png\" alt></p>\n<p><a href=\"http://ste5022424.surge.sh/index.html\" target=\"_blank\" rel=\"noopener\">http://ste5022424.surge.sh/index.html</a></p>\n<h3 id=\"部屬到自己定義的網址\"><a href=\"#部屬到自己定義的網址\" class=\"headerlink\" title=\"部屬到自己定義的網址\"></a>部屬到自己定義的網址</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">surge --domain ste5022424.surge.sh</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/OFKTSrX.png\" alt></p>\n<h3 id=\"設定-https\"><a href=\"#設定-https\" class=\"headerlink\" title=\"設定 https\"></a>設定 https</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">surge --domain https://ste5022424.surge.sh</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/SxhyGA7.png\" alt></p>\n<h1 id=\"參考網址\"><a href=\"#參考網址\" class=\"headerlink\" title=\"參考網址\"></a>參考網址</h1><ul>\n<li><a href=\"https://www.minwt.com/website/server/17359.html\" target=\"_blank\" rel=\"noopener\">Surge</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Surge\"><a href=\"#Surge\" class=\"headerlink\" title=\"Surge\"></a>Surge</h1><p>免費靜態網頁空間</p>\n<h3 id=\"安裝\"><a href=\"#安裝\" class=\"headerlink\" title=\"安裝\"></a>安裝</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --global surge</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>請先安裝 Node.js</p>\n</blockquote>\n<h3 id=\"新增一個網頁\"><a href=\"#新增一個網頁\" class=\"headerlink\" title=\"新增一個網頁\"></a>新增一個網頁</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=&quot;en&quot;&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class=\"line\">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span><br><span class=\"line\">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">    &lt;P&gt;Hello! world&lt;/P&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/C2AqlfU.png\" alt></p>\n<h3 id=\"輸入-surge-指令\"><a href=\"#輸入-surge-指令\" class=\"headerlink\" title=\"輸入 surge 指令\"></a>輸入 surge 指令</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">surge</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/nalP9TX.png\" alt></p>\n<blockquote>\n<p>請自行輸入email 跟 密碼，還可以自訂Domain</p>\n</blockquote>\n<h3 id=\"上傳成功就可以看到網頁\"><a href=\"#上傳成功就可以看到網頁\" class=\"headerlink\" title=\"上傳成功就可以看到網頁\"></a>上傳成功就可以看到網頁</h3><p><img src=\"https://i.imgur.com/DLoh5KV.png\" alt></p>\n<p><a href=\"http://ste5022424.surge.sh/index.html\" target=\"_blank\" rel=\"noopener\">http://ste5022424.surge.sh/index.html</a></p>\n<h3 id=\"部屬到自己定義的網址\"><a href=\"#部屬到自己定義的網址\" class=\"headerlink\" title=\"部屬到自己定義的網址\"></a>部屬到自己定義的網址</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">surge --domain ste5022424.surge.sh</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/OFKTSrX.png\" alt></p>\n<h3 id=\"設定-https\"><a href=\"#設定-https\" class=\"headerlink\" title=\"設定 https\"></a>設定 https</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">surge --domain https://ste5022424.surge.sh</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/SxhyGA7.png\" alt></p>\n<h1 id=\"參考網址\"><a href=\"#參考網址\" class=\"headerlink\" title=\"參考網址\"></a>參考網址</h1><ul>\n<li><a href=\"https://www.minwt.com/website/server/17359.html\" target=\"_blank\" rel=\"noopener\">Surge</a></li>\n</ul>\n"},{"title":"使用 Hexo 建立 Github Blog","date":"2018-10-17T09:23:06.000Z","_content":"\n## 事先安裝\n\n* [Git](https://git-scm.com/)\n* [Node js](https://https://nodejs.org/en/) \n* [Visual Studio Code](https://code.visualstudio.com/)\n\n### Github 新增.github.io專案\n\n![Github](https://i.imgur.com/PO7dlOS.png)\n\n## 安裝 Hexo\n\n```bash=\nnpm install hexo-cli -g\n```\n\n![](https://i.imgur.com/5rz5CHP.png)\n\n## 建立專案\n\n```bash=\nhexo init D:\\\\blog\n```\n\n![](https://i.imgur.com/59eoBCu.png)\n\n### 使用 vs code 開啟\n![](https://i.imgur.com/SeD9liQ.png)\n\n### 更換部落格樣式\n#### 挑選自己喜歡的主題\nhttps://hexo.io/themes/index.html\n![](https://i.imgur.com/a8KgChZ.png)\n\n#### 取得套件(以 Noise為範例)\n\n![](https://i.imgur.com/WIA4TRG.png)\n\n```bash=\ngit clone https://github.com/iissnan/hexo-theme-next.git ./themes/Noise\n```\n\n#### 設定 _config.yml\n\n![](https://i.imgur.com/sdYrMVo.png)\n\n```bash=\ntheme: Noise\n```\n\n### 啟動server\n![](https://i.imgur.com/Y3UI7EA.png)\n\n```\nhexo s -p 8080\n```\n#### 檢視網站\n![](https://i.imgur.com/MQAv634.png)\n\n### 發佈到自己的Github\n\n#### 安裝 hexo-deployer-git。\n![](https://i.imgur.com/Jd0uVhz.png)\n```\nnpm install hexo-deployer-git --save\n```\n#### 設定_config.yml\n```\ndeploy:\n  type: git\n  repo: https://github.com/yourUsername/yourUsername.github.io.git\n  branch: master\n```\n![](https://i.imgur.com/p2eoUwL.png)\n\n#### 部屬至 github\n\n![](https://i.imgur.com/KiO1WNm.png)\n```\nhexo deploy\n```\n#### 檢視網站\n![](https://i.imgur.com/wAw1gfC.png)\n\n### 建立第一篇文章\n\n#### 建立文章\n![](https://i.imgur.com/rkrC6xS.png)\n```\nhexo new \"使用 Hexo 建立 Github Blog\"\n```\n#### 編輯文章\n\n![](https://i.imgur.com/ClTN0Q7.png)\n\n### 建立網站 categories\n#### 新增一個 categories 頁面\n![](https://i.imgur.com/Alwebxp.png)\n\n```\nhexo new page categories\n```\n\n#### 編輯 categories/index.md\n![](https://i.imgur.com/6MkMNVk.png)\n```\n---\ntitle: 文章分類\ndate: 2018-10-17 18:25:40\ntype: \"categories\"\n---\n```\n#### 在文章上加入 categories\n![](https://i.imgur.com/cMKKYti.png)\n\n````\n---\ntitle: 使用 Hexo 建立 Github Blog\ndate: 2018-10-17 17:23:06\ntags: \ncategories:\n- 學習\n---\n````\n\n![](https://i.imgur.com/VrItgdZ.png)\n\n### 建立網站 tag\n#### 新增一個 tags 頁面\n\n````\nhexo new page tags\n````\n![](https://i.imgur.com/53PecP6.png)\n\n\n#### 編輯 tags/index.md\n![](https://i.imgur.com/WfD3HDq.png)\n````\n---\ntitle: tags\ndate: 2018-10-17 18:40:57\ntype: \"tags\"\n---\n````\n#### 在文章上加入 tags\n![](https://i.imgur.com/vCQUMWW.png)\n````\n---\ntitle: 使用 Hexo 建立 Github Blog\ndate: 2018-10-17 17:23:06\ntags:\n- Hexo\ncategories:\n- 學習\n---\n````\n\n### 搜尋功能\n\n#### 安裝 hexo-generator-search\n[hexo-generator-search](\nhttps://www.npmjs.com/package/hexo-generator-search)\n\n```\nnpm install hexo-generator-search --save\n```\n####  在_config.yml 找到 local_search 將 enable 設定為true\n\n![](https://i.imgur.com/pdUPxJC.png)\n\n![](https://i.imgur.com/sid0Bvr.png)\n\n![](https://i.imgur.com/oawpKOu.png)\n\n\n## 參考網址\nHexo 官方網站 : https://hexo.io/zh-tw/\nHexo 文件 :https://hexo.io/zh-tw/api/\nHexo Them :https://hexo.io/themes/index.html\n[Hexo使用攻略-添加分类及标签](https://linlif.github.io/2017/05/27/Hexo%E4%BD%BF%E7%94%A8%E6%94%BB%E7%95%A5-%E6%B7%BB%E5%8A%A0%E5%88%86%E7%B1%BB%E5%8F%8A%E6%A0%87%E7%AD%BE/)\n[[Hexo] 快速上手 Hexo 網誌框架](https://oawan.me/2016/easy-hexo-easy-blog/)\n[可能是最詳細的 Hexo + GitHub Pages 搭建部落格的教程](http://www.lovebxm.com/2018/06/24/hexo-github-blog/)\n[用Hexo + Github Pages搭建個人部落格](https://yogapan.github.io/2017/08/11/%E7%94%A8Hexo-Github-Pages%E6%90%AD%E5%BB%BA%E5%80%8B%E4%BA%BA%E9%83%A8%E8%90%BD%E6%A0%BC/#comments)\n[Hexo的NexT主题个性化：添加文章阅读量](http://www.jeyzhang.com/hexo-next-add-post-views.html)\n[Sign up to Leancloud and create an app](https://github.com/theme-next/hexo-theme-next/blob/master/docs/LEANCLOUD-COUNTER-SECURITY.md)","source":"_posts/使用-Hexo-建立-Github-Blog.md","raw":"---\ntitle: 使用 Hexo 建立 Github Blog\ndate: 2018-10-17 17:23:06\ncategories:\n- Hexo\ntags:\n- Hexo\n---\n\n## 事先安裝\n\n* [Git](https://git-scm.com/)\n* [Node js](https://https://nodejs.org/en/) \n* [Visual Studio Code](https://code.visualstudio.com/)\n\n### Github 新增.github.io專案\n\n![Github](https://i.imgur.com/PO7dlOS.png)\n\n## 安裝 Hexo\n\n```bash=\nnpm install hexo-cli -g\n```\n\n![](https://i.imgur.com/5rz5CHP.png)\n\n## 建立專案\n\n```bash=\nhexo init D:\\\\blog\n```\n\n![](https://i.imgur.com/59eoBCu.png)\n\n### 使用 vs code 開啟\n![](https://i.imgur.com/SeD9liQ.png)\n\n### 更換部落格樣式\n#### 挑選自己喜歡的主題\nhttps://hexo.io/themes/index.html\n![](https://i.imgur.com/a8KgChZ.png)\n\n#### 取得套件(以 Noise為範例)\n\n![](https://i.imgur.com/WIA4TRG.png)\n\n```bash=\ngit clone https://github.com/iissnan/hexo-theme-next.git ./themes/Noise\n```\n\n#### 設定 _config.yml\n\n![](https://i.imgur.com/sdYrMVo.png)\n\n```bash=\ntheme: Noise\n```\n\n### 啟動server\n![](https://i.imgur.com/Y3UI7EA.png)\n\n```\nhexo s -p 8080\n```\n#### 檢視網站\n![](https://i.imgur.com/MQAv634.png)\n\n### 發佈到自己的Github\n\n#### 安裝 hexo-deployer-git。\n![](https://i.imgur.com/Jd0uVhz.png)\n```\nnpm install hexo-deployer-git --save\n```\n#### 設定_config.yml\n```\ndeploy:\n  type: git\n  repo: https://github.com/yourUsername/yourUsername.github.io.git\n  branch: master\n```\n![](https://i.imgur.com/p2eoUwL.png)\n\n#### 部屬至 github\n\n![](https://i.imgur.com/KiO1WNm.png)\n```\nhexo deploy\n```\n#### 檢視網站\n![](https://i.imgur.com/wAw1gfC.png)\n\n### 建立第一篇文章\n\n#### 建立文章\n![](https://i.imgur.com/rkrC6xS.png)\n```\nhexo new \"使用 Hexo 建立 Github Blog\"\n```\n#### 編輯文章\n\n![](https://i.imgur.com/ClTN0Q7.png)\n\n### 建立網站 categories\n#### 新增一個 categories 頁面\n![](https://i.imgur.com/Alwebxp.png)\n\n```\nhexo new page categories\n```\n\n#### 編輯 categories/index.md\n![](https://i.imgur.com/6MkMNVk.png)\n```\n---\ntitle: 文章分類\ndate: 2018-10-17 18:25:40\ntype: \"categories\"\n---\n```\n#### 在文章上加入 categories\n![](https://i.imgur.com/cMKKYti.png)\n\n````\n---\ntitle: 使用 Hexo 建立 Github Blog\ndate: 2018-10-17 17:23:06\ntags: \ncategories:\n- 學習\n---\n````\n\n![](https://i.imgur.com/VrItgdZ.png)\n\n### 建立網站 tag\n#### 新增一個 tags 頁面\n\n````\nhexo new page tags\n````\n![](https://i.imgur.com/53PecP6.png)\n\n\n#### 編輯 tags/index.md\n![](https://i.imgur.com/WfD3HDq.png)\n````\n---\ntitle: tags\ndate: 2018-10-17 18:40:57\ntype: \"tags\"\n---\n````\n#### 在文章上加入 tags\n![](https://i.imgur.com/vCQUMWW.png)\n````\n---\ntitle: 使用 Hexo 建立 Github Blog\ndate: 2018-10-17 17:23:06\ntags:\n- Hexo\ncategories:\n- 學習\n---\n````\n\n### 搜尋功能\n\n#### 安裝 hexo-generator-search\n[hexo-generator-search](\nhttps://www.npmjs.com/package/hexo-generator-search)\n\n```\nnpm install hexo-generator-search --save\n```\n####  在_config.yml 找到 local_search 將 enable 設定為true\n\n![](https://i.imgur.com/pdUPxJC.png)\n\n![](https://i.imgur.com/sid0Bvr.png)\n\n![](https://i.imgur.com/oawpKOu.png)\n\n\n## 參考網址\nHexo 官方網站 : https://hexo.io/zh-tw/\nHexo 文件 :https://hexo.io/zh-tw/api/\nHexo Them :https://hexo.io/themes/index.html\n[Hexo使用攻略-添加分类及标签](https://linlif.github.io/2017/05/27/Hexo%E4%BD%BF%E7%94%A8%E6%94%BB%E7%95%A5-%E6%B7%BB%E5%8A%A0%E5%88%86%E7%B1%BB%E5%8F%8A%E6%A0%87%E7%AD%BE/)\n[[Hexo] 快速上手 Hexo 網誌框架](https://oawan.me/2016/easy-hexo-easy-blog/)\n[可能是最詳細的 Hexo + GitHub Pages 搭建部落格的教程](http://www.lovebxm.com/2018/06/24/hexo-github-blog/)\n[用Hexo + Github Pages搭建個人部落格](https://yogapan.github.io/2017/08/11/%E7%94%A8Hexo-Github-Pages%E6%90%AD%E5%BB%BA%E5%80%8B%E4%BA%BA%E9%83%A8%E8%90%BD%E6%A0%BC/#comments)\n[Hexo的NexT主题个性化：添加文章阅读量](http://www.jeyzhang.com/hexo-next-add-post-views.html)\n[Sign up to Leancloud and create an app](https://github.com/theme-next/hexo-theme-next/blob/master/docs/LEANCLOUD-COUNTER-SECURITY.md)","slug":"使用-Hexo-建立-Github-Blog","published":1,"updated":"2019-06-05T07:12:24.870Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xvu005k1q22tmxqf7lj","content":"<h2 id=\"事先安裝\"><a href=\"#事先安裝\" class=\"headerlink\" title=\"事先安裝\"></a>事先安裝</h2><ul>\n<li><a href=\"https://git-scm.com/\" target=\"_blank\" rel=\"noopener\">Git</a></li>\n<li><a href=\"https://https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">Node js</a> </li>\n<li><a href=\"https://code.visualstudio.com/\" target=\"_blank\" rel=\"noopener\">Visual Studio Code</a></li>\n</ul>\n<h3 id=\"Github-新增-github-io專案\"><a href=\"#Github-新增-github-io專案\" class=\"headerlink\" title=\"Github 新增.github.io專案\"></a>Github 新增.github.io專案</h3><p><img src=\"https://i.imgur.com/PO7dlOS.png\" alt=\"Github\"></p>\n<h2 id=\"安裝-Hexo\"><a href=\"#安裝-Hexo\" class=\"headerlink\" title=\"安裝 Hexo\"></a>安裝 Hexo</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/5rz5CHP.png\" alt></p>\n<h2 id=\"建立專案\"><a href=\"#建立專案\" class=\"headerlink\" title=\"建立專案\"></a>建立專案</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init D:\\\\blog</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/59eoBCu.png\" alt></p>\n<h3 id=\"使用-vs-code-開啟\"><a href=\"#使用-vs-code-開啟\" class=\"headerlink\" title=\"使用 vs code 開啟\"></a>使用 vs code 開啟</h3><p><img src=\"https://i.imgur.com/SeD9liQ.png\" alt></p>\n<h3 id=\"更換部落格樣式\"><a href=\"#更換部落格樣式\" class=\"headerlink\" title=\"更換部落格樣式\"></a>更換部落格樣式</h3><h4 id=\"挑選自己喜歡的主題\"><a href=\"#挑選自己喜歡的主題\" class=\"headerlink\" title=\"挑選自己喜歡的主題\"></a>挑選自己喜歡的主題</h4><p><a href=\"https://hexo.io/themes/index.html\" target=\"_blank\" rel=\"noopener\">https://hexo.io/themes/index.html</a><br><img src=\"https://i.imgur.com/a8KgChZ.png\" alt></p>\n<h4 id=\"取得套件-以-Noise為範例\"><a href=\"#取得套件-以-Noise為範例\" class=\"headerlink\" title=\"取得套件(以 Noise為範例)\"></a>取得套件(以 Noise為範例)</h4><p><img src=\"https://i.imgur.com/WIA4TRG.png\" alt></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/iissnan/hexo-theme-next.git ./themes/Noise</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"設定-config-yml\"><a href=\"#設定-config-yml\" class=\"headerlink\" title=\"設定 _config.yml\"></a>設定 _config.yml</h4><p><img src=\"https://i.imgur.com/sdYrMVo.png\" alt></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme: Noise</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"啟動server\"><a href=\"#啟動server\" class=\"headerlink\" title=\"啟動server\"></a>啟動server</h3><p><img src=\"https://i.imgur.com/Y3UI7EA.png\" alt></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s -p 8080</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"檢視網站\"><a href=\"#檢視網站\" class=\"headerlink\" title=\"檢視網站\"></a>檢視網站</h4><p><img src=\"https://i.imgur.com/MQAv634.png\" alt></p>\n<h3 id=\"發佈到自己的Github\"><a href=\"#發佈到自己的Github\" class=\"headerlink\" title=\"發佈到自己的Github\"></a>發佈到自己的Github</h3><h4 id=\"安裝-hexo-deployer-git。\"><a href=\"#安裝-hexo-deployer-git。\" class=\"headerlink\" title=\"安裝 hexo-deployer-git。\"></a>安裝 hexo-deployer-git。</h4><p><img src=\"https://i.imgur.com/Jd0uVhz.png\" alt></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"設定-config-yml-1\"><a href=\"#設定-config-yml-1\" class=\"headerlink\" title=\"設定_config.yml\"></a>設定_config.yml</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: https://github.com/yourUsername/yourUsername.github.io.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/p2eoUwL.png\" alt></p>\n<h4 id=\"部屬至-github\"><a href=\"#部屬至-github\" class=\"headerlink\" title=\"部屬至 github\"></a>部屬至 github</h4><p><img src=\"https://i.imgur.com/KiO1WNm.png\" alt></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"檢視網站-1\"><a href=\"#檢視網站-1\" class=\"headerlink\" title=\"檢視網站\"></a>檢視網站</h4><p><img src=\"https://i.imgur.com/wAw1gfC.png\" alt></p>\n<h3 id=\"建立第一篇文章\"><a href=\"#建立第一篇文章\" class=\"headerlink\" title=\"建立第一篇文章\"></a>建立第一篇文章</h3><h4 id=\"建立文章\"><a href=\"#建立文章\" class=\"headerlink\" title=\"建立文章\"></a>建立文章</h4><p><img src=\"https://i.imgur.com/rkrC6xS.png\" alt></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new &quot;使用 Hexo 建立 Github Blog&quot;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"編輯文章\"><a href=\"#編輯文章\" class=\"headerlink\" title=\"編輯文章\"></a>編輯文章</h4><p><img src=\"https://i.imgur.com/ClTN0Q7.png\" alt></p>\n<h3 id=\"建立網站-categories\"><a href=\"#建立網站-categories\" class=\"headerlink\" title=\"建立網站 categories\"></a>建立網站 categories</h3><h4 id=\"新增一個-categories-頁面\"><a href=\"#新增一個-categories-頁面\" class=\"headerlink\" title=\"新增一個 categories 頁面\"></a>新增一個 categories 頁面</h4><p><img src=\"https://i.imgur.com/Alwebxp.png\" alt></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page categories</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"編輯-categories-index-md\"><a href=\"#編輯-categories-index-md\" class=\"headerlink\" title=\"編輯 categories/index.md\"></a>編輯 categories/index.md</h4><p><img src=\"https://i.imgur.com/6MkMNVk.png\" alt></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 文章分類</span><br><span class=\"line\">date: 2018-10-17 18:25:40</span><br><span class=\"line\">type: &quot;categories&quot;</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"在文章上加入-categories\"><a href=\"#在文章上加入-categories\" class=\"headerlink\" title=\"在文章上加入 categories\"></a>在文章上加入 categories</h4><p><img src=\"https://i.imgur.com/cMKKYti.png\" alt></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 使用 Hexo 建立 Github Blog</span><br><span class=\"line\">date: 2018-10-17 17:23:06</span><br><span class=\"line\">tags: </span><br><span class=\"line\">categories:</span><br><span class=\"line\">- 學習</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/VrItgdZ.png\" alt></p>\n<h3 id=\"建立網站-tag\"><a href=\"#建立網站-tag\" class=\"headerlink\" title=\"建立網站 tag\"></a>建立網站 tag</h3><h4 id=\"新增一個-tags-頁面\"><a href=\"#新增一個-tags-頁面\" class=\"headerlink\" title=\"新增一個 tags 頁面\"></a>新增一個 tags 頁面</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page tags</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/53PecP6.png\" alt></p>\n<h4 id=\"編輯-tags-index-md\"><a href=\"#編輯-tags-index-md\" class=\"headerlink\" title=\"編輯 tags/index.md\"></a>編輯 tags/index.md</h4><p><img src=\"https://i.imgur.com/WfD3HDq.png\" alt></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: tags</span><br><span class=\"line\">date: 2018-10-17 18:40:57</span><br><span class=\"line\">type: &quot;tags&quot;</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"在文章上加入-tags\"><a href=\"#在文章上加入-tags\" class=\"headerlink\" title=\"在文章上加入 tags\"></a>在文章上加入 tags</h4><p><img src=\"https://i.imgur.com/vCQUMWW.png\" alt></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 使用 Hexo 建立 Github Blog</span><br><span class=\"line\">date: 2018-10-17 17:23:06</span><br><span class=\"line\">tags:</span><br><span class=\"line\">- Hexo</span><br><span class=\"line\">categories:</span><br><span class=\"line\">- 學習</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"搜尋功能\"><a href=\"#搜尋功能\" class=\"headerlink\" title=\"搜尋功能\"></a>搜尋功能</h3><h4 id=\"安裝-hexo-generator-search\"><a href=\"#安裝-hexo-generator-search\" class=\"headerlink\" title=\"安裝 hexo-generator-search\"></a>安裝 hexo-generator-search</h4><p><a href=\"https://www.npmjs.com/package/hexo-generator-search\" target=\"_blank\" rel=\"noopener\">hexo-generator-search</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"在-config-yml-找到-local-search-將-enable-設定為true\"><a href=\"#在-config-yml-找到-local-search-將-enable-設定為true\" class=\"headerlink\" title=\"在_config.yml 找到 local_search 將 enable 設定為true\"></a>在_config.yml 找到 local_search 將 enable 設定為true</h4><p><img src=\"https://i.imgur.com/pdUPxJC.png\" alt></p>\n<p><img src=\"https://i.imgur.com/sid0Bvr.png\" alt></p>\n<p><img src=\"https://i.imgur.com/oawpKOu.png\" alt></p>\n<h2 id=\"參考網址\"><a href=\"#參考網址\" class=\"headerlink\" title=\"參考網址\"></a>參考網址</h2><p>Hexo 官方網站 : <a href=\"https://hexo.io/zh-tw/\" target=\"_blank\" rel=\"noopener\">https://hexo.io/zh-tw/</a><br>Hexo 文件 :<a href=\"https://hexo.io/zh-tw/api/\" target=\"_blank\" rel=\"noopener\">https://hexo.io/zh-tw/api/</a><br>Hexo Them :<a href=\"https://hexo.io/themes/index.html\" target=\"_blank\" rel=\"noopener\">https://hexo.io/themes/index.html</a><br><a href=\"https://linlif.github.io/2017/05/27/Hexo%E4%BD%BF%E7%94%A8%E6%94%BB%E7%95%A5-%E6%B7%BB%E5%8A%A0%E5%88%86%E7%B1%BB%E5%8F%8A%E6%A0%87%E7%AD%BE/\" target=\"_blank\" rel=\"noopener\">Hexo使用攻略-添加分类及标签</a><br><a href=\"https://oawan.me/2016/easy-hexo-easy-blog/\" target=\"_blank\" rel=\"noopener\">[Hexo] 快速上手 Hexo 網誌框架</a><br><a href=\"http://www.lovebxm.com/2018/06/24/hexo-github-blog/\" target=\"_blank\" rel=\"noopener\">可能是最詳細的 Hexo + GitHub Pages 搭建部落格的教程</a><br><a href=\"https://yogapan.github.io/2017/08/11/%E7%94%A8Hexo-Github-Pages%E6%90%AD%E5%BB%BA%E5%80%8B%E4%BA%BA%E9%83%A8%E8%90%BD%E6%A0%BC/#comments\" target=\"_blank\" rel=\"noopener\">用Hexo + Github Pages搭建個人部落格</a><br><a href=\"http://www.jeyzhang.com/hexo-next-add-post-views.html\" target=\"_blank\" rel=\"noopener\">Hexo的NexT主题个性化：添加文章阅读量</a><br><a href=\"https://github.com/theme-next/hexo-theme-next/blob/master/docs/LEANCLOUD-COUNTER-SECURITY.md\" target=\"_blank\" rel=\"noopener\">Sign up to Leancloud and create an app</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"事先安裝\"><a href=\"#事先安裝\" class=\"headerlink\" title=\"事先安裝\"></a>事先安裝</h2><ul>\n<li><a href=\"https://git-scm.com/\" target=\"_blank\" rel=\"noopener\">Git</a></li>\n<li><a href=\"https://https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">Node js</a> </li>\n<li><a href=\"https://code.visualstudio.com/\" target=\"_blank\" rel=\"noopener\">Visual Studio Code</a></li>\n</ul>\n<h3 id=\"Github-新增-github-io專案\"><a href=\"#Github-新增-github-io專案\" class=\"headerlink\" title=\"Github 新增.github.io專案\"></a>Github 新增.github.io專案</h3><p><img src=\"https://i.imgur.com/PO7dlOS.png\" alt=\"Github\"></p>\n<h2 id=\"安裝-Hexo\"><a href=\"#安裝-Hexo\" class=\"headerlink\" title=\"安裝 Hexo\"></a>安裝 Hexo</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/5rz5CHP.png\" alt></p>\n<h2 id=\"建立專案\"><a href=\"#建立專案\" class=\"headerlink\" title=\"建立專案\"></a>建立專案</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init D:\\\\blog</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/59eoBCu.png\" alt></p>\n<h3 id=\"使用-vs-code-開啟\"><a href=\"#使用-vs-code-開啟\" class=\"headerlink\" title=\"使用 vs code 開啟\"></a>使用 vs code 開啟</h3><p><img src=\"https://i.imgur.com/SeD9liQ.png\" alt></p>\n<h3 id=\"更換部落格樣式\"><a href=\"#更換部落格樣式\" class=\"headerlink\" title=\"更換部落格樣式\"></a>更換部落格樣式</h3><h4 id=\"挑選自己喜歡的主題\"><a href=\"#挑選自己喜歡的主題\" class=\"headerlink\" title=\"挑選自己喜歡的主題\"></a>挑選自己喜歡的主題</h4><p><a href=\"https://hexo.io/themes/index.html\" target=\"_blank\" rel=\"noopener\">https://hexo.io/themes/index.html</a><br><img src=\"https://i.imgur.com/a8KgChZ.png\" alt></p>\n<h4 id=\"取得套件-以-Noise為範例\"><a href=\"#取得套件-以-Noise為範例\" class=\"headerlink\" title=\"取得套件(以 Noise為範例)\"></a>取得套件(以 Noise為範例)</h4><p><img src=\"https://i.imgur.com/WIA4TRG.png\" alt></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/iissnan/hexo-theme-next.git ./themes/Noise</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"設定-config-yml\"><a href=\"#設定-config-yml\" class=\"headerlink\" title=\"設定 _config.yml\"></a>設定 _config.yml</h4><p><img src=\"https://i.imgur.com/sdYrMVo.png\" alt></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme: Noise</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"啟動server\"><a href=\"#啟動server\" class=\"headerlink\" title=\"啟動server\"></a>啟動server</h3><p><img src=\"https://i.imgur.com/Y3UI7EA.png\" alt></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s -p 8080</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"檢視網站\"><a href=\"#檢視網站\" class=\"headerlink\" title=\"檢視網站\"></a>檢視網站</h4><p><img src=\"https://i.imgur.com/MQAv634.png\" alt></p>\n<h3 id=\"發佈到自己的Github\"><a href=\"#發佈到自己的Github\" class=\"headerlink\" title=\"發佈到自己的Github\"></a>發佈到自己的Github</h3><h4 id=\"安裝-hexo-deployer-git。\"><a href=\"#安裝-hexo-deployer-git。\" class=\"headerlink\" title=\"安裝 hexo-deployer-git。\"></a>安裝 hexo-deployer-git。</h4><p><img src=\"https://i.imgur.com/Jd0uVhz.png\" alt></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"設定-config-yml-1\"><a href=\"#設定-config-yml-1\" class=\"headerlink\" title=\"設定_config.yml\"></a>設定_config.yml</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: https://github.com/yourUsername/yourUsername.github.io.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/p2eoUwL.png\" alt></p>\n<h4 id=\"部屬至-github\"><a href=\"#部屬至-github\" class=\"headerlink\" title=\"部屬至 github\"></a>部屬至 github</h4><p><img src=\"https://i.imgur.com/KiO1WNm.png\" alt></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"檢視網站-1\"><a href=\"#檢視網站-1\" class=\"headerlink\" title=\"檢視網站\"></a>檢視網站</h4><p><img src=\"https://i.imgur.com/wAw1gfC.png\" alt></p>\n<h3 id=\"建立第一篇文章\"><a href=\"#建立第一篇文章\" class=\"headerlink\" title=\"建立第一篇文章\"></a>建立第一篇文章</h3><h4 id=\"建立文章\"><a href=\"#建立文章\" class=\"headerlink\" title=\"建立文章\"></a>建立文章</h4><p><img src=\"https://i.imgur.com/rkrC6xS.png\" alt></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new &quot;使用 Hexo 建立 Github Blog&quot;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"編輯文章\"><a href=\"#編輯文章\" class=\"headerlink\" title=\"編輯文章\"></a>編輯文章</h4><p><img src=\"https://i.imgur.com/ClTN0Q7.png\" alt></p>\n<h3 id=\"建立網站-categories\"><a href=\"#建立網站-categories\" class=\"headerlink\" title=\"建立網站 categories\"></a>建立網站 categories</h3><h4 id=\"新增一個-categories-頁面\"><a href=\"#新增一個-categories-頁面\" class=\"headerlink\" title=\"新增一個 categories 頁面\"></a>新增一個 categories 頁面</h4><p><img src=\"https://i.imgur.com/Alwebxp.png\" alt></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page categories</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"編輯-categories-index-md\"><a href=\"#編輯-categories-index-md\" class=\"headerlink\" title=\"編輯 categories/index.md\"></a>編輯 categories/index.md</h4><p><img src=\"https://i.imgur.com/6MkMNVk.png\" alt></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 文章分類</span><br><span class=\"line\">date: 2018-10-17 18:25:40</span><br><span class=\"line\">type: &quot;categories&quot;</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"在文章上加入-categories\"><a href=\"#在文章上加入-categories\" class=\"headerlink\" title=\"在文章上加入 categories\"></a>在文章上加入 categories</h4><p><img src=\"https://i.imgur.com/cMKKYti.png\" alt></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 使用 Hexo 建立 Github Blog</span><br><span class=\"line\">date: 2018-10-17 17:23:06</span><br><span class=\"line\">tags: </span><br><span class=\"line\">categories:</span><br><span class=\"line\">- 學習</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/VrItgdZ.png\" alt></p>\n<h3 id=\"建立網站-tag\"><a href=\"#建立網站-tag\" class=\"headerlink\" title=\"建立網站 tag\"></a>建立網站 tag</h3><h4 id=\"新增一個-tags-頁面\"><a href=\"#新增一個-tags-頁面\" class=\"headerlink\" title=\"新增一個 tags 頁面\"></a>新增一個 tags 頁面</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page tags</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/53PecP6.png\" alt></p>\n<h4 id=\"編輯-tags-index-md\"><a href=\"#編輯-tags-index-md\" class=\"headerlink\" title=\"編輯 tags/index.md\"></a>編輯 tags/index.md</h4><p><img src=\"https://i.imgur.com/WfD3HDq.png\" alt></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: tags</span><br><span class=\"line\">date: 2018-10-17 18:40:57</span><br><span class=\"line\">type: &quot;tags&quot;</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"在文章上加入-tags\"><a href=\"#在文章上加入-tags\" class=\"headerlink\" title=\"在文章上加入 tags\"></a>在文章上加入 tags</h4><p><img src=\"https://i.imgur.com/vCQUMWW.png\" alt></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 使用 Hexo 建立 Github Blog</span><br><span class=\"line\">date: 2018-10-17 17:23:06</span><br><span class=\"line\">tags:</span><br><span class=\"line\">- Hexo</span><br><span class=\"line\">categories:</span><br><span class=\"line\">- 學習</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"搜尋功能\"><a href=\"#搜尋功能\" class=\"headerlink\" title=\"搜尋功能\"></a>搜尋功能</h3><h4 id=\"安裝-hexo-generator-search\"><a href=\"#安裝-hexo-generator-search\" class=\"headerlink\" title=\"安裝 hexo-generator-search\"></a>安裝 hexo-generator-search</h4><p><a href=\"https://www.npmjs.com/package/hexo-generator-search\" target=\"_blank\" rel=\"noopener\">hexo-generator-search</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"在-config-yml-找到-local-search-將-enable-設定為true\"><a href=\"#在-config-yml-找到-local-search-將-enable-設定為true\" class=\"headerlink\" title=\"在_config.yml 找到 local_search 將 enable 設定為true\"></a>在_config.yml 找到 local_search 將 enable 設定為true</h4><p><img src=\"https://i.imgur.com/pdUPxJC.png\" alt></p>\n<p><img src=\"https://i.imgur.com/sid0Bvr.png\" alt></p>\n<p><img src=\"https://i.imgur.com/oawpKOu.png\" alt></p>\n<h2 id=\"參考網址\"><a href=\"#參考網址\" class=\"headerlink\" title=\"參考網址\"></a>參考網址</h2><p>Hexo 官方網站 : <a href=\"https://hexo.io/zh-tw/\" target=\"_blank\" rel=\"noopener\">https://hexo.io/zh-tw/</a><br>Hexo 文件 :<a href=\"https://hexo.io/zh-tw/api/\" target=\"_blank\" rel=\"noopener\">https://hexo.io/zh-tw/api/</a><br>Hexo Them :<a href=\"https://hexo.io/themes/index.html\" target=\"_blank\" rel=\"noopener\">https://hexo.io/themes/index.html</a><br><a href=\"https://linlif.github.io/2017/05/27/Hexo%E4%BD%BF%E7%94%A8%E6%94%BB%E7%95%A5-%E6%B7%BB%E5%8A%A0%E5%88%86%E7%B1%BB%E5%8F%8A%E6%A0%87%E7%AD%BE/\" target=\"_blank\" rel=\"noopener\">Hexo使用攻略-添加分类及标签</a><br><a href=\"https://oawan.me/2016/easy-hexo-easy-blog/\" target=\"_blank\" rel=\"noopener\">[Hexo] 快速上手 Hexo 網誌框架</a><br><a href=\"http://www.lovebxm.com/2018/06/24/hexo-github-blog/\" target=\"_blank\" rel=\"noopener\">可能是最詳細的 Hexo + GitHub Pages 搭建部落格的教程</a><br><a href=\"https://yogapan.github.io/2017/08/11/%E7%94%A8Hexo-Github-Pages%E6%90%AD%E5%BB%BA%E5%80%8B%E4%BA%BA%E9%83%A8%E8%90%BD%E6%A0%BC/#comments\" target=\"_blank\" rel=\"noopener\">用Hexo + Github Pages搭建個人部落格</a><br><a href=\"http://www.jeyzhang.com/hexo-next-add-post-views.html\" target=\"_blank\" rel=\"noopener\">Hexo的NexT主题个性化：添加文章阅读量</a><br><a href=\"https://github.com/theme-next/hexo-theme-next/blob/master/docs/LEANCLOUD-COUNTER-SECURITY.md\" target=\"_blank\" rel=\"noopener\">Sign up to Leancloud and create an app</a></p>\n"},{"title":"升級 Jenkins ver. 2.151 發生問題","date":"2018-11-20T08:49:02.000Z","_content":"## 升級 Jenkins ver. 2.151 發生問題\n\norg.apache.commons.jelly.JellyTagException:jar:file:/D:/Jenkins/war/WEB-INF/lib/jenkins-core-2.151.jar!/lib/layout/hasPermission.jelly:35:20: <d:invokeBody> com/trilead/ssh2/crypto/Base64\n\n![升級](https://i.imgur.com/1H5x5TZ.png)\n\n## issue\n\n<https://issues.jenkins-ci.org/browse/JENKINS-54708>\n<https://issues.jenkins-ci.org/browse/JENKINS-54686?focusedCommentId=354378&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-354378>\n\n### 問題是發生SSH Slaves版本(1.29.0)不相容，所以降版至(1.28.1)就可以了\n\n>因為jenkins掛掉了，所以要手動更新\n\n### 先找到要下載的pluin [ssh-slaves.hpi](http://updates.jenkins-ci.org/download/plugins/)\n\n![下載](https://i.imgur.com/MN9ATxE.png)\n![下載](https://i.imgur.com/7DDIV6T.png)\n\n### 下載 [jenkins-cli.jar](https://wiki.jenkins.io/display/JENKINS/Jenkins+CLI)\n\n```bash\nhttps://你的jenkins網址/jnlpJars/jenkins-cli.jar\n```\n\n### 使用 [jenkins-cli.jar 手動安裝](https://jenkins.io/doc/book/managing/plugins/#install-with-cli)\n\n```bash\njava -jar jenkins-cli.jar -s http://127.0.0.1 install-plugin http://updates.jenkins-ci.org/download/plugins/ssh-slaves/1.28.1/ssh-slaves.hpi -restart\n```\n\n![手動安裝](https://i.imgur.com/UZkX9KM.png)\n\n> 如果有權限不足，先調整權限，之後再刪除 [config.xml](https://blog.csdn.net/myNameIssls/article/details/70227838)\n\n![權限不足](https://i.imgur.com/k9IF6yL.png)\n\n```bash\n<permission>hudson.model.Hudson.Administer:anonymous</permission>\n<permission>hudson.model.Hudson.ConfigureUpdateCenter:anonymous</permission>\n<permission>hudson.model.Hudson.Read:anonymous</permission>\n<permission>hudson.model.Hudson.RunScripts:anonymous</permission>\n<permission>hudson.model.Hudson.UploadPlugins:anonymous</permission>\n```\n\n### 重新啟動 jenkins 就可以了\n\n![重新啟動](https://i.imgur.com/WSE6PIE.png)\n","source":"_posts/升級-Jenkins-ver-2-151-發生問題.md","raw":"---\ntitle: '升級 Jenkins ver. 2.151 發生問題'\ndate: 2018-11-20 16:49:02\ncategories: \n- Jenkins\ntags: \n- Jenkins\n---\n## 升級 Jenkins ver. 2.151 發生問題\n\norg.apache.commons.jelly.JellyTagException:jar:file:/D:/Jenkins/war/WEB-INF/lib/jenkins-core-2.151.jar!/lib/layout/hasPermission.jelly:35:20: <d:invokeBody> com/trilead/ssh2/crypto/Base64\n\n![升級](https://i.imgur.com/1H5x5TZ.png)\n\n## issue\n\n<https://issues.jenkins-ci.org/browse/JENKINS-54708>\n<https://issues.jenkins-ci.org/browse/JENKINS-54686?focusedCommentId=354378&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-354378>\n\n### 問題是發生SSH Slaves版本(1.29.0)不相容，所以降版至(1.28.1)就可以了\n\n>因為jenkins掛掉了，所以要手動更新\n\n### 先找到要下載的pluin [ssh-slaves.hpi](http://updates.jenkins-ci.org/download/plugins/)\n\n![下載](https://i.imgur.com/MN9ATxE.png)\n![下載](https://i.imgur.com/7DDIV6T.png)\n\n### 下載 [jenkins-cli.jar](https://wiki.jenkins.io/display/JENKINS/Jenkins+CLI)\n\n```bash\nhttps://你的jenkins網址/jnlpJars/jenkins-cli.jar\n```\n\n### 使用 [jenkins-cli.jar 手動安裝](https://jenkins.io/doc/book/managing/plugins/#install-with-cli)\n\n```bash\njava -jar jenkins-cli.jar -s http://127.0.0.1 install-plugin http://updates.jenkins-ci.org/download/plugins/ssh-slaves/1.28.1/ssh-slaves.hpi -restart\n```\n\n![手動安裝](https://i.imgur.com/UZkX9KM.png)\n\n> 如果有權限不足，先調整權限，之後再刪除 [config.xml](https://blog.csdn.net/myNameIssls/article/details/70227838)\n\n![權限不足](https://i.imgur.com/k9IF6yL.png)\n\n```bash\n<permission>hudson.model.Hudson.Administer:anonymous</permission>\n<permission>hudson.model.Hudson.ConfigureUpdateCenter:anonymous</permission>\n<permission>hudson.model.Hudson.Read:anonymous</permission>\n<permission>hudson.model.Hudson.RunScripts:anonymous</permission>\n<permission>hudson.model.Hudson.UploadPlugins:anonymous</permission>\n```\n\n### 重新啟動 jenkins 就可以了\n\n![重新啟動](https://i.imgur.com/WSE6PIE.png)\n","slug":"升級-Jenkins-ver-2-151-發生問題","published":1,"updated":"2019-06-05T07:12:23.104Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjx077xvw005o1q22oj1y1wh3","content":"<h2 id=\"升級-Jenkins-ver-2-151-發生問題\"><a href=\"#升級-Jenkins-ver-2-151-發生問題\" class=\"headerlink\" title=\"升級 Jenkins ver. 2.151 發生問題\"></a>升級 Jenkins ver. 2.151 發生問題</h2><p>org.apache.commons.jelly.JellyTagException:jar:file:/D:/Jenkins/war/WEB-INF/lib/jenkins-core-2.151.jar!/lib/layout/hasPermission.jelly:35:20: &lt;d:invokeBody&gt; com/trilead/ssh2/crypto/Base64</p>\n<p><img src=\"https://i.imgur.com/1H5x5TZ.png\" alt=\"升級\"></p>\n<h2 id=\"issue\"><a href=\"#issue\" class=\"headerlink\" title=\"issue\"></a>issue</h2><p><a href=\"https://issues.jenkins-ci.org/browse/JENKINS-54708\" target=\"_blank\" rel=\"noopener\">https://issues.jenkins-ci.org/browse/JENKINS-54708</a><br><a href=\"https://issues.jenkins-ci.org/browse/JENKINS-54686?focusedCommentId=354378&amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-354378\" target=\"_blank\" rel=\"noopener\">https://issues.jenkins-ci.org/browse/JENKINS-54686?focusedCommentId=354378&amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-354378</a></p>\n<h3 id=\"問題是發生SSH-Slaves版本-1-29-0-不相容，所以降版至-1-28-1-就可以了\"><a href=\"#問題是發生SSH-Slaves版本-1-29-0-不相容，所以降版至-1-28-1-就可以了\" class=\"headerlink\" title=\"問題是發生SSH Slaves版本(1.29.0)不相容，所以降版至(1.28.1)就可以了\"></a>問題是發生SSH Slaves版本(1.29.0)不相容，所以降版至(1.28.1)就可以了</h3><blockquote>\n<p>因為jenkins掛掉了，所以要手動更新</p>\n</blockquote>\n<h3 id=\"先找到要下載的pluin-ssh-slaves-hpi\"><a href=\"#先找到要下載的pluin-ssh-slaves-hpi\" class=\"headerlink\" title=\"先找到要下載的pluin ssh-slaves.hpi\"></a>先找到要下載的pluin <a href=\"http://updates.jenkins-ci.org/download/plugins/\" target=\"_blank\" rel=\"noopener\">ssh-slaves.hpi</a></h3><p><img src=\"https://i.imgur.com/MN9ATxE.png\" alt=\"下載\"><br><img src=\"https://i.imgur.com/7DDIV6T.png\" alt=\"下載\"></p>\n<h3 id=\"下載-jenkins-cli-jar\"><a href=\"#下載-jenkins-cli-jar\" class=\"headerlink\" title=\"下載 jenkins-cli.jar\"></a>下載 <a href=\"https://wiki.jenkins.io/display/JENKINS/Jenkins+CLI\" target=\"_blank\" rel=\"noopener\">jenkins-cli.jar</a></h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://你的jenkins網址/jnlpJars/jenkins-cli.jar</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用-jenkins-cli-jar-手動安裝\"><a href=\"#使用-jenkins-cli-jar-手動安裝\" class=\"headerlink\" title=\"使用 jenkins-cli.jar 手動安裝\"></a>使用 <a href=\"https://jenkins.io/doc/book/managing/plugins/#install-with-cli\" target=\"_blank\" rel=\"noopener\">jenkins-cli.jar 手動安裝</a></h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -jar jenkins-cli.jar -s http://127.0.0.1 install-plugin http://updates.jenkins-ci.org/download/plugins/ssh-slaves/1.28.1/ssh-slaves.hpi -restart</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/UZkX9KM.png\" alt=\"手動安裝\"></p>\n<blockquote>\n<p>如果有權限不足，先調整權限，之後再刪除 <a href=\"https://blog.csdn.net/myNameIssls/article/details/70227838\" target=\"_blank\" rel=\"noopener\">config.xml</a></p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/k9IF6yL.png\" alt=\"權限不足\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;permission&gt;hudson.model.Hudson.Administer:anonymous&lt;/permission&gt;</span><br><span class=\"line\">&lt;permission&gt;hudson.model.Hudson.ConfigureUpdateCenter:anonymous&lt;/permission&gt;</span><br><span class=\"line\">&lt;permission&gt;hudson.model.Hudson.Read:anonymous&lt;/permission&gt;</span><br><span class=\"line\">&lt;permission&gt;hudson.model.Hudson.RunScripts:anonymous&lt;/permission&gt;</span><br><span class=\"line\">&lt;permission&gt;hudson.model.Hudson.UploadPlugins:anonymous&lt;/permission&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"重新啟動-jenkins-就可以了\"><a href=\"#重新啟動-jenkins-就可以了\" class=\"headerlink\" title=\"重新啟動 jenkins 就可以了\"></a>重新啟動 jenkins 就可以了</h3><p><img src=\"https://i.imgur.com/WSE6PIE.png\" alt=\"重新啟動\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"升級-Jenkins-ver-2-151-發生問題\"><a href=\"#升級-Jenkins-ver-2-151-發生問題\" class=\"headerlink\" title=\"升級 Jenkins ver. 2.151 發生問題\"></a>升級 Jenkins ver. 2.151 發生問題</h2><p>org.apache.commons.jelly.JellyTagException:jar:file:/D:/Jenkins/war/WEB-INF/lib/jenkins-core-2.151.jar!/lib/layout/hasPermission.jelly:35:20: &lt;d:invokeBody&gt; com/trilead/ssh2/crypto/Base64</p>\n<p><img src=\"https://i.imgur.com/1H5x5TZ.png\" alt=\"升級\"></p>\n<h2 id=\"issue\"><a href=\"#issue\" class=\"headerlink\" title=\"issue\"></a>issue</h2><p><a href=\"https://issues.jenkins-ci.org/browse/JENKINS-54708\" target=\"_blank\" rel=\"noopener\">https://issues.jenkins-ci.org/browse/JENKINS-54708</a><br><a href=\"https://issues.jenkins-ci.org/browse/JENKINS-54686?focusedCommentId=354378&amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-354378\" target=\"_blank\" rel=\"noopener\">https://issues.jenkins-ci.org/browse/JENKINS-54686?focusedCommentId=354378&amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-354378</a></p>\n<h3 id=\"問題是發生SSH-Slaves版本-1-29-0-不相容，所以降版至-1-28-1-就可以了\"><a href=\"#問題是發生SSH-Slaves版本-1-29-0-不相容，所以降版至-1-28-1-就可以了\" class=\"headerlink\" title=\"問題是發生SSH Slaves版本(1.29.0)不相容，所以降版至(1.28.1)就可以了\"></a>問題是發生SSH Slaves版本(1.29.0)不相容，所以降版至(1.28.1)就可以了</h3><blockquote>\n<p>因為jenkins掛掉了，所以要手動更新</p>\n</blockquote>\n<h3 id=\"先找到要下載的pluin-ssh-slaves-hpi\"><a href=\"#先找到要下載的pluin-ssh-slaves-hpi\" class=\"headerlink\" title=\"先找到要下載的pluin ssh-slaves.hpi\"></a>先找到要下載的pluin <a href=\"http://updates.jenkins-ci.org/download/plugins/\" target=\"_blank\" rel=\"noopener\">ssh-slaves.hpi</a></h3><p><img src=\"https://i.imgur.com/MN9ATxE.png\" alt=\"下載\"><br><img src=\"https://i.imgur.com/7DDIV6T.png\" alt=\"下載\"></p>\n<h3 id=\"下載-jenkins-cli-jar\"><a href=\"#下載-jenkins-cli-jar\" class=\"headerlink\" title=\"下載 jenkins-cli.jar\"></a>下載 <a href=\"https://wiki.jenkins.io/display/JENKINS/Jenkins+CLI\" target=\"_blank\" rel=\"noopener\">jenkins-cli.jar</a></h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://你的jenkins網址/jnlpJars/jenkins-cli.jar</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用-jenkins-cli-jar-手動安裝\"><a href=\"#使用-jenkins-cli-jar-手動安裝\" class=\"headerlink\" title=\"使用 jenkins-cli.jar 手動安裝\"></a>使用 <a href=\"https://jenkins.io/doc/book/managing/plugins/#install-with-cli\" target=\"_blank\" rel=\"noopener\">jenkins-cli.jar 手動安裝</a></h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -jar jenkins-cli.jar -s http://127.0.0.1 install-plugin http://updates.jenkins-ci.org/download/plugins/ssh-slaves/1.28.1/ssh-slaves.hpi -restart</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://i.imgur.com/UZkX9KM.png\" alt=\"手動安裝\"></p>\n<blockquote>\n<p>如果有權限不足，先調整權限，之後再刪除 <a href=\"https://blog.csdn.net/myNameIssls/article/details/70227838\" target=\"_blank\" rel=\"noopener\">config.xml</a></p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/k9IF6yL.png\" alt=\"權限不足\"></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;permission&gt;hudson.model.Hudson.Administer:anonymous&lt;/permission&gt;</span><br><span class=\"line\">&lt;permission&gt;hudson.model.Hudson.ConfigureUpdateCenter:anonymous&lt;/permission&gt;</span><br><span class=\"line\">&lt;permission&gt;hudson.model.Hudson.Read:anonymous&lt;/permission&gt;</span><br><span class=\"line\">&lt;permission&gt;hudson.model.Hudson.RunScripts:anonymous&lt;/permission&gt;</span><br><span class=\"line\">&lt;permission&gt;hudson.model.Hudson.UploadPlugins:anonymous&lt;/permission&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"重新啟動-jenkins-就可以了\"><a href=\"#重新啟動-jenkins-就可以了\" class=\"headerlink\" title=\"重新啟動 jenkins 就可以了\"></a>重新啟動 jenkins 就可以了</h3><p><img src=\"https://i.imgur.com/WSE6PIE.png\" alt=\"重新啟動\"></p>\n"}],"PostAsset":[{"_id":"source/_posts/Json-Web-Token/2019-06-17-16-40-23.png","slug":"2019-06-17-16-40-23.png","post":"cjx077xun00281q229l9f6m9f","modified":0,"renderable":0},{"_id":"source/_posts/Sequelize-sequelize-auto/2019-06-14-15-43-05.png","slug":"2019-06-14-15-43-05.png","post":"cjx077xv7003v1q22jscr852h","modified":0,"renderable":0},{"_id":"source/_posts/Sequelize-sequelize-auto/2019-06-14-15-43-19.png","slug":"2019-06-14-15-43-19.png","post":"cjx077xv7003v1q22jscr852h","modified":0,"renderable":0},{"_id":"source/_posts/Sequelize-sequelize-auto/2019-06-14-15-46-33.png","slug":"2019-06-14-15-46-33.png","post":"cjx077xv7003v1q22jscr852h","modified":0,"renderable":0},{"_id":"source/_posts/Google-OAuth/2019-06-05-16-37-30.png","slug":"2019-06-05-16-37-30.png","post":"cjx077xuf001m1q229e38f0nf","modified":0,"renderable":0},{"_id":"source/_posts/Google-OAuth/2019-06-05-16-41-51.png","slug":"2019-06-05-16-41-51.png","post":"cjx077xuf001m1q229e38f0nf","modified":0,"renderable":0},{"_id":"source/_posts/Google-OAuth/2019-06-05-16-43-42.png","slug":"2019-06-05-16-43-42.png","post":"cjx077xuf001m1q229e38f0nf","modified":0,"renderable":0},{"_id":"source/_posts/Google-OAuth/2019-06-05-16-53-17.png","slug":"2019-06-05-16-53-17.png","post":"cjx077xuf001m1q229e38f0nf","modified":0,"renderable":0},{"_id":"source/_posts/Google-OAuth/2019-06-05-16-58-18.png","slug":"2019-06-05-16-58-18.png","post":"cjx077xuf001m1q229e38f0nf","modified":0,"renderable":0},{"_id":"source/_posts/Google-OAuth/2019-06-05-17-04-27.png","slug":"2019-06-05-17-04-27.png","post":"cjx077xuf001m1q229e38f0nf","modified":0,"renderable":0},{"_id":"source/_posts/Google-OAuth/2019-06-05-17-08-51.png","slug":"2019-06-05-17-08-51.png","post":"cjx077xuf001m1q229e38f0nf","modified":0,"renderable":0},{"_id":"source/_posts/Google-OAuth/2019-06-05-17-10-13.png","slug":"2019-06-05-17-10-13.png","post":"cjx077xuf001m1q229e38f0nf","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cjx077xte00001q22o3vkw667","category_id":"cjx077xtl00021q22gc8yghdm","_id":"cjx077xts000b1q229h3dfj22"},{"post_id":"cjx077xti00011q22emjd2spm","category_id":"cjx077xtq00071q22fzfa630w","_id":"cjx077xtw000i1q22ktrb54tr"},{"post_id":"cjx077xtm00041q224youqsvf","category_id":"cjx077xts000c1q22gkotfnpd","_id":"cjx077xu0000n1q227xdo3zpf"},{"post_id":"cjx077xtp00061q22hocv8z5i","category_id":"cjx077xtw000j1q22wiiyzbw8","_id":"cjx077xu3000u1q22rx7tq2hf"},{"post_id":"cjx077xtr00091q22lgufzdpn","category_id":"cjx077xu0000o1q22m8urlj6x","_id":"cjx077xu700101q22z8xusy1o"},{"post_id":"cjx077xts000a1q22roko7501","category_id":"cjx077xu4000w1q22x8c4ilzv","_id":"cjx077xua00151q22glew120h"},{"post_id":"cjx077xtt000e1q22pa4fj5qn","category_id":"cjx077xu700121q22zjt4r7ps","_id":"cjx077xud001d1q22z0dqbi33"},{"post_id":"cjx077xtu000g1q222p0zyd73","category_id":"cjx077xtw000j1q22wiiyzbw8","_id":"cjx077xue001j1q22ainx2sri"},{"post_id":"cjx077xtw000l1q22w314l2ww","category_id":"cjx077xuc001c1q22imoa7433","_id":"cjx077xug001o1q220klqfya2"},{"post_id":"cjx077xty000m1q22ovfdsnng","category_id":"cjx077xuf001k1q22ti3pivio","_id":"cjx077xuk001w1q22pn1oxo00"},{"post_id":"cjx077xug001p1q2254qegxmj","category_id":"cjx077xts000c1q22gkotfnpd","_id":"cjx077xul00211q22g18m2cgw"},{"post_id":"cjx077xui001t1q22ch4fm8ri","category_id":"cjx077xu0000o1q22m8urlj6x","_id":"cjx077xum00241q2257pwvfdo"},{"post_id":"cjx077xu1000q1q221buu0u9r","category_id":"cjx077xuh001q1q22a50ktupo","_id":"cjx077xuo00291q22ve0z0hjb"},{"post_id":"cjx077xuj001v1q22x57cyscx","category_id":"cjx077xu0000o1q22m8urlj6x","_id":"cjx077xup002c1q220id6i7bg"},{"post_id":"cjx077xul00201q22cw2itozv","category_id":"cjx077xu0000o1q22m8urlj6x","_id":"cjx077xuq002h1q22i9u0u72n"},{"post_id":"cjx077xu2000s1q22ox4ayql8","category_id":"cjx077xuk001x1q225xnl65qm","_id":"cjx077xur002k1q22cf044h1h"},{"post_id":"cjx077xum00231q22el5je8lj","category_id":"cjx077xu0000o1q22m8urlj6x","_id":"cjx077xus002o1q22vrfz9gom"},{"post_id":"cjx077xu3000v1q229wju5rle","category_id":"cjx077xun00261q22sn9hx9jg","_id":"cjx077xut002q1q226p2ljq3y"},{"post_id":"cjx077xu6000y1q22y7i3ik5w","category_id":"cjx077xuq002e1q22c6iws9mr","_id":"cjx077xuv002t1q22rkbik7yg"},{"post_id":"cjx077xu6000z1q22vw7kf7v9","category_id":"cjx077xus002n1q229ke3v6d9","_id":"cjx077xux002y1q22zgkdk9n4"},{"post_id":"cjx077xu800131q22cv1knkok","category_id":"cjx077xuv002u1q22lehbxjpl","_id":"cjx077xuz00351q22dgvbjjbu"},{"post_id":"cjx077xu900141q22rl4jtc2z","category_id":"cjx077xuy002z1q22kj9dth3o","_id":"cjx077xv1003c1q221314sukl"},{"post_id":"cjx077xua00181q22hfhietic","category_id":"cjx077xuz00361q22m2dvwfir","_id":"cjx077xv4003l1q22savdgv19"},{"post_id":"cjx077xub001a1q2243d7qhwb","category_id":"cjx077xv2003f1q22529egf1d","_id":"cjx077xv6003s1q229flnjjya"},{"post_id":"cjx077xud001f1q22cidj6n9h","category_id":"cjx077xv5003m1q22o4q57nw4","_id":"cjx077xv8003z1q228xm6m4dj"},{"post_id":"cjx077xue001h1q227a6icgkc","category_id":"cjx077xv5003m1q22o4q57nw4","_id":"cjx077xva00431q22uppd2am7"},{"post_id":"cjx077xuf001m1q229e38f0nf","category_id":"cjx077xv8003y1q22glx65nve","_id":"cjx077xvd00481q22yjk5nm3a"},{"post_id":"cjx077xug001n1q2245dugo3e","category_id":"cjx077xva00441q22c0k0eim0","_id":"cjx077xvg004e1q22p4yvv3zi"},{"post_id":"cjx077xun00281q229l9f6m9f","category_id":"cjx077xve004a1q22i8bn9oj8","_id":"cjx077xvi004k1q221dbd8f8x"},{"post_id":"cjx077xuo002b1q226v1sw7a1","category_id":"cjx077xvh004f1q22ojh3c1mm","_id":"cjx077xvm004r1q22bk5e3qu9"},{"post_id":"cjx077xuq002g1q22h1ikfxjb","category_id":"cjx077xvi004l1q22yild5r0o","_id":"cjx077xvn004y1q22ynsbbshg"},{"post_id":"cjx077xur002j1q22aymjic4a","category_id":"cjx077xvm004s1q22og7sp71i","_id":"cjx077xvq00561q223q454vnz"},{"post_id":"cjx077xvn00501q228obc8cre","category_id":"cjx077xuc001c1q22imoa7433","_id":"cjx077xvr005b1q22g8k0vj73"},{"post_id":"cjx077xus002m1q22pm6tgqqm","category_id":"cjx077xvo00511q22xodx2tih","_id":"cjx077xvs005e1q224b8tiwg8"},{"post_id":"cjx077xut002p1q227hx5yf5u","category_id":"cjx077xvr00571q223gow7jvv","_id":"cjx077xvw005m1q225lbhxjm1"},{"post_id":"cjx077xuu002s1q22i79du3cv","category_id":"cjx077xvr00571q223gow7jvv","_id":"cjx077xvx005r1q22ju886sxz"},{"post_id":"cjx077xvw005o1q22oj1y1wh3","category_id":"cjx077xu0000o1q22m8urlj6x","_id":"cjx077xvy005u1q22wj1jesgx"},{"post_id":"cjx077xuw002v1q22yb1gm738","category_id":"cjx077xvr00571q223gow7jvv","_id":"cjx077xvy005w1q22uwpj435q"},{"post_id":"cjx077xuw002w1q22urfjaxkq","category_id":"cjx077xve004a1q22i8bn9oj8","_id":"cjx077xvy005z1q22wpexkchl"},{"post_id":"cjx077xuy00311q2255ikwus8","category_id":"cjx077xvy005v1q22a0eeipbl","_id":"cjx077xvz00641q22wd0q6a1p"},{"post_id":"cjx077xuz00381q22ed3j7idz","category_id":"cjx077xvy00601q226scyexoo","_id":"cjx077xw000671q22wvqg71lk"},{"post_id":"cjx077xv0003a1q22ugpdfwj7","category_id":"cjx077xvz00651q225p80jjzb","_id":"cjx077xw0006a1q22hmkwetco"},{"post_id":"cjx077xv1003e1q22sadvsep1","category_id":"cjx077xw000681q22n6025fw3","_id":"cjx077xw1006f1q22vo2x11er"},{"post_id":"cjx077xv2003h1q22skpu0fkb","category_id":"cjx077xw000681q22n6025fw3","_id":"cjx077xw1006j1q22ll3zdvsl"},{"post_id":"cjx077xv4003k1q22ntxuri48","category_id":"cjx077xw1006e1q22130jvwj3","_id":"cjx077xw2006o1q2299gp0nqt"},{"post_id":"cjx077xv5003o1q22adt15k7h","category_id":"cjx077xw1006k1q22srai9hys","_id":"cjx077xw3006s1q22aio7q880"},{"post_id":"cjx077xv6003r1q22nsekojhr","category_id":"cjx077xw2006p1q22gq8v4ne6","_id":"cjx077xw6006w1q22bifvc962"},{"post_id":"cjx077xv7003v1q22jscr852h","category_id":"cjx077xw3006t1q22aetiggea","_id":"cjx077xw600701q22tvocumki"},{"post_id":"cjx077xv8003x1q22y8qe6iwl","category_id":"cjx077xw6006x1q22vvnv8wzx","_id":"cjx077xw600741q221mtioq9p"},{"post_id":"cjx077xv900401q22h8eknr5x","category_id":"cjx077xw600711q22pabtdym1","_id":"cjx077xw700781q22j71tkluh"},{"post_id":"cjx077xv900421q22pe7d19z4","category_id":"cjx077xw700751q2273l20k3g","_id":"cjx077xw7007d1q22igx1xvs1"},{"post_id":"cjx077xvb00451q22uqa9upli","category_id":"cjx077xw600711q22pabtdym1","_id":"cjx077xw8007g1q22f2xuse0h"},{"post_id":"cjx077xvc00471q227jj7v6cf","category_id":"cjx077xw600711q22pabtdym1","_id":"cjx077xw9007j1q22fa3pm72b"},{"post_id":"cjx077xve00491q22xwsku6kz","category_id":"cjx077xw600711q22pabtdym1","_id":"cjx077xw9007n1q2275dqo424"},{"post_id":"cjx077xvf004c1q22khjqunwz","category_id":"cjx077xw600711q22pabtdym1","_id":"cjx077xwa007s1q22y7bwzqtj"},{"post_id":"cjx077xvg004d1q22xo0bjzg7","category_id":"cjx077xw600711q22pabtdym1","_id":"cjx077xwa007w1q22i6um6nyv"},{"post_id":"cjx077xvh004g1q22st78k597","category_id":"cjx077xwa007r1q22s7ju5st9","_id":"cjx077xwb00821q22ikaz15e2"},{"post_id":"cjx077xvi004j1q22labr06ia","category_id":"cjx077xw600711q22pabtdym1","_id":"cjx077xwb00851q22g10ovg7o"},{"post_id":"cjx077xvj004n1q22d1j078w2","category_id":"cjx077xwb00811q22c97qrrbg","_id":"cjx077xwb00881q228br83rnd"},{"post_id":"cjx077xvk004q1q22ia88hxd3","category_id":"cjx077xwb00861q22iz3f12g0","_id":"cjx077xwc008b1q22usjjz5nx"},{"post_id":"cjx077xvm004u1q22zmd8x79a","category_id":"cjx077xwb00891q22xv4jgnib","_id":"cjx077xwc008f1q22g0wf76xp"},{"post_id":"cjx077xvn004x1q22rxjic1jx","category_id":"cjx077xwc008c1q22ssc4cmni","_id":"cjx077xwc008k1q22deu6v1a9"},{"post_id":"cjx077xvo00531q22en2xb3ld","category_id":"cjx077xwc008g1q22k5u8mvsz","_id":"cjx077xwd008p1q22z8kvxtf4"},{"post_id":"cjx077xvq00551q22na552y5m","category_id":"cjx077xwd008l1q22j3jc0iaf","_id":"cjx077xwe008v1q22bdhk8ymt"},{"post_id":"cjx077xvr005a1q22fatuk7cr","category_id":"cjx077xwd008l1q22j3jc0iaf","_id":"cjx077xwe008z1q22swihhprk"},{"post_id":"cjx077xvs005d1q22rvjgulun","category_id":"cjx077xwe008u1q22q9rdo81j","_id":"cjx077xwf00941q22n16vx9ri"},{"post_id":"cjx077xvt005h1q22kf6lon20","category_id":"cjx077xwe00901q22j9jl3b8i","_id":"cjx077xwf00991q22qf5r9j64"},{"post_id":"cjx077xvu005k1q22tmxqf7lj","category_id":"cjx077xwf00951q220827bj17","_id":"cjx077xwf009b1q22bqxilow5"}],"PostTag":[{"post_id":"cjx077xte00001q22o3vkw667","tag_id":"cjx077xtm00031q22699m4jt4","_id":"cjx077xtu000f1q22eic1szlg"},{"post_id":"cjx077xte00001q22o3vkw667","tag_id":"cjx077xtq00081q225slg0119","_id":"cjx077xtw000h1q22vfr85zzn"},{"post_id":"cjx077xti00011q22emjd2spm","tag_id":"cjx077xtt000d1q22ei8w2bnj","_id":"cjx077xu2000r1q22ovw5ax3r"},{"post_id":"cjx077xti00011q22emjd2spm","tag_id":"cjx077xtw000k1q228x22j38z","_id":"cjx077xu3000t1q22kftb39v4"},{"post_id":"cjx077xtm00041q224youqsvf","tag_id":"cjx077xu1000p1q22ewdj0xen","_id":"cjx077xub00191q22guknj2vi"},{"post_id":"cjx077xtm00041q224youqsvf","tag_id":"cjx077xtq00081q225slg0119","_id":"cjx077xuc001b1q22yt8na3eh"},{"post_id":"cjx077xtm00041q224youqsvf","tag_id":"cjx077xu700111q222n8q2num","_id":"cjx077xud001g1q22g8sdzsgs"},{"post_id":"cjx077xtn00051q22ejv7zug0","tag_id":"cjx077xua00161q22mvj0328v","_id":"cjx077xue001i1q22gl5qhs5p"},{"post_id":"cjx077xtp00061q22hocv8z5i","tag_id":"cjx077xud001e1q223wrd1a2r","_id":"cjx077xui001s1q22cihls60h"},{"post_id":"cjx077xtp00061q22hocv8z5i","tag_id":"cjx077xuf001l1q22pw3zvlio","_id":"cjx077xuj001u1q22d5xbr5l4"},{"post_id":"cjx077xug001p1q2254qegxmj","tag_id":"cjx077xu1000p1q22ewdj0xen","_id":"cjx077xul001z1q22i8mvykwg"},{"post_id":"cjx077xug001p1q2254qegxmj","tag_id":"cjx077xtq00081q225slg0119","_id":"cjx077xum00221q22onzozhvu"},{"post_id":"cjx077xug001p1q2254qegxmj","tag_id":"cjx077xu700111q222n8q2num","_id":"cjx077xun00271q22ee61mdew"},{"post_id":"cjx077xui001t1q22ch4fm8ri","tag_id":"cjx077xuh001r1q22h7jqk2yo","_id":"cjx077xuo002a1q22nzplqc2o"},{"post_id":"cjx077xtr00091q22lgufzdpn","tag_id":"cjx077xuh001r1q22h7jqk2yo","_id":"cjx077xuq002f1q22zzzbhkm7"},{"post_id":"cjx077xtr00091q22lgufzdpn","tag_id":"cjx077xud001e1q223wrd1a2r","_id":"cjx077xur002i1q227e7qablt"},{"post_id":"cjx077xts000a1q22roko7501","tag_id":"cjx077xud001e1q223wrd1a2r","_id":"cjx077xuy00301q225py9hj53"},{"post_id":"cjx077xts000a1q22roko7501","tag_id":"cjx077xup002d1q22lu670ftv","_id":"cjx077xuy00321q22dn2kj6ia"},{"post_id":"cjx077xts000a1q22roko7501","tag_id":"cjx077xur002l1q22veqkoqlh","_id":"cjx077xuz00371q22ff7wmoeb"},{"post_id":"cjx077xts000a1q22roko7501","tag_id":"cjx077xuu002r1q22csl68ixl","_id":"cjx077xv000391q2205btntj7"},{"post_id":"cjx077xuz00381q22ed3j7idz","tag_id":"cjx077xtw000k1q228x22j38z","_id":"cjx077xv1003d1q22r5yf7ctx"},{"post_id":"cjx077xuz00381q22ed3j7idz","tag_id":"cjx077xud001e1q223wrd1a2r","_id":"cjx077xv2003g1q224g0kb4y1"},{"post_id":"cjx077xtt000e1q22pa4fj5qn","tag_id":"cjx077xud001e1q223wrd1a2r","_id":"cjx077xv4003j1q227e7wi43z"},{"post_id":"cjx077xtt000e1q22pa4fj5qn","tag_id":"cjx077xur002l1q22veqkoqlh","_id":"cjx077xv5003n1q22wzg8ru88"},{"post_id":"cjx077xtu000g1q222p0zyd73","tag_id":"cjx077xud001e1q223wrd1a2r","_id":"cjx077xv6003q1q22dg4mwrf5"},{"post_id":"cjx077xtu000g1q222p0zyd73","tag_id":"cjx077xuf001l1q22pw3zvlio","_id":"cjx077xv7003u1q22h2gbigfx"},{"post_id":"cjx077xtw000l1q22w314l2ww","tag_id":"cjx077xv5003p1q22akgg49vs","_id":"cjx077xvi004i1q22o68cbyno"},{"post_id":"cjx077xtw000l1q22w314l2ww","tag_id":"cjx077xud001e1q223wrd1a2r","_id":"cjx077xvj004m1q22h260axw8"},{"post_id":"cjx077xtw000l1q22w314l2ww","tag_id":"cjx077xv900411q22ctk4em86","_id":"cjx077xvk004p1q22qxbsr41f"},{"post_id":"cjx077xtw000l1q22w314l2ww","tag_id":"cjx077xvb00461q22ldjl9uvo","_id":"cjx077xvm004t1q22qs17q2o9"},{"post_id":"cjx077xtw000l1q22w314l2ww","tag_id":"cjx077xvf004b1q22humm9rxi","_id":"cjx077xvn004w1q22f9ua6zm7"},{"post_id":"cjx077xty000m1q22ovfdsnng","tag_id":"cjx077xud001e1q223wrd1a2r","_id":"cjx077xvn004z1q22tv01cpmb"},{"post_id":"cjx077xu1000q1q221buu0u9r","tag_id":"cjx077xvk004o1q22zzimr7bf","_id":"cjx077xvq00541q22ybcw8ak6"},{"post_id":"cjx077xu1000q1q221buu0u9r","tag_id":"cjx077xtw000k1q228x22j38z","_id":"cjx077xvr00581q22obqd29rt"},{"post_id":"cjx077xu1000q1q221buu0u9r","tag_id":"cjx077xvn004v1q220xqrff7o","_id":"cjx077xvs005c1q22hsjoa38q"},{"post_id":"cjx077xvn00501q228obc8cre","tag_id":"cjx077xv5003p1q22akgg49vs","_id":"cjx077xvs005f1q22iucmzy6l"},{"post_id":"cjx077xu2000s1q22ox4ayql8","tag_id":"cjx077xvo00521q22rzdu4ufh","_id":"cjx077xvu005j1q22l8zyuv4n"},{"post_id":"cjx077xu2000s1q22ox4ayql8","tag_id":"cjx077xvr00591q22spwlmvi7","_id":"cjx077xvw005n1q22k3aw8gr9"},{"post_id":"cjx077xvw005o1q22oj1y1wh3","tag_id":"cjx077xuh001r1q22h7jqk2yo","_id":"cjx077xvx005s1q223nbvtakh"},{"post_id":"cjx077xu3000v1q229wju5rle","tag_id":"cjx077xvt005i1q22op6wz6td","_id":"cjx077xvy005y1q222rem9w00"},{"post_id":"cjx077xu3000v1q229wju5rle","tag_id":"cjx077xvx005p1q225lsw2fiw","_id":"cjx077xvz00611q22qignkbx4"},{"post_id":"cjx077xu3000v1q229wju5rle","tag_id":"cjx077xud001e1q223wrd1a2r","_id":"cjx077xvz00631q22x2xhfz0y"},{"post_id":"cjx077xu6000y1q22y7i3ik5w","tag_id":"cjx077xvy005x1q2240ieb9lq","_id":"cjx077xw1006d1q22heodb6ew"},{"post_id":"cjx077xu6000y1q22y7i3ik5w","tag_id":"cjx077xvx005p1q225lsw2fiw","_id":"cjx077xw1006g1q221gdwrtn4"},{"post_id":"cjx077xu6000y1q22y7i3ik5w","tag_id":"cjx077xud001e1q223wrd1a2r","_id":"cjx077xw1006i1q22ix7idlkq"},{"post_id":"cjx077xu6000y1q22y7i3ik5w","tag_id":"cjx077xw000691q22xm94hc1s","_id":"cjx077xw1006l1q223tjmdshp"},{"post_id":"cjx077xu6000z1q22vw7kf7v9","tag_id":"cjx077xw1006c1q22vj8y6xd3","_id":"cjx077xw2006n1q22yy44j9oq"},{"post_id":"cjx077xu800131q22cv1knkok","tag_id":"cjx077xw1006h1q22p5ir7sa6","_id":"cjx077xw3006r1q22g4o2gg09"},{"post_id":"cjx077xu800131q22cv1knkok","tag_id":"cjx077xw1006m1q22g3dfemut","_id":"cjx077xw5006u1q22qsbydzoa"},{"post_id":"cjx077xu900141q22rl4jtc2z","tag_id":"cjx077xw2006q1q226wdemr1w","_id":"cjx077xw6006z1q22qnwf7fur"},{"post_id":"cjx077xu900141q22rl4jtc2z","tag_id":"cjx077xud001e1q223wrd1a2r","_id":"cjx077xw600721q22u24lgzve"},{"post_id":"cjx077xua00181q22hfhietic","tag_id":"cjx077xw6006y1q22zodg22lb","_id":"cjx077xw700771q22bs3iflbk"},{"post_id":"cjx077xua00181q22hfhietic","tag_id":"cjx077xuu002r1q22csl68ixl","_id":"cjx077xw700791q22siwev3bo"},{"post_id":"cjx077xub001a1q2243d7qhwb","tag_id":"cjx077xw700761q22iq9fbexr","_id":"cjx077xw9007l1q22chb4qkcl"},{"post_id":"cjx077xub001a1q2243d7qhwb","tag_id":"cjx077xw7007b1q2254xbgp8f","_id":"cjx077xw9007o1q22mmesaomm"},{"post_id":"cjx077xub001a1q2243d7qhwb","tag_id":"cjx077xw1006m1q22g3dfemut","_id":"cjx077xwa007q1q22ivm703eo"},{"post_id":"cjx077xub001a1q2243d7qhwb","tag_id":"cjx077xuh001r1q22h7jqk2yo","_id":"cjx077xwa007t1q22aaw5yckb"},{"post_id":"cjx077xud001f1q22cidj6n9h","tag_id":"cjx077xw9007k1q22oclknx0g","_id":"cjx077xwa007v1q22cj05wpa9"},{"post_id":"cjx077xud001f1q22cidj6n9h","tag_id":"cjx077xw9007p1q22pk51hlt5","_id":"cjx077xwa007y1q22gst7iki4"},{"post_id":"cjx077xue001h1q227a6icgkc","tag_id":"cjx077xw9007k1q22oclknx0g","_id":"cjx077xwb00801q22tkpru4dz"},{"post_id":"cjx077xuf001m1q229e38f0nf","tag_id":"cjx077xwb007z1q22n1k8pjcb","_id":"cjx077xwb00841q226s7guw1o"},{"post_id":"cjx077xug001n1q2245dugo3e","tag_id":"cjx077xwb00831q22wjo5c9ea","_id":"cjx077xwc008e1q229t69ks68"},{"post_id":"cjx077xug001n1q2245dugo3e","tag_id":"cjx077xud001e1q223wrd1a2r","_id":"cjx077xwc008h1q222scyvv4y"},{"post_id":"cjx077xug001n1q2245dugo3e","tag_id":"cjx077xwb00871q22hsgi0t09","_id":"cjx077xwc008j1q227080gs5u"},{"post_id":"cjx077xug001n1q2245dugo3e","tag_id":"cjx077xwc008a1q22cinxgy3r","_id":"cjx077xwd008m1q22jg4ukox9"},{"post_id":"cjx077xuj001v1q22x57cyscx","tag_id":"cjx077xuh001r1q22h7jqk2yo","_id":"cjx077xwd008o1q22nd0nb89y"},{"post_id":"cjx077xuj001v1q22x57cyscx","tag_id":"cjx077xwc008d1q22756s8cn4","_id":"cjx077xwd008r1q22vqh8pqzn"},{"post_id":"cjx077xuj001v1q22x57cyscx","tag_id":"cjx077xwc008i1q223e91wnk4","_id":"cjx077xwe008t1q227l4tc08l"},{"post_id":"cjx077xul00201q22cw2itozv","tag_id":"cjx077xuh001r1q22h7jqk2yo","_id":"cjx077xwe008w1q2259hx9dq0"},{"post_id":"cjx077xul00201q22cw2itozv","tag_id":"cjx077xwd008n1q220vz1djr6","_id":"cjx077xwe008y1q22h86nbfc7"},{"post_id":"cjx077xum00231q22el5je8lj","tag_id":"cjx077xuh001r1q22h7jqk2yo","_id":"cjx077xwf00911q22b300jzhi"},{"post_id":"cjx077xum00231q22el5je8lj","tag_id":"cjx077xwc008d1q22756s8cn4","_id":"cjx077xwf00931q22r7phigs0"},{"post_id":"cjx077xun00281q229l9f6m9f","tag_id":"cjx077xwe008x1q2234dlxq68","_id":"cjx077xwf00961q22830q7dhb"},{"post_id":"cjx077xuo002b1q226v1sw7a1","tag_id":"cjx077xwf00921q22lwse520q","_id":"cjx077xwf00981q221oqqvoj9"},{"post_id":"cjx077xuq002g1q22h1ikfxjb","tag_id":"cjx077xwf00971q22c27nxf25","_id":"cjx077xwh009d1q22k67ke61r"},{"post_id":"cjx077xuq002g1q22h1ikfxjb","tag_id":"cjx077xwf009a1q225dldf98x","_id":"cjx077xwh009e1q22jju5rieu"},{"post_id":"cjx077xuq002g1q22h1ikfxjb","tag_id":"cjx077xud001e1q223wrd1a2r","_id":"cjx077xwh009g1q22lo0i5wr6"},{"post_id":"cjx077xur002j1q22aymjic4a","tag_id":"cjx077xwg009c1q22ysggaxw7","_id":"cjx077xwh009h1q22fhlvnpwk"},{"post_id":"cjx077xur002j1q22aymjic4a","tag_id":"cjx077xtq00081q225slg0119","_id":"cjx077xwh009j1q221nffaqd7"},{"post_id":"cjx077xus002m1q22pm6tgqqm","tag_id":"cjx077xwh009f1q22k3db9cnm","_id":"cjx077xwh009k1q22c0tnvw1e"},{"post_id":"cjx077xus002m1q22pm6tgqqm","tag_id":"cjx077xud001e1q223wrd1a2r","_id":"cjx077xwh009m1q22me7i5sfz"},{"post_id":"cjx077xut002p1q227hx5yf5u","tag_id":"cjx077xwh009i1q22ughsap67","_id":"cjx077xwi009p1q22s6xqq5d9"},{"post_id":"cjx077xut002p1q227hx5yf5u","tag_id":"cjx077xud001e1q223wrd1a2r","_id":"cjx077xwi009q1q22lc8sqm5t"},{"post_id":"cjx077xut002p1q227hx5yf5u","tag_id":"cjx077xwh009l1q220229ta3j","_id":"cjx077xwi009s1q22622avph5"},{"post_id":"cjx077xut002p1q227hx5yf5u","tag_id":"cjx077xwh009n1q22xq013ebp","_id":"cjx077xwi009t1q22bydbinxo"},{"post_id":"cjx077xuu002s1q22i79du3cv","tag_id":"cjx077xwh009o1q226iymg6xa","_id":"cjx077xwi009v1q22jm8xjkco"},{"post_id":"cjx077xuu002s1q22i79du3cv","tag_id":"cjx077xwi009r1q22on663xea","_id":"cjx077xwi009w1q22udqrqyfs"},{"post_id":"cjx077xuw002v1q22yb1gm738","tag_id":"cjx077xwh009i1q22ughsap67","_id":"cjx077xwj009z1q22huf45mkx"},{"post_id":"cjx077xuw002v1q22yb1gm738","tag_id":"cjx077xwi009x1q22wtkb9nm1","_id":"cjx077xwj00a01q22goz5vs9p"},{"post_id":"cjx077xuw002w1q22urfjaxkq","tag_id":"cjx077xtw000k1q228x22j38z","_id":"cjx077xwj00a21q22meumdigq"},{"post_id":"cjx077xuw002w1q22urfjaxkq","tag_id":"cjx077xwe008x1q2234dlxq68","_id":"cjx077xwj00a31q22rowrhfkg"},{"post_id":"cjx077xuy00311q2255ikwus8","tag_id":"cjx077xwj00a11q22zdsuadm2","_id":"cjx077xwj00a61q22o2h2gxf7"},{"post_id":"cjx077xuy00311q2255ikwus8","tag_id":"cjx077xwj00a41q22f3tq9h0n","_id":"cjx077xwk00a71q22br704dix"},{"post_id":"cjx077xv0003a1q22ugpdfwj7","tag_id":"cjx077xwj00a51q22cpk9g18v","_id":"cjx077xwl00a91q22w26g4opw"},{"post_id":"cjx077xv1003e1q22sadvsep1","tag_id":"cjx077xwk00a81q22xi3nnf1v","_id":"cjx077xwl00ac1q22yhiy9kjv"},{"post_id":"cjx077xv1003e1q22sadvsep1","tag_id":"cjx077xwl00aa1q221yayck0o","_id":"cjx077xwl00ad1q22g7bmzt4x"},{"post_id":"cjx077xv1003e1q22sadvsep1","tag_id":"cjx077xuu002r1q22csl68ixl","_id":"cjx077xwl00af1q22nfq57x0r"},{"post_id":"cjx077xv2003h1q22skpu0fkb","tag_id":"cjx077xwl00ab1q22ceqhhlj2","_id":"cjx077xwm00ah1q22669wbagx"},{"post_id":"cjx077xv2003h1q22skpu0fkb","tag_id":"cjx077xwl00ae1q22iwzursao","_id":"cjx077xwm00ai1q22592rxnig"},{"post_id":"cjx077xv4003k1q22ntxuri48","tag_id":"cjx077xwk00a81q22xi3nnf1v","_id":"cjx077xwm00ak1q22vkzzcbed"},{"post_id":"cjx077xv4003k1q22ntxuri48","tag_id":"cjx077xuu002r1q22csl68ixl","_id":"cjx077xwm00al1q221lzu0wh5"},{"post_id":"cjx077xv5003o1q22adt15k7h","tag_id":"cjx077xwm00aj1q22w3sovm1x","_id":"cjx077xwn00ao1q22opjg2pjh"},{"post_id":"cjx077xv5003o1q22adt15k7h","tag_id":"cjx077xud001e1q223wrd1a2r","_id":"cjx077xwn00ap1q229asy1zd6"},{"post_id":"cjx077xv5003o1q22adt15k7h","tag_id":"cjx077xvt005i1q22op6wz6td","_id":"cjx077xwn00ar1q22y1jz3nqo"},{"post_id":"cjx077xv6003r1q22nsekojhr","tag_id":"cjx077xwm00an1q22a5budrmg","_id":"cjx077xwn00as1q22v92wx91q"},{"post_id":"cjx077xv7003v1q22jscr852h","tag_id":"cjx077xwn00aq1q22vq9h02o2","_id":"cjx077xwn00av1q22h9o4esp7"},{"post_id":"cjx077xv7003v1q22jscr852h","tag_id":"cjx077xwj00a11q22zdsuadm2","_id":"cjx077xwn00aw1q22w5opj55s"},{"post_id":"cjx077xv8003x1q22y8qe6iwl","tag_id":"cjx077xwn00au1q22ssnzyz15","_id":"cjx077xwo00az1q22mc769am0"},{"post_id":"cjx077xv8003x1q22y8qe6iwl","tag_id":"cjx077xwo00ax1q22khywbaj1","_id":"cjx077xwo00b01q22xscsrs1t"},{"post_id":"cjx077xv900401q22h8eknr5x","tag_id":"cjx077xwo00ay1q22cznqddvr","_id":"cjx077xwo00b21q225w49y2gk"},{"post_id":"cjx077xv900421q22pe7d19z4","tag_id":"cjx077xwo00b11q225h6e7nyg","_id":"cjx077xwp00b51q22s885khz8"},{"post_id":"cjx077xv900421q22pe7d19z4","tag_id":"cjx077xwo00b31q22p1jnlqbd","_id":"cjx077xwp00b61q22b4fgc8r2"},{"post_id":"cjx077xvb00451q22uqa9upli","tag_id":"cjx077xwo00ay1q22cznqddvr","_id":"cjx077xwq00ba1q22jt89lxfr"},{"post_id":"cjx077xvb00451q22uqa9upli","tag_id":"cjx077xud001e1q223wrd1a2r","_id":"cjx077xwq00bb1q22wbg8lpcj"},{"post_id":"cjx077xvb00451q22uqa9upli","tag_id":"cjx077xwp00b71q2248fuvoew","_id":"cjx077xwq00bd1q22botscs92"},{"post_id":"cjx077xvb00451q22uqa9upli","tag_id":"cjx077xwp00b81q22xxi0shu0","_id":"cjx077xwq00be1q22ejstrgfk"},{"post_id":"cjx077xvc00471q227jj7v6cf","tag_id":"cjx077xwo00ay1q22cznqddvr","_id":"cjx077xwq00bg1q22ds7tzv3k"},{"post_id":"cjx077xvc00471q227jj7v6cf","tag_id":"cjx077xwq00bc1q22pffy8vr0","_id":"cjx077xwq00bh1q22wfvemci3"},{"post_id":"cjx077xve00491q22xwsku6kz","tag_id":"cjx077xwo00ay1q22cznqddvr","_id":"cjx077xwr00bj1q22uzoppys3"},{"post_id":"cjx077xvf004c1q22khjqunwz","tag_id":"cjx077xwo00ay1q22cznqddvr","_id":"cjx077xwr00bl1q22fm9944rp"},{"post_id":"cjx077xvf004c1q22khjqunwz","tag_id":"cjx077xuh001r1q22h7jqk2yo","_id":"cjx077xwr00bm1q22l1k1qwk8"},{"post_id":"cjx077xvg004d1q22xo0bjzg7","tag_id":"cjx077xwo00ay1q22cznqddvr","_id":"cjx077xws00bp1q22ijlqp0vj"},{"post_id":"cjx077xvg004d1q22xo0bjzg7","tag_id":"cjx077xuh001r1q22h7jqk2yo","_id":"cjx077xws00bq1q22mftfqqow"},{"post_id":"cjx077xvg004d1q22xo0bjzg7","tag_id":"cjx077xwc008d1q22756s8cn4","_id":"cjx077xws00bs1q220pzgzivc"},{"post_id":"cjx077xvh004g1q22st78k597","tag_id":"cjx077xwr00bo1q22gci8o177","_id":"cjx077xws00bv1q222hp4owh0"},{"post_id":"cjx077xvh004g1q22st78k597","tag_id":"cjx077xws00br1q22qtxl1u47","_id":"cjx077xws00bw1q22s4ulwid8"},{"post_id":"cjx077xvh004g1q22st78k597","tag_id":"cjx077xws00bt1q22h55p0j1v","_id":"cjx077xwt00by1q22vayprmdl"},{"post_id":"cjx077xvi004j1q22labr06ia","tag_id":"cjx077xwo00ay1q22cznqddvr","_id":"cjx077xwt00bz1q22ivskpcbg"},{"post_id":"cjx077xvj004n1q22d1j078w2","tag_id":"cjx077xws00bx1q22nboyg45m","_id":"cjx077xwt00c11q22xjznz6fz"},{"post_id":"cjx077xvj004n1q22d1j078w2","tag_id":"cjx077xu700111q222n8q2num","_id":"cjx077xwt00c21q22a8w5m2ek"},{"post_id":"cjx077xvk004q1q22ia88hxd3","tag_id":"cjx077xwt00c01q22uqjxijin","_id":"cjx077xwt00c51q22fh7xafr2"},{"post_id":"cjx077xvk004q1q22ia88hxd3","tag_id":"cjx077xwj00a41q22f3tq9h0n","_id":"cjx077xwu00c61q22fsngxw0s"},{"post_id":"cjx077xvm004u1q22zmd8x79a","tag_id":"cjx077xwt00c41q226i8k3zyj","_id":"cjx077xwu00c91q22it9apleq"},{"post_id":"cjx077xvm004u1q22zmd8x79a","tag_id":"cjx077xwu00c71q22zctay6fs","_id":"cjx077xwu00ca1q222w4ceanr"},{"post_id":"cjx077xvn004x1q22rxjic1jx","tag_id":"cjx077xwu00c81q22rcui0c4k","_id":"cjx077xwu00cc1q22kf5zdkdw"},{"post_id":"cjx077xvo00531q22en2xb3ld","tag_id":"cjx077xwf00971q22c27nxf25","_id":"cjx077xwv00cf1q22f1qhqdsb"},{"post_id":"cjx077xvo00531q22en2xb3ld","tag_id":"cjx077xwf009a1q225dldf98x","_id":"cjx077xwv00cg1q22nwyt9w7k"},{"post_id":"cjx077xvo00531q22en2xb3ld","tag_id":"cjx077xud001e1q223wrd1a2r","_id":"cjx077xwv00ci1q225vcdf1qd"},{"post_id":"cjx077xvq00551q22na552y5m","tag_id":"cjx077xwv00ce1q22jbofndzj","_id":"cjx077xww00cj1q22qnz9p3lo"},{"post_id":"cjx077xvr005a1q22fatuk7cr","tag_id":"cjx077xwv00ce1q22jbofndzj","_id":"cjx077xww00cl1q22huzvb704"},{"post_id":"cjx077xvs005d1q22rvjgulun","tag_id":"cjx077xww00ck1q22plrntxwf","_id":"cjx077xww00co1q22fszq3abn"},{"post_id":"cjx077xvs005d1q22rvjgulun","tag_id":"cjx077xwl00ae1q22iwzursao","_id":"cjx077xww00cp1q223os06mhe"},{"post_id":"cjx077xvt005h1q22kf6lon20","tag_id":"cjx077xww00cn1q22dx70ysai","_id":"cjx077xwx00cr1q22dh15syp2"},{"post_id":"cjx077xvu005k1q22tmxqf7lj","tag_id":"cjx077xwx00cq1q229583nr2w","_id":"cjx077xwx00cs1q22ffkdkydk"}],"Tag":[{"name":"AutoMapper","_id":"cjx077xtm00031q22699m4jt4"},{"name":"C#","_id":"cjx077xtq00081q225slg0119"},{"name":"Axios","_id":"cjx077xtt000d1q22ei8w2bnj"},{"name":"Node JS","_id":"cjx077xtw000k1q228x22j38z"},{"name":"HttpWebRequest","_id":"cjx077xu1000p1q22ewdj0xen"},{"name":"筆記","_id":"cjx077xu700111q222n8q2num"},{"name":"CV","_id":"cjx077xua00161q22mvj0328v"},{"name":"Docker","_id":"cjx077xud001e1q223wrd1a2r"},{"name":"Nginx","_id":"cjx077xuf001l1q22pw3zvlio"},{"name":"Jenkins","_id":"cjx077xuh001r1q22h7jqk2yo"},{"name":"Redis","_id":"cjx077xup002d1q22lu670ftv"},{"name":"Docker compose","_id":"cjx077xur002l1q22veqkoqlh"},{"name":"Visual Studio Code","_id":"cjx077xuu002r1q22csl68ixl"},{"name":"ELK Stack","_id":"cjx077xv5003p1q22akgg49vs"},{"name":"Elasticsearch","_id":"cjx077xv900411q22ctk4em86"},{"name":"Kibana","_id":"cjx077xvb00461q22ldjl9uvo"},{"name":"Logstash","_id":"cjx077xvf004b1q22humm9rxi"},{"name":"ESLint","_id":"cjx077xvk004o1q22zzimr7bf"},{"name":"Javascriptd","_id":"cjx077xvn004v1q220xqrff7o"},{"name":"Express","_id":"cjx077xvo00521q22rzdu4ufh"},{"name":"Node Js","_id":"cjx077xvr00591q22spwlmvi7"},{"name":"k8s","_id":"cjx077xvt005i1q22op6wz6td"},{"name":"GCP","_id":"cjx077xvx005p1q225lsw2fiw"},{"name":"GCP Registry","_id":"cjx077xvy005x1q2240ieb9lq"},{"name":"Gcloud","_id":"cjx077xw000691q22xm94hc1s"},{"name":"GRPC","_id":"cjx077xw1006c1q22vj8y6xd3"},{"name":"Gitea","_id":"cjx077xw1006h1q22p5ir7sa6"},{"name":"Git","_id":"cjx077xw1006m1q22g3dfemut"},{"name":"Gitlab","_id":"cjx077xw2006q1q226wdemr1w"},{"name":"Go","_id":"cjx077xw6006y1q22zodg22lb"},{"name":"Gogs","_id":"cjx077xw700761q22iq9fbexr"},{"name":"webhook","_id":"cjx077xw7007b1q2254xbgp8f"},{"name":"GCP Pub/Sub","_id":"cjx077xw9007k1q22oclknx0g"},{"name":"Node.js","_id":"cjx077xw9007p1q22pk51hlt5"},{"name":"Google OAuth","_id":"cjx077xwb007z1q22n1k8pjcb"},{"name":"Grafana","_id":"cjx077xwb00831q22wjo5c9ea"},{"name":"InfluxDb","_id":"cjx077xwb00871q22hsgi0t09"},{"name":"telegraf","_id":"cjx077xwc008a1q22cinxgy3r"},{"name":"Pipeline","_id":"cjx077xwc008d1q22756s8cn4"},{"name":"Blue Ocean","_id":"cjx077xwc008i1q223e91wnk4"},{"name":"Pipeline Parallel","_id":"cjx077xwd008n1q220vz1djr6"},{"name":"JWT","_id":"cjx077xwe008x1q2234dlxq68"},{"name":"Kafka","_id":"cjx077xwf00921q22lwse520q"},{"name":"Kubernetes","_id":"cjx077xwf00971q22c27nxf25"},{"name":"kubectl","_id":"cjx077xwf009a1q225dldf98x"},{"name":"Linq","_id":"cjx077xwg009c1q22ysggaxw7"},{"name":"Mysql","_id":"cjx077xwh009f1q22k3db9cnm"},{"name":".net core","_id":"cjx077xwh009i1q22ughsap67"},{"name":".net core cli","_id":"cjx077xwh009l1q220229ta3j"},{"name":"web api","_id":"cjx077xwh009n1q22xq013ebp"},{"name":".Net Core","_id":"cjx077xwh009o1q226iymg6xa"},{"name":"Nlog","_id":"cjx077xwi009r1q22on663xea"},{"name":"Linux build","_id":"cjx077xwi009x1q22wtkb9nm1"},{"name":"Node js","_id":"cjx077xwj00a11q22zdsuadm2"},{"name":"VsCode","_id":"cjx077xwj00a41q22f3tq9h0n"},{"name":"Protocol buffers","_id":"cjx077xwj00a51q22cpk9g18v"},{"name":"Python","_id":"cjx077xwk00a81q22xi3nnf1v"},{"name":"Django","_id":"cjx077xwl00aa1q221yayck0o"},{"name":"python","_id":"cjx077xwl00ab1q22ceqhhlj2"},{"name":"redis","_id":"cjx077xwl00ae1q22iwzursao"},{"name":"Rancher","_id":"cjx077xwm00aj1q22w3sovm1x"},{"name":"SQL-Server","_id":"cjx077xwm00an1q22a5budrmg"},{"name":"Sequelize","_id":"cjx077xwn00aq1q22vq9h02o2"},{"name":"Slack","_id":"cjx077xwn00au1q22ssnzyz15"},{"name":"Incoming Webhooks","_id":"cjx077xwo00ax1q22khywbaj1"},{"name":"SonarQube","_id":"cjx077xwo00ay1q22cznqddvr"},{"name":"SonarLint","_id":"cjx077xwo00b11q225h6e7nyg"},{"name":"Sonqrqube","_id":"cjx077xwo00b31q22p1jnlqbd"},{"name":"docker-compose","_id":"cjx077xwp00b71q2248fuvoew"},{"name":"PostgreSql","_id":"cjx077xwp00b81q22xxi0shu0"},{"name":"SyleCop","_id":"cjx077xwq00bc1q22pffy8vr0"},{"name":"sonarlint","_id":"cjx077xwr00bo1q22gci8o177"},{"name":"sonarqube","_id":"cjx077xws00br1q22qtxl1u47"},{"name":"Visual Studio","_id":"cjx077xws00bt1q22h55p0j1v"},{"name":"Visual Studio Code 存檔自動排版","_id":"cjx077xws00bx1q22nboyg45m"},{"name":"Vue js","_id":"cjx077xwt00c01q22uqjxijin"},{"name":"android","_id":"cjx077xwt00c41q226i8k3zyj"},{"name":"WebView","_id":"cjx077xwu00c71q22zctay6fs"},{"name":"curl","_id":"cjx077xwu00c81q22rcui0c4k"},{"name":"mac","_id":"cjx077xwv00ce1q22jbofndzj"},{"name":"redis lua script","_id":"cjx077xww00ck1q22plrntxwf"},{"name":"Surge","_id":"cjx077xww00cn1q22dx70ysai"},{"name":"Hexo","_id":"cjx077xwx00cq1q229583nr2w"}]}}